editstat.cpp 1: 
\CPP\LIB\TSWIN\tswin.hpp 1: 
\CPP\LIB\TSLIB\tslib.hpp 1: 
\CPP\LIB\TSLIB\tslib.hpp 2: 
\CPP\LIB\TSLIB\tslib.hpp 3: 
\CPP\LIB\TSLIB\tslib.hpp 4: 
\CPP\LIB\TSLIB\tslib.hpp 5: 
\CPP\LIB\TSLIB\tslib.hpp 6: 
\CPP\LIB\TSLIB\tslib.hpp 7:  
\CPP\LIB\TSLIB\tslib.hpp 8: 
\CPP\LIB\TSLIB\tslib.hpp 9: 
\CPP\LIB\TSLIB\tslib.hpp 10: 
\CPP\LIB\TSLIB\tslib.hpp 11: 
\CPP\LIB\TSLIB\tslib.hpp 12: 
\CPP\LIB\TSLIB\tslib.hpp 13: 
\CPP\LIB\TSLIB\tslib.hpp 14: 
\CPP\LIB\TSLIB\tslib.hpp 15: 
\CPP\LIB\TSLIB\tslib.hpp 16: 
\CPP\LIB\TSLIB\tslib.hpp 17:  
\CPP\LIB\TSLIB\tslib.hpp 18: 
\CPP\LIB\TSLIB\tslib.hpp 19: 
\CPP\LIB\TSLIB\tslib.hpp 20: 
\CPP\LIB\TSLIB\tslib.hpp 21: 
\CPP\LIB\TSLIB\tslib.hpp 22: 
\CPP\LIB\TSLIB\tslib.hpp 23: 
\CPP\LIB\TSLIB\tslib.hpp 24: 
\CPP\LIB\TSLIB\tslib.hpp 25: 
\CPP\LIB\TSLIB\tslib.hpp 26: 
\CPP\LIB\TSLIB\tslib.hpp 27: typedef unsigned char  byte;
\CPP\LIB\TSLIB\tslib.hpp 28: typedef unsigned short word;
\CPP\LIB\TSLIB\tslib.hpp 29: typedef          short sword;
\CPP\LIB\TSLIB\tslib.hpp 30: typedef unsigned long  dword;
\CPP\LIB\TSLIB\tslib.hpp 31: typedef          long  sdword;
\CPP\LIB\TSLIB\tslib.hpp 32: typedef unsigned char  bool;
\CPP\LIB\TSLIB\tslib.hpp 33: 
\CPP\LIB\TSLIB\tslib.hpp 34: 
\CPP\LIB\TSLIB\tslib.hpp 35: 
\CPP\LIB\TSLIB\tslib.hpp 36: 
\CPP\LIB\TSLIB\tslib.hpp 37: 
\CPP\LIB\TSLIB\tslib.hpp 38: 
\CPP\LIB\TSLIB\tslib.hpp 39: 
\CPP\LIB\TSLIB\tslib.hpp 40: 
\CPP\LIB\TSLIB\tslib.hpp 41: 
\CPP\LIB\TSLIB\tslib.hpp 42: 
\CPP\LIB\TSLIB\tslib.hpp 43: 
\CPP\LIB\TSLIB\tslib.hpp 44: 
\CPP\LIB\TSLIB\tslib.hpp 45: 
\CPP\LIB\TSLIB\tslib.hpp 46: 
\CPP\LIB\TSLIB\tslib.hpp 47: 
\CPP\LIB\TSLIB\tslib.hpp 48: 
\CPP\LIB\TSLIB\tslib.hpp 49: 
\CPP\LIB\TSLIB\tslib.hpp 50: 
\CPP\LIB\TSLIB\tslib.hpp 51: 
\CPP\LIB\TSLIB\tslib.hpp 52: 
\CPP\LIB\TSLIB\tslib.hpp 53: 
\CPP\LIB\TSLIB\tslib.hpp 54: 
\CPP\LIB\TSLIB\tslib.hpp 55: 
\CPP\LIB\TSLIB\tslib.hpp 56: 
\CPP\LIB\TSLIB\tslib.hpp 57: 
\CPP\LIB\TSLIB\tslib.hpp 58: 
\CPP\LIB\TSLIB\tslib.hpp 59: 
\CPP\LIB\TSLIB\tslib.hpp 60: 
\CPP\LIB\TSLIB\tslib.hpp 61: 
\CPP\LIB\TSLIB\tslib.hpp 62: 
\CPP\LIB\TSLIB\tslib.hpp 63: 
\CPP\LIB\TSLIB\tslib.hpp 64: 
\CPP\LIB\TSLIB\tslib.hpp 65: 
\CPP\LIB\TSLIB\tslib.hpp 66: 
\CPP\LIB\TSLIB\tslib.hpp 67: 
\CPP\LIB\TSLIB\tslib.hpp 68: 
\CPP\LIB\TSLIB\tslib.hpp 69: 
\CPP\LIB\TSLIB\tslib.hpp 70: 
\CPP\LIB\TSLIB\tslib.hpp 71: 
\CPP\LIB\TSLIB\tslib.hpp 72: 
\CPP\LIB\TSLIB\tslib.hpp 73: 
\CPP\LIB\TSLIB\tslib.hpp 74: 
\CPP\LIB\TSLIB\tslib.hpp 75: 
\CPP\LIB\TSLIB\tslib.hpp 76: 
\CPP\LIB\TSLIB\tslib.hpp 77: 
\CPP\LIB\TSLIB\tslib.hpp 78: 
\CPP\LIB\TSLIB\tslib.hpp 79: 
\CPP\LIB\TSLIB\tslib.hpp 80: 
\CPP\LIB\TSLIB\tslib.hpp 81: 
\CPP\LIB\TSLIB\tslib.hpp 82: 
\CPP\LIB\TSLIB\tslib.hpp 83: 
\CPP\LIB\TSLIB\tslib.hpp 84: 
\CPP\LIB\TSLIB\tslib.hpp 85: 
\CPP\LIB\TSLIB\tslib.hpp 86: class String;
\CPP\LIB\TSLIB\tslib.hpp 87: 
\CPP\LIB\TSLIB\tslib.hpp 88: const bool TRUE  = 1;
\CPP\LIB\TSLIB\tslib.hpp 89: const bool FALSE = 0;
\CPP\LIB\TSLIB\tslib.hpp 90: 
\CPP\LIB\TSLIB\tslib.hpp 91: 
\CPP\LIB\TSLIB\tslib.hpp 92: 
\CPP\LIB\TSLIB\tslib.hpp 93: 
\CPP\LIB\TSLIB\tslib.hpp 94: 
\CPP\LIB\TSLIB\tslib.hpp 95: 
\CPP\LIB\TSLIB\tslib.hpp 96: 
\CPP\LIB\TSLIB\tslib.hpp 97: 
\CPP\LIB\TSLIB\tslib.hpp 98: 
\CPP\LIB\TSLIB\tslib.hpp 99: 
\CPP\LIB\TSLIB\tslib.hpp 100: 
\CPP\LIB\TSLIB\tslib.hpp 101: 
\CPP\LIB\TSLIB\tslib.hpp 102: 
\CPP\LIB\TSLIB\tslib.hpp 103: 
\CPP\LIB\TSLIB\tslib.hpp 104: 
\CPP\LIB\TSLIB\tslib.hpp 105: 
\CPP\LIB\TSLIB\tslib.hpp 106: 
\CPP\LIB\TSLIB\tslib.hpp 107: 
\CPP\LIB\TSLIB\tslib.hpp 108: 
\CPP\LIB\TSLIB\tslib.hpp 109: 
\CPP\LIB\TSLIB\tslib.hpp 110: 
\CPP\LIB\TSLIB\tslib.hpp 111: inline bool
\CPP\LIB\TSLIB\tslib.hpp 112: TESTBIT(word val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 113: {
\CPP\LIB\TSLIB\tslib.hpp 114: return (bool)!!(val & (1<<bit));
\CPP\LIB\TSLIB\tslib.hpp 115: }
\CPP\LIB\TSLIB\tslib.hpp 116: 
\CPP\LIB\TSLIB\tslib.hpp 117: inline bool
\CPP\LIB\TSLIB\tslib.hpp 118: TESTBIT(int val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 119: {
\CPP\LIB\TSLIB\tslib.hpp 120: return (bool)!!(val & (1<<bit));
\CPP\LIB\TSLIB\tslib.hpp 121: }
\CPP\LIB\TSLIB\tslib.hpp 122: 
\CPP\LIB\TSLIB\tslib.hpp 123: inline bool
\CPP\LIB\TSLIB\tslib.hpp 124: TESTBIT(dword val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 125: {
\CPP\LIB\TSLIB\tslib.hpp 126: return (bool)!!(val & (1L<<bit));
\CPP\LIB\TSLIB\tslib.hpp 127: }
\CPP\LIB\TSLIB\tslib.hpp 128: 
\CPP\LIB\TSLIB\tslib.hpp 129: inline bool
\CPP\LIB\TSLIB\tslib.hpp 130: TESTBIT(long val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 131: {
\CPP\LIB\TSLIB\tslib.hpp 132: return (bool)!!(val & (1L<<bit));
\CPP\LIB\TSLIB\tslib.hpp 133: }
\CPP\LIB\TSLIB\tslib.hpp 134: 
\CPP\LIB\TSLIB\tslib.hpp 135: inline void
\CPP\LIB\TSLIB\tslib.hpp 136: SETBIT(word& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 137: {
\CPP\LIB\TSLIB\tslib.hpp 138: val |= word(1<<bit);
\CPP\LIB\TSLIB\tslib.hpp 139: }
\CPP\LIB\TSLIB\tslib.hpp 140: 
\CPP\LIB\TSLIB\tslib.hpp 141: inline void
\CPP\LIB\TSLIB\tslib.hpp 142: SETBIT(int& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 143: {
\CPP\LIB\TSLIB\tslib.hpp 144: val |= int(1<<bit);
\CPP\LIB\TSLIB\tslib.hpp 145: }
\CPP\LIB\TSLIB\tslib.hpp 146: 
\CPP\LIB\TSLIB\tslib.hpp 147: inline void
\CPP\LIB\TSLIB\tslib.hpp 148: SETBIT(dword& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 149: {
\CPP\LIB\TSLIB\tslib.hpp 150: val |= dword(1L<<bit);
\CPP\LIB\TSLIB\tslib.hpp 151: }
\CPP\LIB\TSLIB\tslib.hpp 152: 
\CPP\LIB\TSLIB\tslib.hpp 153: inline void
\CPP\LIB\TSLIB\tslib.hpp 154: SETBIT(long& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 155: {
\CPP\LIB\TSLIB\tslib.hpp 156: val |= long(1L<<bit);
\CPP\LIB\TSLIB\tslib.hpp 157: }
\CPP\LIB\TSLIB\tslib.hpp 158: 
\CPP\LIB\TSLIB\tslib.hpp 159: inline void
\CPP\LIB\TSLIB\tslib.hpp 160: CLEARBIT(word& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 161: {
\CPP\LIB\TSLIB\tslib.hpp 162: val &= word(~(1<<bit));
\CPP\LIB\TSLIB\tslib.hpp 163: }
\CPP\LIB\TSLIB\tslib.hpp 164: 
\CPP\LIB\TSLIB\tslib.hpp 165: inline void
\CPP\LIB\TSLIB\tslib.hpp 166: CLEARBIT(int& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 167: {
\CPP\LIB\TSLIB\tslib.hpp 168: val &= ~(1<<bit);
\CPP\LIB\TSLIB\tslib.hpp 169: }
\CPP\LIB\TSLIB\tslib.hpp 170: 
\CPP\LIB\TSLIB\tslib.hpp 171: inline void
\CPP\LIB\TSLIB\tslib.hpp 172: CLEARBIT(dword& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 173: {
\CPP\LIB\TSLIB\tslib.hpp 174: val &= ~(1L<<bit);
\CPP\LIB\TSLIB\tslib.hpp 175: }
\CPP\LIB\TSLIB\tslib.hpp 176: 
\CPP\LIB\TSLIB\tslib.hpp 177: inline void
\CPP\LIB\TSLIB\tslib.hpp 178: CLEARBIT(long& val,int bit)
\CPP\LIB\TSLIB\tslib.hpp 179: {
\CPP\LIB\TSLIB\tslib.hpp 180: val &= ~(1L<<bit);
\CPP\LIB\TSLIB\tslib.hpp 181: }
\CPP\LIB\TSLIB\tslib.hpp 182: 
\CPP\LIB\TSLIB\tslib.hpp 183: 
\CPP\LIB\TSLIB\tslib.hpp 184: 
\CPP\LIB\TSLIB\tslib.hpp 185: 
\CPP\LIB\TSLIB\tslib.hpp 186: 
\CPP\LIB\TSLIB\tslib.hpp 187: 
\CPP\LIB\TSLIB\tslib.hpp 188: 
\CPP\LIB\TSLIB\tslib.hpp 189: 
\CPP\LIB\TSLIB\tslib.hpp 190: 
\CPP\LIB\TSLIB\tslib.hpp 191: 
\CPP\LIB\TSLIB\tslib.hpp 192: 
\CPP\LIB\TSLIB\tslib.hpp 193: 
\CPP\LIB\TSLIB\tslib.hpp 194: 
\CPP\LIB\TSLIB\tslib.hpp 195: 
\CPP\LIB\TSLIB\tslib.hpp 196: 
\CPP\LIB\TSLIB\tslib.hpp 197: word crc(const char *);
\CPP\LIB\TSLIB\tslib.hpp 198: word crc(const void *,unsigned);
\CPP\LIB\TSLIB\tslib.hpp 199: word upcrc(const char *);
\CPP\LIB\TSLIB\tslib.hpp 200: 
\CPP\LIB\TSLIB\tslib.hpp 201: 
\CPP\LIB\TSLIB\tslib.hpp 202: 
\CPP\LIB\TSLIB\tslib.hpp 203: dword crc32   (const char *);
\CPP\LIB\TSLIB\tslib.hpp 204: dword upcrc32 (const char *);
\CPP\LIB\TSLIB\tslib.hpp 205: dword crc32   (const void *,unsigned);
\CPP\LIB\TSLIB\tslib.hpp 206: 
\CPP\LIB\TSLIB\tslib.hpp 207: void  sound(word freq);
\CPP\LIB\TSLIB\tslib.hpp 208: void  stopsound();
\CPP\LIB\TSLIB\tslib.hpp 209: void  soundclick();
\CPP\LIB\TSLIB\tslib.hpp 210: 
\CPP\LIB\TSLIB\tslib.hpp 211: extern "C"
\CPP\LIB\TSLIB\tslib.hpp 212: {
\CPP\LIB\TSLIB\tslib.hpp 213: 
\CPP\LIB\TSLIB\tslib.hpp 214: 
\CPP\LIB\TSLIB\tslib.hpp 215: const seek_set           = 0;
\CPP\LIB\TSLIB\tslib.hpp 216: const seek_cur           = 1;
\CPP\LIB\TSLIB\tslib.hpp 217: const seek_end           = 2;
\CPP\LIB\TSLIB\tslib.hpp 218: }
\CPP\LIB\TSLIB\tslib.hpp 219: 
\CPP\LIB\TSLIB\tslib.hpp 220: 
\CPP\LIB\TSLIB\tslib.hpp 221: bool get_ini_var(const char *fname,const char *varname,char *var,int max );
\CPP\LIB\TSLIB\tslib.hpp 222: bool set_ini_var(const char *fname,const char *varname,const char *var);
\CPP\LIB\TSLIB\tslib.hpp 223: 
\CPP\LIB\TSLIB\tslib.hpp 224: 
\CPP\LIB\TSLIB\tslib.hpp 225: bool   ts_MakeFullDir(char *dir);                      
\CPP\LIB\TSLIB\tslib.hpp 226: bool   ts_DirExists(char *dir);                        
\CPP\LIB\TSLIB\tslib.hpp 227: long   ts_CopyFile(char *from,char *to,int bufsize);   
\CPP\LIB\TSLIB\tslib.hpp 228: String ts_ResolveDir(char *dir);                       
\CPP\LIB\TSLIB\tslib.hpp 229: bool   ts_IsFullPath(char *s);                         
\CPP\LIB\TSLIB\tslib.hpp 230: void   ts_MakeInputPath(String& s);                    
\CPP\LIB\TSLIB\tslib.hpp 231: void   ts_MakeInputPath(char *s);                      
\CPP\LIB\TSLIB\tslib.hpp 232: bool   ts_SyncFileDate(char *fnSource,char *fn);       
\CPP\LIB\TSLIB\tslib.hpp 233: 
\CPP\LIB\TSLIB\tslib.hpp 234: 
\CPP\LIB\TSLIB\tslib.hpp 235: 
\CPP\LIB\TSLIB\tslib.hpp 236: 
\CPP\LIB\TSLIB\tslib.hpp 237: 
\CPP\LIB\TSLIB\tslib.hpp 238: 
\CPP\LIB\TSLIB\tslib.hpp 239: int NormalizeYear( int iYearVal );
\CPP\LIB\TSLIB\tslib.hpp 240: 
\CPP\LIB\TSLIB\tslib.hpp 241: 
\CPP\LIB\TSLIB\tslib.hpp 242: 
\CPP\LIB\TSLIB\tslib.hpp 243: 
\CPP\LIB\TSLIB\tslib.hpp 244: 
\CPP\LIB\TSLIB\tslib.hpp 245: void append_backspace(char *);
\CPP\LIB\TSLIB\tslib.hpp 246: void strip_linefeed(char *);
\CPP\LIB\TSLIB\tslib.hpp 247: void strip_trailing(char *);
\CPP\LIB\TSLIB\tslib.hpp 248: void strip_leading(char *);
\CPP\LIB\TSLIB\tslib.hpp 249: void strip_all(char *);
\CPP\LIB\TSLIB\tslib.hpp 250: 
\CPP\LIB\TSLIB\tslib.hpp 251: void c2pas(char *);
\CPP\LIB\TSLIB\tslib.hpp 252: void pas2c(char *);
\CPP\LIB\TSLIB\tslib.hpp 253: 
\CPP\LIB\TSLIB\tslib.hpp 254: 
\CPP\LIB\TSLIB\tslib.hpp 255: 
\CPP\LIB\TSLIB\tslib.hpp 256: 
\CPP\LIB\TSLIB\tslib.hpp 257: void sleep_clock();
\CPP\LIB\TSLIB\tslib.hpp 258: 
\CPP\LIB\TSLIB\tslib.hpp 259: 
\CPP\LIB\TSLIB\tslib.hpp 260: 
\CPP\LIB\TSLIB\tslib.hpp 261: 
\CPP\LIB\TSLIB\tslib.hpp 262: 
\CPP\LIB\TSLIB\tslib.hpp 263: 
\CPP\LIB\TSLIB\tslib.hpp 264: 
\CPP\LIB\TSLIB\tslib.hpp 265: 
\CPP\LIB\TSLIB\tslib.hpp 266: 
\CPP\LIB\TSLIB\tslib.hpp 267: 
\CPP\LIB\TSLIB\tslib.hpp 268: 
\CPP\LIB\TSLIB\tslib.hpp 269: 
\CPP\LIB\TSLIB\tslib.hpp 270: 
\CPP\LIB\TSLIB\tslib.hpp 271: 
\CPP\LIB\TSLIB\tslib.hpp 272: 
\CPP\LIB\TSLIB\tslib.hpp 273: 
\CPP\LIB\TSLIB\tslib.hpp 274: 
\CPP\LIB\TSLIB\tslib.hpp 275: 
\CPP\LIB\TSLIB\tslib.hpp 276: 
\CPP\LIB\TSLIB\tslib.hpp 277: 
\CPP\LIB\TSLIB\tslib.hpp 278: 
\CPP\LIB\TSLIB\tslib.hpp 279: 
\CPP\LIB\TSLIB\tslib.hpp 280: 
\CPP\LIB\TSLIB\tslib.hpp 281: 
\CPP\LIB\TSLIB\tslib.hpp 282: 
\CPP\LIB\TSLIB\tslib.hpp 283: inline dword
\CPP\LIB\TSLIB\tslib.hpp 284: clockticks()
\CPP\LIB\TSLIB\tslib.hpp 285: {
\CPP\LIB\TSLIB\tslib.hpp 286: return *((dword __far *)0x46C);
\CPP\LIB\TSLIB\tslib.hpp 287: }
\CPP\LIB\TSLIB\tslib.hpp 288: 
\CPP\LIB\TSLIB\tslib.hpp 289: inline dword
\CPP\LIB\TSLIB\tslib.hpp 290: clockdiff(dword prev)
\CPP\LIB\TSLIB\tslib.hpp 291: {
\CPP\LIB\TSLIB\tslib.hpp 292: return clockticks() - prev;
\CPP\LIB\TSLIB\tslib.hpp 293: }
\CPP\LIB\TSLIB\tslib.hpp 294: 
\CPP\LIB\TSLIB\tslib.hpp 295: 
\CPP\LIB\TSLIB\tslib.hpp 296: class String
\CPP\LIB\TSLIB\tslib.hpp 297: {
\CPP\LIB\TSLIB\tslib.hpp 298: public:
\CPP\LIB\TSLIB\tslib.hpp 299: enum justification { left , right , centered };
\CPP\LIB\TSLIB\tslib.hpp 300: 
\CPP\LIB\TSLIB\tslib.hpp 301: private:
\CPP\LIB\TSLIB\tslib.hpp 302: void adjustSize();
\CPP\LIB\TSLIB\tslib.hpp 303: void adjustSize(int l);
\CPP\LIB\TSLIB\tslib.hpp 304: 
\CPP\LIB\TSLIB\tslib.hpp 305: int size;
\CPP\LIB\TSLIB\tslib.hpp 306: 
\CPP\LIB\TSLIB\tslib.hpp 307: protected:
\CPP\LIB\TSLIB\tslib.hpp 308: char *s;
\CPP\LIB\TSLIB\tslib.hpp 309: 
\CPP\LIB\TSLIB\tslib.hpp 310: public:
\CPP\LIB\TSLIB\tslib.hpp 311: String();
\CPP\LIB\TSLIB\tslib.hpp 312: String(const String&);
\CPP\LIB\TSLIB\tslib.hpp 313: String(const char *);
\CPP\LIB\TSLIB\tslib.hpp 314: String(const char,int len=1);
\CPP\LIB\TSLIB\tslib.hpp 315: ~String();
\CPP\LIB\TSLIB\tslib.hpp 316: void  clear();
\CPP\LIB\TSLIB\tslib.hpp 317: char& operator[](int i)
\CPP\LIB\TSLIB\tslib.hpp 318: {
\CPP\LIB\TSLIB\tslib.hpp 319: return s[i];
\CPP\LIB\TSLIB\tslib.hpp 320: }
\CPP\LIB\TSLIB\tslib.hpp 321: operator char*() const
\CPP\LIB\TSLIB\tslib.hpp 322: {
\CPP\LIB\TSLIB\tslib.hpp 323: return s;
\CPP\LIB\TSLIB\tslib.hpp 324: }
\CPP\LIB\TSLIB\tslib.hpp 325: 
\CPP\LIB\TSLIB\tslib.hpp 326: void operator=(const char*);
\CPP\LIB\TSLIB\tslib.hpp 327: void operator=(const String&);
\CPP\LIB\TSLIB\tslib.hpp 328: void operator=(char);
\CPP\LIB\TSLIB\tslib.hpp 329: void operator=(int);
\CPP\LIB\TSLIB\tslib.hpp 330: void operator=(long);
\CPP\LIB\TSLIB\tslib.hpp 331: void operator+=(const String&);
\CPP\LIB\TSLIB\tslib.hpp 332: void operator+=(const char *);
\CPP\LIB\TSLIB\tslib.hpp 333: void operator+=(char);
\CPP\LIB\TSLIB\tslib.hpp 334: 
\CPP\LIB\TSLIB\tslib.hpp 335: int operator==(const char *str) const;
\CPP\LIB\TSLIB\tslib.hpp 336: int operator==(const String& str) const;
\CPP\LIB\TSLIB\tslib.hpp 337: int operator!=(const char *str) const;
\CPP\LIB\TSLIB\tslib.hpp 338: int operator!=(const String& str) const;
\CPP\LIB\TSLIB\tslib.hpp 339: 
\CPP\LIB\TSLIB\tslib.hpp 340: String& operator<<(const String&);
\CPP\LIB\TSLIB\tslib.hpp 341: String& operator<<(const char *);
\CPP\LIB\TSLIB\tslib.hpp 342: String& operator<<(char);
\CPP\LIB\TSLIB\tslib.hpp 343: String& operator<<(int);
\CPP\LIB\TSLIB\tslib.hpp 344: String& operator<<(long);
\CPP\LIB\TSLIB\tslib.hpp 345: 
\CPP\LIB\TSLIB\tslib.hpp 346: int replace(const char *s,const char *r,bool = FALSE,int max_count = 0);
\CPP\LIB\TSLIB\tslib.hpp 347: int find(const char *s,bool = FALSE) const;   
\CPP\LIB\TSLIB\tslib.hpp 348: 
\CPP\LIB\TSLIB\tslib.hpp 349: int fuzzySearch(const char *pattern , int degree = 75); 
\CPP\LIB\TSLIB\tslib.hpp 350: 
\CPP\LIB\TSLIB\tslib.hpp 351: String sub(int pos,int l) const;
\CPP\LIB\TSLIB\tslib.hpp 352: 
\CPP\LIB\TSLIB\tslib.hpp 353: void del(int pos,int len);              
\CPP\LIB\TSLIB\tslib.hpp 354: void insert(int pos,const char *str);   
\CPP\LIB\TSLIB\tslib.hpp 355: 
\CPP\LIB\TSLIB\tslib.hpp 356: char lastChar() const;
\CPP\LIB\TSLIB\tslib.hpp 357: char firstChar() const { return *s; }
\CPP\LIB\TSLIB\tslib.hpp 358: 
\CPP\LIB\TSLIB\tslib.hpp 359: void delFirst(char = '\0');
\CPP\LIB\TSLIB\tslib.hpp 360: void delLast(char = '\0');
\CPP\LIB\TSLIB\tslib.hpp 361: 
\CPP\LIB\TSLIB\tslib.hpp 362: int len() const;
\CPP\LIB\TSLIB\tslib.hpp 363: word crc() const;
\CPP\LIB\TSLIB\tslib.hpp 364: word upcrc() const;
\CPP\LIB\TSLIB\tslib.hpp 365: 
\CPP\LIB\TSLIB\tslib.hpp 366: void upperCase();
\CPP\LIB\TSLIB\tslib.hpp 367: void lowerCase();
\CPP\LIB\TSLIB\tslib.hpp 368: void mixedCase();
\CPP\LIB\TSLIB\tslib.hpp 369: 
\CPP\LIB\TSLIB\tslib.hpp 370: void ltrim();
\CPP\LIB\TSLIB\tslib.hpp 371: void rtrim();
\CPP\LIB\TSLIB\tslib.hpp 372: void  trim();
\CPP\LIB\TSLIB\tslib.hpp 373: 
\CPP\LIB\TSLIB\tslib.hpp 374: friend String operator+(const String&,const String&);
\CPP\LIB\TSLIB\tslib.hpp 375: friend String operator+(const String&,const char * );
\CPP\LIB\TSLIB\tslib.hpp 376: friend String operator+(const char * ,const String&);
\CPP\LIB\TSLIB\tslib.hpp 377: 
\CPP\LIB\TSLIB\tslib.hpp 378: void justify(justification , int len = 0);
\CPP\LIB\TSLIB\tslib.hpp 379: };
\CPP\LIB\TSLIB\tslib.hpp 380: 
\CPP\LIB\TSLIB\tslib.hpp 381: 
\CPP\LIB\TSLIB\tslib.hpp 382: 
\CPP\LIB\TSLIB\tslib.hpp 383: 
\CPP\LIB\TSLIB\tslib.hpp 384: 
\CPP\LIB\TSLIB\tslib.hpp 385: 
\CPP\LIB\TSLIB\tslib.hpp 386: 
\CPP\LIB\TSLIB\tslib.hpp 387: 
\CPP\LIB\TSLIB\tslib.hpp 388: 
\CPP\LIB\TSLIB\tslib.hpp 389: 
\CPP\LIB\TSLIB\tslib.hpp 390: 
\CPP\LIB\TSLIB\tslib.hpp 391: 
\CPP\LIB\TSLIB\tslib.hpp 392: 
\CPP\LIB\TSLIB\tslib.hpp 393: 
\CPP\LIB\TSLIB\tslib.hpp 394: 
\CPP\LIB\TSLIB\tslib.hpp 395: 
\CPP\LIB\TSLIB\tslib.hpp 396: 
\CPP\LIB\TSLIB\tslib.hpp 397: 
\CPP\LIB\TSLIB\tslib.hpp 398: class Date
\CPP\LIB\TSLIB\tslib.hpp 399: {
\CPP\LIB\TSLIB\tslib.hpp 400: char _d ,
\CPP\LIB\TSLIB\tslib.hpp 401: _m ,
\CPP\LIB\TSLIB\tslib.hpp 402: _y ;
\CPP\LIB\TSLIB\tslib.hpp 403: 
\CPP\LIB\TSLIB\tslib.hpp 404: int compare(const Date&) const;
\CPP\LIB\TSLIB\tslib.hpp 405: void  parse_key(String&) const;
\CPP\LIB\TSLIB\tslib.hpp 406: 
\CPP\LIB\TSLIB\tslib.hpp 407: static char *weekdays[7];
\CPP\LIB\TSLIB\tslib.hpp 408: static char *s_weekdays[7];
\CPP\LIB\TSLIB\tslib.hpp 409: static char *l_weekdays[7];
\CPP\LIB\TSLIB\tslib.hpp 410: static char *months[12];
\CPP\LIB\TSLIB\tslib.hpp 411: static char *l_months[12];
\CPP\LIB\TSLIB\tslib.hpp 412: 
\CPP\LIB\TSLIB\tslib.hpp 413: public:
\CPP\LIB\TSLIB\tslib.hpp 414: Date();                   
\CPP\LIB\TSLIB\tslib.hpp 415: Date(long);               
\CPP\LIB\TSLIB\tslib.hpp 416: Date(int,int,int);        
\CPP\LIB\TSLIB\tslib.hpp 417: Date(const Date&);
\CPP\LIB\TSLIB\tslib.hpp 418: 
\CPP\LIB\TSLIB\tslib.hpp 419: void operator=( const Date& );
\CPP\LIB\TSLIB\tslib.hpp 420: 
\CPP\LIB\TSLIB\tslib.hpp 421: void operator()(int day,int month,int year) 
\CPP\LIB\TSLIB\tslib.hpp 422: {
\CPP\LIB\TSLIB\tslib.hpp 423: set(day,month,year);
\CPP\LIB\TSLIB\tslib.hpp 424: }
\CPP\LIB\TSLIB\tslib.hpp 425: 
\CPP\LIB\TSLIB\tslib.hpp 426: char& operator[](int i);  
\CPP\LIB\TSLIB\tslib.hpp 427: 
\CPP\LIB\TSLIB\tslib.hpp 428: int day() const           
\CPP\LIB\TSLIB\tslib.hpp 429: {
\CPP\LIB\TSLIB\tslib.hpp 430: return _d;
\CPP\LIB\TSLIB\tslib.hpp 431: }
\CPP\LIB\TSLIB\tslib.hpp 432: int month() const         
\CPP\LIB\TSLIB\tslib.hpp 433: {
\CPP\LIB\TSLIB\tslib.hpp 434: return _m;
\CPP\LIB\TSLIB\tslib.hpp 435: }
\CPP\LIB\TSLIB\tslib.hpp 436: int year() const          
\CPP\LIB\TSLIB\tslib.hpp 437: {
\CPP\LIB\TSLIB\tslib.hpp 438: return _y;
\CPP\LIB\TSLIB\tslib.hpp 439: }
\CPP\LIB\TSLIB\tslib.hpp 440: 
\CPP\LIB\TSLIB\tslib.hpp 441: bool ok() const;           
\CPP\LIB\TSLIB\tslib.hpp 442: 
\CPP\LIB\TSLIB\tslib.hpp 443: int dayNum() const;       
\CPP\LIB\TSLIB\tslib.hpp 444: int weekDay() const;      
\CPP\LIB\TSLIB\tslib.hpp 445: int weekNum() const;      
\CPP\LIB\TSLIB\tslib.hpp 446: int daysInMonth(int = 0) const; 
\CPP\LIB\TSLIB\tslib.hpp 447: int daysInYear(int = 0) const;  
\CPP\LIB\TSLIB\tslib.hpp 448: int weeksInYear(int = 0) const; 
\CPP\LIB\TSLIB\tslib.hpp 449: 
\CPP\LIB\TSLIB\tslib.hpp 450: int age(const Date& birthdate);
\CPP\LIB\TSLIB\tslib.hpp 451: 
\CPP\LIB\TSLIB\tslib.hpp 452: operator long() const;    
\CPP\LIB\TSLIB\tslib.hpp 453: Date& operator=(long);    
\CPP\LIB\TSLIB\tslib.hpp 454: 
\CPP\LIB\TSLIB\tslib.hpp 455: void operator++()
\CPP\LIB\TSLIB\tslib.hpp 456: {
\CPP\LIB\TSLIB\tslib.hpp 457: (*this) = long(*this) + 1;
\CPP\LIB\TSLIB\tslib.hpp 458: }
\CPP\LIB\TSLIB\tslib.hpp 459: void operator++(int)
\CPP\LIB\TSLIB\tslib.hpp 460: {
\CPP\LIB\TSLIB\tslib.hpp 461: operator++();
\CPP\LIB\TSLIB\tslib.hpp 462: }
\CPP\LIB\TSLIB\tslib.hpp 463: void operator--()
\CPP\LIB\TSLIB\tslib.hpp 464: {
\CPP\LIB\TSLIB\tslib.hpp 465: (*this) = long(*this) - 1;
\CPP\LIB\TSLIB\tslib.hpp 466: }
\CPP\LIB\TSLIB\tslib.hpp 467: void operator--(int)
\CPP\LIB\TSLIB\tslib.hpp 468: {
\CPP\LIB\TSLIB\tslib.hpp 469: operator--();
\CPP\LIB\TSLIB\tslib.hpp 470: }
\CPP\LIB\TSLIB\tslib.hpp 471: void operator+=(int n)
\CPP\LIB\TSLIB\tslib.hpp 472: {
\CPP\LIB\TSLIB\tslib.hpp 473: (*this) = long(*this) + n;
\CPP\LIB\TSLIB\tslib.hpp 474: }
\CPP\LIB\TSLIB\tslib.hpp 475: void operator-=(int n)
\CPP\LIB\TSLIB\tslib.hpp 476: {
\CPP\LIB\TSLIB\tslib.hpp 477: (*this) = long(*this) - n;
\CPP\LIB\TSLIB\tslib.hpp 478: }
\CPP\LIB\TSLIB\tslib.hpp 479: 
\CPP\LIB\TSLIB\tslib.hpp 480: void set(int,int,int);    
\CPP\LIB\TSLIB\tslib.hpp 481: void today();             
\CPP\LIB\TSLIB\tslib.hpp 482: 
\CPP\LIB\TSLIB\tslib.hpp 483: int operator<(const Date&) const;     
\CPP\LIB\TSLIB\tslib.hpp 484: int operator>(const Date&) const;     
\CPP\LIB\TSLIB\tslib.hpp 485: int operator==(const Date&) const;    
\CPP\LIB\TSLIB\tslib.hpp 486: int operator!=(const Date&) const;    
\CPP\LIB\TSLIB\tslib.hpp 487: int operator<=(const Date&) const;    
\CPP\LIB\TSLIB\tslib.hpp 488: int operator>=(const Date&) const;    
\CPP\LIB\TSLIB\tslib.hpp 489: 
\CPP\LIB\TSLIB\tslib.hpp 490: int operator-(const Date&) const;     
\CPP\LIB\TSLIB\tslib.hpp 491: 
\CPP\LIB\TSLIB\tslib.hpp 492: bool leap()               const;
\CPP\LIB\TSLIB\tslib.hpp 493: 
\CPP\LIB\TSLIB\tslib.hpp 494: String format(const char *fmt) const;
\CPP\LIB\TSLIB\tslib.hpp 495: 
\CPP\LIB\TSLIB\tslib.hpp 496: void fileDate(word);  
\CPP\LIB\TSLIB\tslib.hpp 497: };
\CPP\LIB\TSLIB\tslib.hpp 498: 
\CPP\LIB\TSLIB\tslib.hpp 499: 
\CPP\LIB\TSLIB\tslib.hpp 500: 
\CPP\LIB\TSLIB\tslib.hpp 501: 
\CPP\LIB\TSLIB\tslib.hpp 502: class Time
\CPP\LIB\TSLIB\tslib.hpp 503: {
\CPP\LIB\TSLIB\tslib.hpp 504: char _h ,
\CPP\LIB\TSLIB\tslib.hpp 505: _m ,
\CPP\LIB\TSLIB\tslib.hpp 506: _s ;
\CPP\LIB\TSLIB\tslib.hpp 507: 
\CPP\LIB\TSLIB\tslib.hpp 508: void Time::parse_key(String& key) const;
\CPP\LIB\TSLIB\tslib.hpp 509: public:
\CPP\LIB\TSLIB\tslib.hpp 510: 
\CPP\LIB\TSLIB\tslib.hpp 511: Time();
\CPP\LIB\TSLIB\tslib.hpp 512: Time(int)
\CPP\LIB\TSLIB\tslib.hpp 513: {
\CPP\LIB\TSLIB\tslib.hpp 514: now();
\CPP\LIB\TSLIB\tslib.hpp 515: }
\CPP\LIB\TSLIB\tslib.hpp 516: Time(int h,int m,int s)
\CPP\LIB\TSLIB\tslib.hpp 517: {
\CPP\LIB\TSLIB\tslib.hpp 518: set(h,m,s);
\CPP\LIB\TSLIB\tslib.hpp 519: }
\CPP\LIB\TSLIB\tslib.hpp 520: 
\CPP\LIB\TSLIB\tslib.hpp 521: Time(const Time&);
\CPP\LIB\TSLIB\tslib.hpp 522: 
\CPP\LIB\TSLIB\tslib.hpp 523: void operator=(const Time&);
\CPP\LIB\TSLIB\tslib.hpp 524: 
\CPP\LIB\TSLIB\tslib.hpp 525: void operator()(int h,int m,int s)
\CPP\LIB\TSLIB\tslib.hpp 526: {
\CPP\LIB\TSLIB\tslib.hpp 527: set(h,m,s);
\CPP\LIB\TSLIB\tslib.hpp 528: }
\CPP\LIB\TSLIB\tslib.hpp 529: 
\CPP\LIB\TSLIB\tslib.hpp 530: char& operator[](int i);
\CPP\LIB\TSLIB\tslib.hpp 531: 
\CPP\LIB\TSLIB\tslib.hpp 532: int hour() const
\CPP\LIB\TSLIB\tslib.hpp 533: {
\CPP\LIB\TSLIB\tslib.hpp 534: return _h;
\CPP\LIB\TSLIB\tslib.hpp 535: }
\CPP\LIB\TSLIB\tslib.hpp 536: int minute() const
\CPP\LIB\TSLIB\tslib.hpp 537: {
\CPP\LIB\TSLIB\tslib.hpp 538: return _m;
\CPP\LIB\TSLIB\tslib.hpp 539: }
\CPP\LIB\TSLIB\tslib.hpp 540: int seconds() const
\CPP\LIB\TSLIB\tslib.hpp 541: {
\CPP\LIB\TSLIB\tslib.hpp 542: return _s;
\CPP\LIB\TSLIB\tslib.hpp 543: }
\CPP\LIB\TSLIB\tslib.hpp 544: 
\CPP\LIB\TSLIB\tslib.hpp 545: operator long() const;
\CPP\LIB\TSLIB\tslib.hpp 546: 
\CPP\LIB\TSLIB\tslib.hpp 547: long operator-(const Time& t) const;
\CPP\LIB\TSLIB\tslib.hpp 548: 
\CPP\LIB\TSLIB\tslib.hpp 549: void operator-=(const Time&);
\CPP\LIB\TSLIB\tslib.hpp 550: void operator+=(const Time&);
\CPP\LIB\TSLIB\tslib.hpp 551: void operator=(long);
\CPP\LIB\TSLIB\tslib.hpp 552: 
\CPP\LIB\TSLIB\tslib.hpp 553: void set(int h,int m,int s);     
\CPP\LIB\TSLIB\tslib.hpp 554: void now();                      
\CPP\LIB\TSLIB\tslib.hpp 555: 
\CPP\LIB\TSLIB\tslib.hpp 556: String format(const char *) const;
\CPP\LIB\TSLIB\tslib.hpp 557: 
\CPP\LIB\TSLIB\tslib.hpp 558: void fileTime(word);
\CPP\LIB\TSLIB\tslib.hpp 559: 
\CPP\LIB\TSLIB\tslib.hpp 560: int operator<(const Time&)  const;   
\CPP\LIB\TSLIB\tslib.hpp 561: int operator>(const Time&)  const;   
\CPP\LIB\TSLIB\tslib.hpp 562: int operator==(const Time&) const;   
\CPP\LIB\TSLIB\tslib.hpp 563: int operator!=(const Time&) const;   
\CPP\LIB\TSLIB\tslib.hpp 564: int operator<=(const Time&) const;   
\CPP\LIB\TSLIB\tslib.hpp 565: int operator>=(const Time&) const;   
\CPP\LIB\TSLIB\tslib.hpp 566: };
\CPP\LIB\TSLIB\tslib.hpp 567: 
\CPP\LIB\TSLIB\tslib.hpp 568: 
\CPP\LIB\TSLIB\tslib.hpp 569: 
\CPP\LIB\TSLIB\tslib.hpp 570: 
\CPP\LIB\TSLIB\tslib.hpp 571: class FileName : public String
\CPP\LIB\TSLIB\tslib.hpp 572: {
\CPP\LIB\TSLIB\tslib.hpp 573: public:
\CPP\LIB\TSLIB\tslib.hpp 574: FileName() : String() {}
\CPP\LIB\TSLIB\tslib.hpp 575: FileName(const char *p,const char *f=0,const char *e=0);
\CPP\LIB\TSLIB\tslib.hpp 576: void operator()(const char *p);
\CPP\LIB\TSLIB\tslib.hpp 577: void operator()(const char *p,const char *f);
\CPP\LIB\TSLIB\tslib.hpp 578: void operator()(const char *p,const char *f,const char *e);
\CPP\LIB\TSLIB\tslib.hpp 579: void appendBS();
\CPP\LIB\TSLIB\tslib.hpp 580: void stripPath();
\CPP\LIB\TSLIB\tslib.hpp 581: void stripExt();
\CPP\LIB\TSLIB\tslib.hpp 582: void stripName();
\CPP\LIB\TSLIB\tslib.hpp 583: void changeExt(const char *ext);
\CPP\LIB\TSLIB\tslib.hpp 584: void changePath(const char *path);
\CPP\LIB\TSLIB\tslib.hpp 585: void operator=(const char*);
\CPP\LIB\TSLIB\tslib.hpp 586: void operator=(const FileName&);
\CPP\LIB\TSLIB\tslib.hpp 587: void operator=(char);
\CPP\LIB\TSLIB\tslib.hpp 588: void operator=(int);
\CPP\LIB\TSLIB\tslib.hpp 589: void operator=(long);
\CPP\LIB\TSLIB\tslib.hpp 590: void fit(int size);
\CPP\LIB\TSLIB\tslib.hpp 591: };
\CPP\LIB\TSLIB\tslib.hpp 592: 
\CPP\LIB\TSLIB\tslib.hpp 593: const DIR_NORMAL = 0x00;
\CPP\LIB\TSLIB\tslib.hpp 594: const DIR_RDONLY = 0x01;
\CPP\LIB\TSLIB\tslib.hpp 595: const DIR_HIDDEN = 0x02;
\CPP\LIB\TSLIB\tslib.hpp 596: const DIR_SYSTEM = 0x04;
\CPP\LIB\TSLIB\tslib.hpp 597: const DIR_LABEL  = 0x08;
\CPP\LIB\TSLIB\tslib.hpp 598: const DIR_DIREC  = 0x10;
\CPP\LIB\TSLIB\tslib.hpp 599: const DIR_ARCH   = 0x20;
\CPP\LIB\TSLIB\tslib.hpp 600: 
\CPP\LIB\TSLIB\tslib.hpp 601: class DirScan
\CPP\LIB\TSLIB\tslib.hpp 602: {
\CPP\LIB\TSLIB\tslib.hpp 603: void *data;
\CPP\LIB\TSLIB\tslib.hpp 604: int ok;
\CPP\LIB\TSLIB\tslib.hpp 605: public:
\CPP\LIB\TSLIB\tslib.hpp 606: 
\CPP\LIB\TSLIB\tslib.hpp 607: DirScan();
\CPP\LIB\TSLIB\tslib.hpp 608: DirScan(const char *wildcard,int attr);
\CPP\LIB\TSLIB\tslib.hpp 609: DirScan(const char *wildcard);
\CPP\LIB\TSLIB\tslib.hpp 610: ~DirScan();
\CPP\LIB\TSLIB\tslib.hpp 611: 
\CPP\LIB\TSLIB\tslib.hpp 612: int first(const char *fname,int attr);           
\CPP\LIB\TSLIB\tslib.hpp 613: int first(const char *fname);                    
\CPP\LIB\TSLIB\tslib.hpp 614: int next();                                
\CPP\LIB\TSLIB\tslib.hpp 615: int operator++()    { return next(); }     
\CPP\LIB\TSLIB\tslib.hpp 616: int operator++(int) { return next(); }     
\CPP\LIB\TSLIB\tslib.hpp 617: 
\CPP\LIB\TSLIB\tslib.hpp 618: operator int() const
\CPP\LIB\TSLIB\tslib.hpp 619: {
\CPP\LIB\TSLIB\tslib.hpp 620: return ok;
\CPP\LIB\TSLIB\tslib.hpp 621: }
\CPP\LIB\TSLIB\tslib.hpp 622: 
\CPP\LIB\TSLIB\tslib.hpp 623: char *name() const;
\CPP\LIB\TSLIB\tslib.hpp 624: Date date()  const;
\CPP\LIB\TSLIB\tslib.hpp 625: Time time()  const;
\CPP\LIB\TSLIB\tslib.hpp 626: long size()  const;
\CPP\LIB\TSLIB\tslib.hpp 627: int flags()  const;
\CPP\LIB\TSLIB\tslib.hpp 628: 
\CPP\LIB\TSLIB\tslib.hpp 629: operator char*() const  { return name(); }
\CPP\LIB\TSLIB\tslib.hpp 630: operator Date()  const  { return date(); }
\CPP\LIB\TSLIB\tslib.hpp 631: operator Time()  const  { return time(); }
\CPP\LIB\TSLIB\tslib.hpp 632: };
\CPP\LIB\TSLIB\tslib.hpp 633: 
\CPP\LIB\TSLIB\tslib.hpp 634: 
\CPP\LIB\TSLIB\tslib.hpp 635: 
\CPP\LIB\TSLIB\tslib.hpp 636: 
\CPP\LIB\TSLIB\tslib.hpp 637: const word fmode_read     = 0x000;  
\CPP\LIB\TSLIB\tslib.hpp 638: const word fmode_write    = 0x001;  
\CPP\LIB\TSLIB\tslib.hpp 639: const word fmode_rw       = 0x002;  
\CPP\LIB\TSLIB\tslib.hpp 640: 
\CPP\LIB\TSLIB\tslib.hpp 641: const word fmode_create   = 0x004;  
\CPP\LIB\TSLIB\tslib.hpp 642: 
\CPP\LIB\TSLIB\tslib.hpp 643: const word fmode_excl     = 0x010;  
\CPP\LIB\TSLIB\tslib.hpp 644: const word fmode_denywr   = 0x020;  
\CPP\LIB\TSLIB\tslib.hpp 645: const word fmode_denyrd   = 0x030;  
\CPP\LIB\TSLIB\tslib.hpp 646: const word fmode_shared   = 0x040;  
\CPP\LIB\TSLIB\tslib.hpp 647: 
\CPP\LIB\TSLIB\tslib.hpp 648: const word fmode_text     = 0x100;  
\CPP\LIB\TSLIB\tslib.hpp 649: const word fmode_copen    = 0x200;  
\CPP\LIB\TSLIB\tslib.hpp 650: const word fmode_buffered = 0x400;  
\CPP\LIB\TSLIB\tslib.hpp 651: const word fmode_append   = 0x800;  
\CPP\LIB\TSLIB\tslib.hpp 652: 
\CPP\LIB\TSLIB\tslib.hpp 653: const word file_error_ok       = 0;    
\CPP\LIB\TSLIB\tslib.hpp 654: const word file_error_nofile   = 2;    
\CPP\LIB\TSLIB\tslib.hpp 655: const word file_error_nopath   = 3;    
\CPP\LIB\TSLIB\tslib.hpp 656: const word file_error_numfiles = 4;    
\CPP\LIB\TSLIB\tslib.hpp 657: const word file_error_noaccess = 5;    
\CPP\LIB\TSLIB\tslib.hpp 658: const word file_error_badfh    = 6;    
\CPP\LIB\TSLIB\tslib.hpp 659: 
\CPP\LIB\TSLIB\tslib.hpp 660: class File
\CPP\LIB\TSLIB\tslib.hpp 661: {
\CPP\LIB\TSLIB\tslib.hpp 662: 
\CPP\LIB\TSLIB\tslib.hpp 663: 
\CPP\LIB\TSLIB\tslib.hpp 664: 
\CPP\LIB\TSLIB\tslib.hpp 665: int   fh;             
\CPP\LIB\TSLIB\tslib.hpp 666: byte *buffer;         
\CPP\LIB\TSLIB\tslib.hpp 667: byte *bufPtr;         
\CPP\LIB\TSLIB\tslib.hpp 668: word  bufSize;        
\CPP\LIB\TSLIB\tslib.hpp 669: word  bytesInBuf;     
\CPP\LIB\TSLIB\tslib.hpp 670: long  bufPos;         
\CPP\LIB\TSLIB\tslib.hpp 671: word  mode;           
\CPP\LIB\TSLIB\tslib.hpp 672: byte  lastAction;     
\CPP\LIB\TSLIB\tslib.hpp 673: bool  atEof;          
\CPP\LIB\TSLIB\tslib.hpp 674: word  errorCode;      
\CPP\LIB\TSLIB\tslib.hpp 675: 
\CPP\LIB\TSLIB\tslib.hpp 676: void clearError()
\CPP\LIB\TSLIB\tslib.hpp 677: {
\CPP\LIB\TSLIB\tslib.hpp 678: atEof     = FALSE;
\CPP\LIB\TSLIB\tslib.hpp 679: errorCode = FALSE;
\CPP\LIB\TSLIB\tslib.hpp 680: }
\CPP\LIB\TSLIB\tslib.hpp 681: void init();
\CPP\LIB\TSLIB\tslib.hpp 682: bool buffered() const
\CPP\LIB\TSLIB\tslib.hpp 683: {
\CPP\LIB\TSLIB\tslib.hpp 684: return (bool)!!(mode & fmode_buffered);
\CPP\LIB\TSLIB\tslib.hpp 685: }
\CPP\LIB\TSLIB\tslib.hpp 686: bool textMode() const
\CPP\LIB\TSLIB\tslib.hpp 687: {
\CPP\LIB\TSLIB\tslib.hpp 688: return (bool)!!(mode & fmode_text);
\CPP\LIB\TSLIB\tslib.hpp 689: }
\CPP\LIB\TSLIB\tslib.hpp 690: bool fillBuffer();
\CPP\LIB\TSLIB\tslib.hpp 691: 
\CPP\LIB\TSLIB\tslib.hpp 692: public:
\CPP\LIB\TSLIB\tslib.hpp 693: File(const char *fname,word mode = fmode_read,word bufsize = 0);
\CPP\LIB\TSLIB\tslib.hpp 694: File()
\CPP\LIB\TSLIB\tslib.hpp 695: {
\CPP\LIB\TSLIB\tslib.hpp 696: init();
\CPP\LIB\TSLIB\tslib.hpp 697: }
\CPP\LIB\TSLIB\tslib.hpp 698: ~File()
\CPP\LIB\TSLIB\tslib.hpp 699: {
\CPP\LIB\TSLIB\tslib.hpp 700: close();
\CPP\LIB\TSLIB\tslib.hpp 701: }
\CPP\LIB\TSLIB\tslib.hpp 702: bool open(const char *fname,word mode = fmode_read,word bufsize = 0);
\CPP\LIB\TSLIB\tslib.hpp 703: void close();
\CPP\LIB\TSLIB\tslib.hpp 704: bool eof() const
\CPP\LIB\TSLIB\tslib.hpp 705: {
\CPP\LIB\TSLIB\tslib.hpp 706: return atEof;
\CPP\LIB\TSLIB\tslib.hpp 707: }
\CPP\LIB\TSLIB\tslib.hpp 708: word error() const
\CPP\LIB\TSLIB\tslib.hpp 709: {
\CPP\LIB\TSLIB\tslib.hpp 710: return errorCode;
\CPP\LIB\TSLIB\tslib.hpp 711: }
\CPP\LIB\TSLIB\tslib.hpp 712: void enableBuffer();
\CPP\LIB\TSLIB\tslib.hpp 713: void disableBuffer();
\CPP\LIB\TSLIB\tslib.hpp 714: word read(void *p,word size);
\CPP\LIB\TSLIB\tslib.hpp 715: word write(const void *p,word size);
\CPP\LIB\TSLIB\tslib.hpp 716: long seek(long pos,int mode = seek_set);
\CPP\LIB\TSLIB\tslib.hpp 717: int  readByte();
\CPP\LIB\TSLIB\tslib.hpp 718: bool writeByte(byte c);
\CPP\LIB\TSLIB\tslib.hpp 719: bool readLine(char *s,int max );
\CPP\LIB\TSLIB\tslib.hpp 720: String readLine();
\CPP\LIB\TSLIB\tslib.hpp 721: 
\CPP\LIB\TSLIB\tslib.hpp 722: File& operator<<(const char *);
\CPP\LIB\TSLIB\tslib.hpp 723: File& operator<<(int);
\CPP\LIB\TSLIB\tslib.hpp 724: File& operator<<(word);
\CPP\LIB\TSLIB\tslib.hpp 725: File& operator<<(long);
\CPP\LIB\TSLIB\tslib.hpp 726: File& operator<<(dword);
\CPP\LIB\TSLIB\tslib.hpp 727: File& operator<<(char);
\CPP\LIB\TSLIB\tslib.hpp 728: File& operator<<(const String& s) { return operator<<((char *)s); }
\CPP\LIB\TSLIB\tslib.hpp 729: 
\CPP\LIB\TSLIB\tslib.hpp 730: File& operator>>(char&);
\CPP\LIB\TSLIB\tslib.hpp 731: File& operator>>(int&);
\CPP\LIB\TSLIB\tslib.hpp 732: File& operator>>(word&);
\CPP\LIB\TSLIB\tslib.hpp 733: File& operator>>(long&);
\CPP\LIB\TSLIB\tslib.hpp 734: File& operator>>(dword&);
\CPP\LIB\TSLIB\tslib.hpp 735: File& operator>>(String& s) { s = readLine(); return *this; }
\CPP\LIB\TSLIB\tslib.hpp 736: 
\CPP\LIB\TSLIB\tslib.hpp 737: bool printf(const char *fmt,...);
\CPP\LIB\TSLIB\tslib.hpp 738: long pos();
\CPP\LIB\TSLIB\tslib.hpp 739: long len();
\CPP\LIB\TSLIB\tslib.hpp 740: void cut();
\CPP\LIB\TSLIB\tslib.hpp 741: void rewind()
\CPP\LIB\TSLIB\tslib.hpp 742: {
\CPP\LIB\TSLIB\tslib.hpp 743: seek(0);
\CPP\LIB\TSLIB\tslib.hpp 744: }
\CPP\LIB\TSLIB\tslib.hpp 745: bool opened() const
\CPP\LIB\TSLIB\tslib.hpp 746: {
\CPP\LIB\TSLIB\tslib.hpp 747: return bool(fh>0);
\CPP\LIB\TSLIB\tslib.hpp 748: }
\CPP\LIB\TSLIB\tslib.hpp 749: 
\CPP\LIB\TSLIB\tslib.hpp 750: bool lock(long pos,long len);
\CPP\LIB\TSLIB\tslib.hpp 751: bool unlock(long pos,long len);
\CPP\LIB\TSLIB\tslib.hpp 752: void flush();
\CPP\LIB\TSLIB\tslib.hpp 753: 
\CPP\LIB\TSLIB\tslib.hpp 754: 
\CPP\LIB\TSLIB\tslib.hpp 755: 
\CPP\LIB\TSLIB\tslib.hpp 756: int   dosHandle() { return fh;    }
\CPP\LIB\TSLIB\tslib.hpp 757: 
\CPP\LIB\TSLIB\tslib.hpp 758: };
\CPP\LIB\TSLIB\tslib.hpp 759: 
\CPP\LIB\TSLIB\tslib.hpp 760: 
\CPP\LIB\TSLIB\tslib.hpp 761: 
\CPP\LIB\TSLIB\tslib.hpp 762: 
\CPP\LIB\TSLIB\tslib.hpp 763: 
\CPP\LIB\TSLIB\tslib.hpp 764: 
\CPP\LIB\TSLIB\tslib.hpp 765: 
\CPP\LIB\TSLIB\tslib.hpp 766: 
\CPP\LIB\TSLIB\tslib.hpp 767: 
\CPP\LIB\TSLIB\tslib.hpp 768: 
\CPP\LIB\TSLIB\tslib.hpp 769: 
\CPP\LIB\TSLIB\tslib.hpp 770: 
\CPP\LIB\TSLIB\tslib.hpp 771: 
\CPP\LIB\TSLIB\tslib.hpp 772: class TextFile : public File
\CPP\LIB\TSLIB\tslib.hpp 773: {
\CPP\LIB\TSLIB\tslib.hpp 774: public:
\CPP\LIB\TSLIB\tslib.hpp 775: TextFile()
\CPP\LIB\TSLIB\tslib.hpp 776: {
\CPP\LIB\TSLIB\tslib.hpp 777: }
\CPP\LIB\TSLIB\tslib.hpp 778: TextFile(const char *fname , word mode = fmode_read , word bufsize=512)
\CPP\LIB\TSLIB\tslib.hpp 779: : File(fname , mode | fmode_text , bufsize)
\CPP\LIB\TSLIB\tslib.hpp 780: {
\CPP\LIB\TSLIB\tslib.hpp 781: }
\CPP\LIB\TSLIB\tslib.hpp 782: bool open(const char *fname , word mode = fmode_read , word bufsize=512)
\CPP\LIB\TSLIB\tslib.hpp 783: {
\CPP\LIB\TSLIB\tslib.hpp 784: return File::open(fname , mode | fmode_text , bufsize);
\CPP\LIB\TSLIB\tslib.hpp 785: }
\CPP\LIB\TSLIB\tslib.hpp 786: };
\CPP\LIB\TSLIB\tslib.hpp 787: 
\CPP\LIB\TSLIB\tslib.hpp 788: class BitArray
\CPP\LIB\TSLIB\tslib.hpp 789: {
\CPP\LIB\TSLIB\tslib.hpp 790: long start;
\CPP\LIB\TSLIB\tslib.hpp 791: word *array;
\CPP\LIB\TSLIB\tslib.hpp 792: public:
\CPP\LIB\TSLIB\tslib.hpp 793: BitArray(long size,long s = 0);
\CPP\LIB\TSLIB\tslib.hpp 794: ~BitArray();
\CPP\LIB\TSLIB\tslib.hpp 795: bool operator[](long i) const;
\CPP\LIB\TSLIB\tslib.hpp 796: void set(long i);
\CPP\LIB\TSLIB\tslib.hpp 797: void clear(long i);
\CPP\LIB\TSLIB\tslib.hpp 798: };
\CPP\LIB\TSLIB\tslib.hpp 799: 
\CPP\LIB\TSLIB\tslib.hpp 800: const byte LOGSTYLE_NORMAL = 0;
\CPP\LIB\TSLIB\tslib.hpp 801: 
\CPP\LIB\TSLIB\tslib.hpp 802: class LogFile
\CPP\LIB\TSLIB\tslib.hpp 803: {
\CPP\LIB\TSLIB\tslib.hpp 804: FileName name;
\CPP\LIB\TSLIB\tslib.hpp 805: byte     logStyle;
\CPP\LIB\TSLIB\tslib.hpp 806: public:
\CPP\LIB\TSLIB\tslib.hpp 807: LogFile();
\CPP\LIB\TSLIB\tslib.hpp 808: ~LogFile();
\CPP\LIB\TSLIB\tslib.hpp 809: 
\CPP\LIB\TSLIB\tslib.hpp 810: bool open(const char *fn , byte style = LOGSTYLE_NORMAL);
\CPP\LIB\TSLIB\tslib.hpp 811: bool write(const char *str,...);
\CPP\LIB\TSLIB\tslib.hpp 812: };
\CPP\LIB\TSLIB\tslib.hpp 813: 
\CPP\LIB\TSLIB\tslib.hpp 814: char *form(const char * ...);
\CPP\LIB\TSLIB\tslib.hpp 815: 
\CPP\LIB\TSLIB\tslib.hpp 816: 
\CPP\LIB\TSLIB\tslib.hpp 817: 
\CPP\LIB\TSLIB\tslib.hpp 818: 
\CPP\LIB\TSLIB\tslib.hpp 819: 
\CPP\LIB\TSLIB\tslib.hpp 820: 
\CPP\LIB\TSLIB\tslib.hpp 821: 
\CPP\LIB\TSLIB\tslib.hpp 822: 
\CPP\LIB\TSLIB\tslib.hpp 823: 
\CPP\LIB\TSLIB\tslib.hpp 824: 
\CPP\LIB\TSLIB\tslib.hpp 825: 
\CPP\LIB\TSLIB\tslib.hpp 826: 
\CPP\LIB\TSLIB\tslib.hpp 827: 
\CPP\LIB\TSLIB\tslib.hpp 828: 
\CPP\LIB\TSLIB\tslib.hpp 829: 
\CPP\LIB\TSLIB\tslib.hpp 830: 
\CPP\LIB\TSLIB\tslib.hpp 831: 
\CPP\LIB\TSLIB\tslib.hpp 832: 
\CPP\LIB\TSLIB\tslib.hpp 833: 
\CPP\LIB\TSLIB\tslib.hpp 834: 
\CPP\LIB\TSLIB\tslib.hpp 835: 
\CPP\LIB\TSLIB\tslib.hpp 836: 
\CPP\LIB\TSLIB\tslib.hpp 837: 
\CPP\LIB\TSLIB\tslib.hpp 838: 
\CPP\LIB\TSLIB\tslib.hpp 839: 
\CPP\LIB\TSLIB\tslib.hpp 840: 
\CPP\LIB\TSLIB\tslib.hpp 841: 
\CPP\LIB\TSLIB\tslib.hpp 842: 
\CPP\LIB\TSLIB\tslib.hpp 843: 
\CPP\LIB\TSLIB\tslib.hpp 844: 
\CPP\LIB\TSLIB\tslib.hpp 845: 
\CPP\LIB\TSLIB\tslib.hpp 846: 
\CPP\LIB\TSLIB\tslib.hpp 847: 
\CPP\LIB\TSLIB\tslib.hpp 848: 
\CPP\LIB\TSLIB\tslib.hpp 849: 
\CPP\LIB\TSLIB\tslib.hpp 850: 
\CPP\LIB\TSLIB\tslib.hpp 851: 
\CPP\LIB\TSWIN\tswin.hpp 2: 
\CPP\LIB\TSWIN\tswin.hpp 3: 
\CPP\LIB\TSWIN\tswin.hpp 4: 
\CPP\LIB\TSWIN\tswin.hpp 5: 
\CPP\LIB\TSWIN\tswin.hpp 6: 
\CPP\LIB\TSWIN\tswin.hpp 7: 
\CPP\LIB\TSWIN\tswin.hpp 8: 
\CPP\LIB\TSWIN\tswin.hpp 9: 
\CPP\LIB\TSWIN\tswin.hpp 10: 
\CPP\LIB\TSWIN\tswin.hpp 11: 
\CPP\LIB\TSWIN\tswin.hpp 12: 
\CPP\LIB\TSWIN\tswin.hpp 13: 
\CPP\LIB\TSWIN\tswin.hpp 14: 
\CPP\LIB\TSWIN\tswin.hpp 15: 
\CPP\LIB\TSWIN\tswin.hpp 16: 
\CPP\LIB\TSWIN\tswin.hpp 17: 
\CPP\LIB\TSWIN\tswin.hpp 18: 
\CPP\LIB\TSWIN\tswin.hpp 19: 
\CPP\LIB\TSWIN\tswin.hpp 20: 
\CPP\LIB\TSWIN\tswin.hpp 21: 
\CPP\LIB\TSWIN\tswin.hpp 22: 
\CPP\LIB\TSWIN\tswin.hpp 23: 
\CPP\LIB\TSWIN\tswin.hpp 24: 
\CPP\LIB\TSWIN\tswin.hpp 25: 
\CPP\LIB\TSWIN\tswin.hpp 26: 
\CPP\LIB\TSWIN\tswin.hpp 27: 
\CPP\LIB\TSWIN\tswin.hpp 28: 
\CPP\LIB\TSWIN\tswin.hpp 29: 
\CPP\LIB\TSWIN\tswin.hpp 30: 
\CPP\LIB\TSWIN\tswin.hpp 31: 
\CPP\LIB\TSWIN\tswin.hpp 32: 
\CPP\LIB\TSWIN\tswin.hpp 33: 
\CPP\LIB\TSWIN\tswin.hpp 34: 
\CPP\LIB\TSWIN\tswin.hpp 35: 
\CPP\LIB\TSWIN\tswin.hpp 36: 
\CPP\LIB\TSWIN\tswin.hpp 37: 
\CPP\LIB\TSWIN\tswin.hpp 38: 
\CPP\LIB\TSWIN\tswin.hpp 39: 
\CPP\LIB\TSWIN\tswin.hpp 40: 
\CPP\LIB\TSWIN\tswin.hpp 41: 
\CPP\LIB\TSWIN\tswin.hpp 42: 
\CPP\LIB\TSWIN\tswin.hpp 43: 
\CPP\LIB\TSWIN\tswin.hpp 44: 
\CPP\LIB\TSWIN\tswin.hpp 45: 
\CPP\LIB\TSWIN\tswin.hpp 46: 
\CPP\LIB\TSWIN\tswin.hpp 47: 
\CPP\LIB\TSWIN\tswin.hpp 48: typedef byte ATTR;
\CPP\LIB\TSWIN\tswin.hpp 49: 
\CPP\LIB\TSWIN\tswin.hpp 50: 
\CPP\LIB\TSWIN\tswin.hpp 51: typedef word KEY;
\CPP\LIB\TSWIN\tswin.hpp 52: 
\CPP\LIB\TSWIN\tswin.hpp 53: 
\CPP\LIB\TSWIN\tswin.hpp 54: const KEY KEY_NONE = 0x0000U;
\CPP\LIB\TSWIN\tswin.hpp 55: 
\CPP\LIB\TSWIN\tswin.hpp 56: const KEY KEY_F1   = 0x3B00U;
\CPP\LIB\TSWIN\tswin.hpp 57: const KEY KEY_F2   = 0x3C00U;
\CPP\LIB\TSWIN\tswin.hpp 58: const KEY KEY_F3   = 0x3D00U;
\CPP\LIB\TSWIN\tswin.hpp 59: const KEY KEY_F4   = 0x3E00U;
\CPP\LIB\TSWIN\tswin.hpp 60: const KEY KEY_F5   = 0x3F00U;
\CPP\LIB\TSWIN\tswin.hpp 61: const KEY KEY_F6   = 0x4000U;
\CPP\LIB\TSWIN\tswin.hpp 62: const KEY KEY_F7   = 0x4100U;
\CPP\LIB\TSWIN\tswin.hpp 63: const KEY KEY_F8   = 0x4200U;
\CPP\LIB\TSWIN\tswin.hpp 64: const KEY KEY_F9   = 0x4300U;
\CPP\LIB\TSWIN\tswin.hpp 65: const KEY KEY_F10  = 0x4400U;
\CPP\LIB\TSWIN\tswin.hpp 66: 
\CPP\LIB\TSWIN\tswin.hpp 67: const KEY KEY_SF1  = 0x5400U;
\CPP\LIB\TSWIN\tswin.hpp 68: const KEY KEY_SF2  = 0x5500U;
\CPP\LIB\TSWIN\tswin.hpp 69: const KEY KEY_SF3  = 0x5600U;
\CPP\LIB\TSWIN\tswin.hpp 70: const KEY KEY_SF4  = 0x5700U;
\CPP\LIB\TSWIN\tswin.hpp 71: const KEY KEY_SF5  = 0x5800U;
\CPP\LIB\TSWIN\tswin.hpp 72: const KEY KEY_SF6  = 0x5900U;
\CPP\LIB\TSWIN\tswin.hpp 73: const KEY KEY_SF7  = 0x5A00U;
\CPP\LIB\TSWIN\tswin.hpp 74: const KEY KEY_SF8  = 0x5B00U;
\CPP\LIB\TSWIN\tswin.hpp 75: const KEY KEY_SF9  = 0x5C00U;
\CPP\LIB\TSWIN\tswin.hpp 76: const KEY KEY_SF10 = 0x5D00U;
\CPP\LIB\TSWIN\tswin.hpp 77: 
\CPP\LIB\TSWIN\tswin.hpp 78: const KEY KEY_CF1  = 0x5E00U;
\CPP\LIB\TSWIN\tswin.hpp 79: const KEY KEY_CF2  = 0x5F00U;
\CPP\LIB\TSWIN\tswin.hpp 80: const KEY KEY_CF3  = 0x6000U;
\CPP\LIB\TSWIN\tswin.hpp 81: const KEY KEY_CF4  = 0x6100U;
\CPP\LIB\TSWIN\tswin.hpp 82: const KEY KEY_CF5  = 0x6200U;
\CPP\LIB\TSWIN\tswin.hpp 83: const KEY KEY_CF6  = 0x6300U;
\CPP\LIB\TSWIN\tswin.hpp 84: const KEY KEY_CF7  = 0x6400U;
\CPP\LIB\TSWIN\tswin.hpp 85: const KEY KEY_CF8  = 0x6500U;
\CPP\LIB\TSWIN\tswin.hpp 86: const KEY KEY_CF9  = 0x6600U;
\CPP\LIB\TSWIN\tswin.hpp 87: const KEY KEY_CF10 = 0x6700U;
\CPP\LIB\TSWIN\tswin.hpp 88: 
\CPP\LIB\TSWIN\tswin.hpp 89: const KEY KEY_AF1  = 0x6800U;
\CPP\LIB\TSWIN\tswin.hpp 90: const KEY KEY_AF2  = 0x6900U;
\CPP\LIB\TSWIN\tswin.hpp 91: const KEY KEY_AF3  = 0x6A00U;
\CPP\LIB\TSWIN\tswin.hpp 92: const KEY KEY_AF4  = 0x6B00U;
\CPP\LIB\TSWIN\tswin.hpp 93: const KEY KEY_AF5  = 0x6C00U;
\CPP\LIB\TSWIN\tswin.hpp 94: const KEY KEY_AF6  = 0x6D00U;
\CPP\LIB\TSWIN\tswin.hpp 95: const KEY KEY_AF7  = 0x6E00U;
\CPP\LIB\TSWIN\tswin.hpp 96: const KEY KEY_AF8  = 0x6F00U;
\CPP\LIB\TSWIN\tswin.hpp 97: const KEY KEY_AF9  = 0x7000U;
\CPP\LIB\TSWIN\tswin.hpp 98: const KEY KEY_AF10 = 0x7100U;
\CPP\LIB\TSWIN\tswin.hpp 99: 
\CPP\LIB\TSWIN\tswin.hpp 100: const KEY KEY_ALT1 = 0x7800U;
\CPP\LIB\TSWIN\tswin.hpp 101: const KEY KEY_ALT2 = 0x7900U;
\CPP\LIB\TSWIN\tswin.hpp 102: const KEY KEY_ALT3 = 0x7A00U;
\CPP\LIB\TSWIN\tswin.hpp 103: const KEY KEY_ALT4 = 0x7B00U;
\CPP\LIB\TSWIN\tswin.hpp 104: const KEY KEY_ALT5 = 0x7C00U;
\CPP\LIB\TSWIN\tswin.hpp 105: const KEY KEY_ALT6 = 0x7D00U;
\CPP\LIB\TSWIN\tswin.hpp 106: const KEY KEY_ALT7 = 0x7E00U;
\CPP\LIB\TSWIN\tswin.hpp 107: const KEY KEY_ALT8 = 0x7F00U;
\CPP\LIB\TSWIN\tswin.hpp 108: const KEY KEY_ALT9 = 0x8000U;
\CPP\LIB\TSWIN\tswin.hpp 109: const KEY KEY_ALT0 = 0x8100U;
\CPP\LIB\TSWIN\tswin.hpp 110: 
\CPP\LIB\TSWIN\tswin.hpp 111: const KEY KEY_ALTA = 0x1E00U;
\CPP\LIB\TSWIN\tswin.hpp 112: const KEY KEY_ALTB = 0x3000U;
\CPP\LIB\TSWIN\tswin.hpp 113: const KEY KEY_ALTC = 0x2E00U;
\CPP\LIB\TSWIN\tswin.hpp 114: const KEY KEY_ALTD = 0x2000U;
\CPP\LIB\TSWIN\tswin.hpp 115: const KEY KEY_ALTE = 0x1200U;
\CPP\LIB\TSWIN\tswin.hpp 116: const KEY KEY_ALTF = 0x2100U;
\CPP\LIB\TSWIN\tswin.hpp 117: const KEY KEY_ALTG = 0x2200U;
\CPP\LIB\TSWIN\tswin.hpp 118: const KEY KEY_ALTH = 0x2300U;
\CPP\LIB\TSWIN\tswin.hpp 119: const KEY KEY_ALTI = 0x1700U;
\CPP\LIB\TSWIN\tswin.hpp 120: const KEY KEY_ALTJ = 0x2400U;
\CPP\LIB\TSWIN\tswin.hpp 121: const KEY KEY_ALTK = 0x2500U;
\CPP\LIB\TSWIN\tswin.hpp 122: const KEY KEY_ALTL = 0x2600U;
\CPP\LIB\TSWIN\tswin.hpp 123: const KEY KEY_ALTM = 0x3200U;
\CPP\LIB\TSWIN\tswin.hpp 124: const KEY KEY_ALTN = 0x3100U;
\CPP\LIB\TSWIN\tswin.hpp 125: const KEY KEY_ALTO = 0x1800U;
\CPP\LIB\TSWIN\tswin.hpp 126: const KEY KEY_ALTP = 0x1900U;
\CPP\LIB\TSWIN\tswin.hpp 127: const KEY KEY_ALTQ = 0x1000U;
\CPP\LIB\TSWIN\tswin.hpp 128: const KEY KEY_ALTR = 0x1300U;
\CPP\LIB\TSWIN\tswin.hpp 129: const KEY KEY_ALTS = 0x1F00U;
\CPP\LIB\TSWIN\tswin.hpp 130: const KEY KEY_ALTT = 0x1400U;
\CPP\LIB\TSWIN\tswin.hpp 131: const KEY KEY_ALTU = 0x1600U;
\CPP\LIB\TSWIN\tswin.hpp 132: const KEY KEY_ALTV = 0x2F00U;
\CPP\LIB\TSWIN\tswin.hpp 133: const KEY KEY_ALTW = 0x1100U;
\CPP\LIB\TSWIN\tswin.hpp 134: const KEY KEY_ALTX = 0x2D00U;
\CPP\LIB\TSWIN\tswin.hpp 135: const KEY KEY_ALTY = 0x1500U;
\CPP\LIB\TSWIN\tswin.hpp 136: const KEY KEY_ALTZ = 0x2C00U;
\CPP\LIB\TSWIN\tswin.hpp 137: 
\CPP\LIB\TSWIN\tswin.hpp 138: const KEY KEY_CTLA = 0x0001U;
\CPP\LIB\TSWIN\tswin.hpp 139: const KEY KEY_CTLB = 0x0002U;
\CPP\LIB\TSWIN\tswin.hpp 140: const KEY KEY_CTLC = 0x0003U;
\CPP\LIB\TSWIN\tswin.hpp 141: const KEY KEY_CTLD = 0x0004U;
\CPP\LIB\TSWIN\tswin.hpp 142: const KEY KEY_CTLE = 0x0005U;
\CPP\LIB\TSWIN\tswin.hpp 143: const KEY KEY_CTLF = 0x0006U;
\CPP\LIB\TSWIN\tswin.hpp 144: const KEY KEY_CTLG = 0x0007U;
\CPP\LIB\TSWIN\tswin.hpp 145: const KEY KEY_CTLH = 0x0008U;
\CPP\LIB\TSWIN\tswin.hpp 146: const KEY KEY_CTLI = 0x0009U;
\CPP\LIB\TSWIN\tswin.hpp 147: const KEY KEY_CTLJ = 0x000AU;
\CPP\LIB\TSWIN\tswin.hpp 148: const KEY KEY_CTLK = 0x000BU;
\CPP\LIB\TSWIN\tswin.hpp 149: const KEY KEY_CTLL = 0x000CU;
\CPP\LIB\TSWIN\tswin.hpp 150: const KEY KEY_CTLM = 0x000DU;
\CPP\LIB\TSWIN\tswin.hpp 151: const KEY KEY_CTLN = 0x000EU;
\CPP\LIB\TSWIN\tswin.hpp 152: const KEY KEY_CTLO = 0x000FU;
\CPP\LIB\TSWIN\tswin.hpp 153: const KEY KEY_CTLP = 0x0010U;
\CPP\LIB\TSWIN\tswin.hpp 154: const KEY KEY_CTLQ = 0x0011U;
\CPP\LIB\TSWIN\tswin.hpp 155: const KEY KEY_CTLR = 0x0012U;
\CPP\LIB\TSWIN\tswin.hpp 156: const KEY KEY_CTLS = 0x0013U;
\CPP\LIB\TSWIN\tswin.hpp 157: const KEY KEY_CTLT = 0x0014U;
\CPP\LIB\TSWIN\tswin.hpp 158: const KEY KEY_CTLU = 0x0015U;
\CPP\LIB\TSWIN\tswin.hpp 159: const KEY KEY_CTLV = 0x0016U;
\CPP\LIB\TSWIN\tswin.hpp 160: const KEY KEY_CTLW = 0x0017U;
\CPP\LIB\TSWIN\tswin.hpp 161: const KEY KEY_CTLX = 0x0018U;
\CPP\LIB\TSWIN\tswin.hpp 162: const KEY KEY_CTLY = 0x0019U;
\CPP\LIB\TSWIN\tswin.hpp 163: const KEY KEY_CTLZ = 0x001AU;
\CPP\LIB\TSWIN\tswin.hpp 164: 
\CPP\LIB\TSWIN\tswin.hpp 165: const KEY KEY_DEL  = 0x5300U;
\CPP\LIB\TSWIN\tswin.hpp 166: const KEY KEY_INS  = 0x5200U;
\CPP\LIB\TSWIN\tswin.hpp 167: const KEY KEY_HOME = 0x4700U;
\CPP\LIB\TSWIN\tswin.hpp 168: const KEY KEY_END  = 0x4F00U;
\CPP\LIB\TSWIN\tswin.hpp 169: 
\CPP\LIB\TSWIN\tswin.hpp 170: const KEY KEY_PGUP = 0x4900U;
\CPP\LIB\TSWIN\tswin.hpp 171: const KEY KEY_PGDN = 0x5100U;
\CPP\LIB\TSWIN\tswin.hpp 172: const KEY KEY_UP   = 0x4800U;
\CPP\LIB\TSWIN\tswin.hpp 173: const KEY KEY_DN   = 0x5000U;
\CPP\LIB\TSWIN\tswin.hpp 174: const KEY KEY_LT   = 0x4B00U;
\CPP\LIB\TSWIN\tswin.hpp 175: const KEY KEY_RT   = 0x4D00U;
\CPP\LIB\TSWIN\tswin.hpp 176: 
\CPP\LIB\TSWIN\tswin.hpp 177: const KEY KEY_ESC  = 0x001BU;
\CPP\LIB\TSWIN\tswin.hpp 178: const KEY KEY_ENT  = 0x000DU;
\CPP\LIB\TSWIN\tswin.hpp 179: const KEY KEY_RET  = 0x000DU;
\CPP\LIB\TSWIN\tswin.hpp 180: const KEY KEY_TAB  = 0x0009U;
\CPP\LIB\TSWIN\tswin.hpp 181: const KEY KEY_STAB = 0x0F00U;
\CPP\LIB\TSWIN\tswin.hpp 182: 
\CPP\LIB\TSWIN\tswin.hpp 183: const KEY KEY_CPGUP = 0x8400U;
\CPP\LIB\TSWIN\tswin.hpp 184: const KEY KEY_CPGDN = 0x7600U;
\CPP\LIB\TSWIN\tswin.hpp 185: 
\CPP\LIB\TSWIN\tswin.hpp 186: const KEY KEY_CTL_LT = 0x7300U;
\CPP\LIB\TSWIN\tswin.hpp 187: const KEY KEY_CTL_RT = 0x7400U;
\CPP\LIB\TSWIN\tswin.hpp 188: 
\CPP\LIB\TSWIN\tswin.hpp 189: 
\CPP\LIB\TSWIN\tswin.hpp 190: 
\CPP\LIB\TSWIN\tswin.hpp 191: extern char __far *tsw_videobase; 
\CPP\LIB\TSWIN\tswin.hpp 192: extern byte      tsw_videocard; 
\CPP\LIB\TSWIN\tswin.hpp 193: extern byte      tsw_scrmode;   
\CPP\LIB\TSWIN\tswin.hpp 194: extern int       tsw_vsize;     
\CPP\LIB\TSWIN\tswin.hpp 195: extern int       tsw_hsize;     
\CPP\LIB\TSWIN\tswin.hpp 196: extern int       tsw_OS;        
\CPP\LIB\TSWIN\tswin.hpp 197: extern bool      tsw_shutup;    
\CPP\LIB\TSWIN\tswin.hpp 198: extern bool      tsw_cursorstate;
\CPP\LIB\TSWIN\tswin.hpp 199: 
\CPP\LIB\TSWIN\tswin.hpp 200: const int OS_DOS       = 1;
\CPP\LIB\TSWIN\tswin.hpp 201: const int OS_DESQVIEW  = 2;
\CPP\LIB\TSWIN\tswin.hpp 202: const int OS_DOUBLEDOS = 3;
\CPP\LIB\TSWIN\tswin.hpp 203: const int OS_TOPVIEW   = 4;
\CPP\LIB\TSWIN\tswin.hpp 204: const int OS_OS2       = 5;
\CPP\LIB\TSWIN\tswin.hpp 205: const int OS_WINDOWS   = 6;
\CPP\LIB\TSWIN\tswin.hpp 206: 
\CPP\LIB\TSWIN\tswin.hpp 207: 
\CPP\LIB\TSWIN\tswin.hpp 208: 
\CPP\LIB\TSWIN\tswin.hpp 209: 
\CPP\LIB\TSWIN\tswin.hpp 210: 
\CPP\LIB\TSWIN\tswin.hpp 211: 
\CPP\LIB\TSWIN\tswin.hpp 212: 
\CPP\LIB\TSWIN\tswin.hpp 213: 
\CPP\LIB\TSWIN\tswin.hpp 214: 
\CPP\LIB\TSWIN\tswin.hpp 215: 
\CPP\LIB\TSWIN\tswin.hpp 216: 
\CPP\LIB\TSWIN\tswin.hpp 217: 
\CPP\LIB\TSWIN\tswin.hpp 218: 
\CPP\LIB\TSWIN\tswin.hpp 219: 
\CPP\LIB\TSWIN\tswin.hpp 220: 
\CPP\LIB\TSWIN\tswin.hpp 221: 
\CPP\LIB\TSWIN\tswin.hpp 222: 
\CPP\LIB\TSWIN\tswin.hpp 223: 
\CPP\LIB\TSWIN\tswin.hpp 224: 
\CPP\LIB\TSWIN\tswin.hpp 225: 
\CPP\LIB\TSWIN\tswin.hpp 226: class Window;
\CPP\LIB\TSWIN\tswin.hpp 227: 
\CPP\LIB\TSWIN\tswin.hpp 228: struct Field
\CPP\LIB\TSWIN\tswin.hpp 229: {
\CPP\LIB\TSWIN\tswin.hpp 230: int type;
\CPP\LIB\TSWIN\tswin.hpp 231: void *value;
\CPP\LIB\TSWIN\tswin.hpp 232: void *data;
\CPP\LIB\TSWIN\tswin.hpp 233: KEY (*func)(int,Window&,int,int,char,void *);
\CPP\LIB\TSWIN\tswin.hpp 234: int flags;
\CPP\LIB\TSWIN\tswin.hpp 235: int len;
\CPP\LIB\TSWIN\tswin.hpp 236: int width;
\CPP\LIB\TSWIN\tswin.hpp 237: int x,y;
\CPP\LIB\TSWIN\tswin.hpp 238: };
\CPP\LIB\TSWIN\tswin.hpp 239: 
\CPP\LIB\TSWIN\tswin.hpp 240: extern const char *DOUBLE_BORDER;
\CPP\LIB\TSWIN\tswin.hpp 241: extern const char *SINGLE_BORDER;
\CPP\LIB\TSWIN\tswin.hpp 242: extern const char *BLOCK_BORDER;
\CPP\LIB\TSWIN\tswin.hpp 243: extern const char *CHISEL_BORDER;
\CPP\LIB\TSWIN\tswin.hpp 244: extern const char *RECESS_BORDER;
\CPP\LIB\TSWIN\tswin.hpp 245: 
\CPP\LIB\TSWIN\tswin.hpp 246: extern "C"
\CPP\LIB\TSWIN\tswin.hpp 247: {   
\CPP\LIB\TSWIN\tswin.hpp 248: void     tsw_mputc      (int x,int y,char c);
\CPP\LIB\TSWIN\tswin.hpp 249: void     tsw_maputc     (int x,int y,ATTR attr,char c);
\CPP\LIB\TSWIN\tswin.hpp 250: void     tsw_wait20ms   ();
\CPP\LIB\TSWIN\tswin.hpp 251: char     tsw_whaton     (int,int);
\CPP\LIB\TSWIN\tswin.hpp 252: void     tsw_changeatt  (ATTR attr,int x1,int y1,int x2,int y2);
\CPP\LIB\TSWIN\tswin.hpp 253: void     tsw_scroll     (char mode,char x1,char y1,char x2,char y2,char lines,ATTR attr);
\CPP\LIB\TSWIN\tswin.hpp 254: void     tsw_fillrect   (int x1,int y1,int x2,int y2,char c,ATTR attr);
\CPP\LIB\TSWIN\tswin.hpp 255: void     tsw_maputs     (int x,int y,ATTR attr,char *s);
\CPP\LIB\TSWIN\tswin.hpp 256: void     tsw_mputs      (int x,int y,char *s);
\CPP\LIB\TSWIN\tswin.hpp 257: void     tsw_gettext    (word *,int x1,int y1,int x2,int y2);
\CPP\LIB\TSWIN\tswin.hpp 258: void     tsw_puttext    (word *,int x1,int y1,int x2,int y2);
\CPP\LIB\TSWIN\tswin.hpp 259: int      tsw_printerstat(int printer=0);
\CPP\LIB\TSWIN\tswin.hpp 260: void     tsw_gotoxy     (int,int);
\CPP\LIB\TSWIN\tswin.hpp 261: 
\CPP\LIB\TSWIN\tswin.hpp 262: int      check_key();
\CPP\LIB\TSWIN\tswin.hpp 263: void     slide(void __far *);
\CPP\LIB\TSWIN\tswin.hpp 264: }
\CPP\LIB\TSWIN\tswin.hpp 265: 
\CPP\LIB\TSWIN\tswin.hpp 266: void     tsw_cursoron   ();
\CPP\LIB\TSWIN\tswin.hpp 267: void     tsw_cursoroff  ();
\CPP\LIB\TSWIN\tswin.hpp 268: 
\CPP\LIB\TSWIN\tswin.hpp 269: 
\CPP\LIB\TSWIN\tswin.hpp 270: void tsw_beep           (word freq=1000,word dur=100);
\CPP\LIB\TSWIN\tswin.hpp 271: char tsw_choice         (char *list);
\CPP\LIB\TSWIN\tswin.hpp 272: void tsw_errorattr      (ATTR,ATTR);
\CPP\LIB\TSWIN\tswin.hpp 273: void tsw_fatalerror     (char *string,ATTR attr = 0,ATTR tattr = 0);
\CPP\LIB\TSWIN\tswin.hpp 274: void tsw_nonfatalerror  (char *string,ATTR attr = 0,ATTR tattr = 0);
\CPP\LIB\TSWIN\tswin.hpp 275: void tsw_prependbs      (char *string);
\CPP\LIB\TSWIN\tswin.hpp 276: int  tsw_checkdisk      (int);
\CPP\LIB\TSWIN\tswin.hpp 277: void tsw_centerline     (int line,char *str,ATTR attr = 0);
\CPP\LIB\TSWIN\tswin.hpp 278: void tsw_drawbox        (int x1,int y1,int x2,int y2,const char *border,ATTR);
\CPP\LIB\TSWIN\tswin.hpp 279: void tsw_chiselbox      (int x1,int y1,int x2,int y2,const char *border,ATTR,ATTR);
\CPP\LIB\TSWIN\tswin.hpp 280: void tsw_recessbox      (int x1,int y1,int x2,int y2,const char *border,ATTR,ATTR,ATTR,ATTR);
\CPP\LIB\TSWIN\tswin.hpp 281: void tsw_showfooter     (char *string,ATTR attr=0x70, ATTR high=0);
\CPP\LIB\TSWIN\tswin.hpp 282: void tsw_clearfooter    ( ATTR attr=0x07 );
\CPP\LIB\TSWIN\tswin.hpp 283: void tsw_clearrect      (int x1,int y1,int x2,int y2,ATTR attr);
\CPP\LIB\TSWIN\tswin.hpp 284: void tsw_selbar         (int line,int x1,int x2,ATTR attr,int height=1);
\CPP\LIB\TSWIN\tswin.hpp 285: void tsw_fillscreen     (char c,ATTR attr);
\CPP\LIB\TSWIN\tswin.hpp 286: 
\CPP\LIB\TSWIN\tswin.hpp 287: void tsw_msgbox(byte attr, char *title , ... );
\CPP\LIB\TSWIN\tswin.hpp 288: 
\CPP\LIB\TSWIN\tswin.hpp 289: int  tsw_selbox( int    x,
\CPP\LIB\TSWIN\tswin.hpp 290: int    y,
\CPP\LIB\TSWIN\tswin.hpp 291: int    maxh,
\CPP\LIB\TSWIN\tswin.hpp 292: byte   attr,
\CPP\LIB\TSWIN\tswin.hpp 293: char **choices,
\CPP\LIB\TSWIN\tswin.hpp 294: int    mode,
\CPP\LIB\TSWIN\tswin.hpp 295: int    defChoice = 0,
\CPP\LIB\TSWIN\tswin.hpp 296: const char *border = DOUBLE_BORDER,
\CPP\LIB\TSWIN\tswin.hpp 297: ATTR  b_attr = 0,
\CPP\LIB\TSWIN\tswin.hpp 298: char *title  = 0,
\CPP\LIB\TSWIN\tswin.hpp 299: ATTR  t_attr = 0 );
\CPP\LIB\TSWIN\tswin.hpp 300: 
\CPP\LIB\TSWIN\tswin.hpp 301: class CursorState
\CPP\LIB\TSWIN\tswin.hpp 302: {
\CPP\LIB\TSWIN\tswin.hpp 303: bool prev;
\CPP\LIB\TSWIN\tswin.hpp 304: public:
\CPP\LIB\TSWIN\tswin.hpp 305: CursorState(bool mode)
\CPP\LIB\TSWIN\tswin.hpp 306: {
\CPP\LIB\TSWIN\tswin.hpp 307: prev = tsw_cursorstate;
\CPP\LIB\TSWIN\tswin.hpp 308: 
\CPP\LIB\TSWIN\tswin.hpp 309: if(mode)
\CPP\LIB\TSWIN\tswin.hpp 310: tsw_cursoron();
\CPP\LIB\TSWIN\tswin.hpp 311: else
\CPP\LIB\TSWIN\tswin.hpp 312: tsw_cursoroff();
\CPP\LIB\TSWIN\tswin.hpp 313: }
\CPP\LIB\TSWIN\tswin.hpp 314: ~CursorState()
\CPP\LIB\TSWIN\tswin.hpp 315: {
\CPP\LIB\TSWIN\tswin.hpp 316: if(prev)
\CPP\LIB\TSWIN\tswin.hpp 317: tsw_cursoron();
\CPP\LIB\TSWIN\tswin.hpp 318: else
\CPP\LIB\TSWIN\tswin.hpp 319: tsw_cursoroff();
\CPP\LIB\TSWIN\tswin.hpp 320: }
\CPP\LIB\TSWIN\tswin.hpp 321: };
\CPP\LIB\TSWIN\tswin.hpp 322: 
\CPP\LIB\TSWIN\tswin.hpp 323: class SaveBuffer
\CPP\LIB\TSWIN\tswin.hpp 324: {
\CPP\LIB\TSWIN\tswin.hpp 325: word *ptr;
\CPP\LIB\TSWIN\tswin.hpp 326: int   xs,ys;
\CPP\LIB\TSWIN\tswin.hpp 327: public:
\CPP\LIB\TSWIN\tswin.hpp 328: SaveBuffer  ();
\CPP\LIB\TSWIN\tswin.hpp 329: ~SaveBuffer ();
\CPP\LIB\TSWIN\tswin.hpp 330: void paste  (int x,int y);
\CPP\LIB\TSWIN\tswin.hpp 331: void paste  (int xf,int yf,int xt,int yt,int xsize,int ysize);
\CPP\LIB\TSWIN\tswin.hpp 332: void copy   (int x,int y,int xs,int ys);
\CPP\LIB\TSWIN\tswin.hpp 333: void clear  ();
\CPP\LIB\TSWIN\tswin.hpp 334: };
\CPP\LIB\TSWIN\tswin.hpp 335: 
\CPP\LIB\TSWIN\tswin.hpp 336: 
\CPP\LIB\TSWIN\tswin.hpp 337: 
\CPP\LIB\TSWIN\tswin.hpp 338: 
\CPP\LIB\TSWIN\tswin.hpp 339: 
\CPP\LIB\TSWIN\tswin.hpp 340: 
\CPP\LIB\TSWIN\tswin.hpp 341: 
\CPP\LIB\TSWIN\tswin.hpp 342: 
\CPP\LIB\TSWIN\tswin.hpp 343: 
\CPP\LIB\TSWIN\tswin.hpp 344: class Window
\CPP\LIB\TSWIN\tswin.hpp 345: {
\CPP\LIB\TSWIN\tswin.hpp 346: SaveBuffer buf;
\CPP\LIB\TSWIN\tswin.hpp 347: int curX,curY;
\CPP\LIB\TSWIN\tswin.hpp 348: int x1,y1,x2,y2;
\CPP\LIB\TSWIN\tswin.hpp 349: const char *borderType;
\CPP\LIB\TSWIN\tswin.hpp 350: int mode;
\CPP\LIB\TSWIN\tswin.hpp 351: char titleStr[81];
\CPP\LIB\TSWIN\tswin.hpp 352: int oldX[5],oldY[5];
\CPP\LIB\TSWIN\tswin.hpp 353: int sp;
\CPP\LIB\TSWIN\tswin.hpp 354: bool noCursorUpdate;
\CPP\LIB\TSWIN\tswin.hpp 355: 
\CPP\LIB\TSWIN\tswin.hpp 356: struct {
\CPP\LIB\TSWIN\tswin.hpp 357: byte status;
\CPP\LIB\TSWIN\tswin.hpp 358: byte needed;
\CPP\LIB\TSWIN\tswin.hpp 359: int  p[5];
\CPP\LIB\TSWIN\tswin.hpp 360: int  par;
\CPP\LIB\TSWIN\tswin.hpp 361: byte *rle_buf;
\CPP\LIB\TSWIN\tswin.hpp 362: } terminal;
\CPP\LIB\TSWIN\tswin.hpp 363: 
\CPP\LIB\TSWIN\tswin.hpp 364: int lowlevel_scanstring(char *str,unsigned len,byte mode,unsigned w);
\CPP\LIB\TSWIN\tswin.hpp 365: void (*initFunc)();
\CPP\LIB\TSWIN\tswin.hpp 366: void putShadow(int x1,int y1,int x2,int y2);
\CPP\LIB\TSWIN\tswin.hpp 367: void explode();
\CPP\LIB\TSWIN\tswin.hpp 368: void implode();
\CPP\LIB\TSWIN\tswin.hpp 369: void updateCursor();
\CPP\LIB\TSWIN\tswin.hpp 370: void _init();
\CPP\LIB\TSWIN\tswin.hpp 371: protected:
\CPP\LIB\TSWIN\tswin.hpp 372: KEY *scanHotKeys;
\CPP\LIB\TSWIN\tswin.hpp 373: ATTR fieldAttr;
\CPP\LIB\TSWIN\tswin.hpp 374: ATTR attr,t_attr,b_attr;
\CPP\LIB\TSWIN\tswin.hpp 375: ATTR tt_attr;
\CPP\LIB\TSWIN\tswin.hpp 376: ATTR iShadowColor;
\CPP\LIB\TSWIN\tswin.hpp 377: ATTR iOuterColor;
\CPP\LIB\TSWIN\tswin.hpp 378: public:
\CPP\LIB\TSWIN\tswin.hpp 379: KEY scanHotKey;
\CPP\LIB\TSWIN\tswin.hpp 380: int minX,minY,maxX,maxY;
\CPP\LIB\TSWIN\tswin.hpp 381: 
\CPP\LIB\TSWIN\tswin.hpp 382: void RecessBox( int x1,int y1,int x2,int y2,const char *border,ATTR,ATTR,ATTR,ATTR);
\CPP\LIB\TSWIN\tswin.hpp 383: 
\CPP\LIB\TSWIN\tswin.hpp 384: Window();
\CPP\LIB\TSWIN\tswin.hpp 385: Window(int x1,int y1,int x2,int y2,ATTR attr,int type=2,const char *border=DOUBLE_BORDER,ATTR b_attr=0,char *title=0,ATTR t_attr=0,ATTR o_attr=0, ATTR tt_attr=0);
\CPP\LIB\TSWIN\tswin.hpp 386: ~Window()  { close(); }
\CPP\LIB\TSWIN\tswin.hpp 387: void ShadowColor( ATTR iColor ) { iShadowColor = iColor; }
\CPP\LIB\TSWIN\tswin.hpp 388: void open( int x1,
\CPP\LIB\TSWIN\tswin.hpp 389: int y1,
\CPP\LIB\TSWIN\tswin.hpp 390: int x2,
\CPP\LIB\TSWIN\tswin.hpp 391: int y2,
\CPP\LIB\TSWIN\tswin.hpp 392: ATTR attr,
\CPP\LIB\TSWIN\tswin.hpp 393: int type = 2,
\CPP\LIB\TSWIN\tswin.hpp 394: const char *border = DOUBLE_BORDER,
\CPP\LIB\TSWIN\tswin.hpp 395: ATTR b_attr  = 0,
\CPP\LIB\TSWIN\tswin.hpp 396: char *title  = 0,
\CPP\LIB\TSWIN\tswin.hpp 397: ATTR t_attr  = 0, 
\CPP\LIB\TSWIN\tswin.hpp 398: ATTR tt_attr = 0);
\CPP\LIB\TSWIN\tswin.hpp 399: void open();
\CPP\LIB\TSWIN\tswin.hpp 400: void close();
\CPP\LIB\TSWIN\tswin.hpp 401: void initFunction(void(*f)())
\CPP\LIB\TSWIN\tswin.hpp 402: {
\CPP\LIB\TSWIN\tswin.hpp 403: initFunc = f;
\CPP\LIB\TSWIN\tswin.hpp 404: }
\CPP\LIB\TSWIN\tswin.hpp 405: void clear();
\CPP\LIB\TSWIN\tswin.hpp 406: void border(const char *type,ATTR attr=0);
\CPP\LIB\TSWIN\tswin.hpp 407: void border(ATTR attr);
\CPP\LIB\TSWIN\tswin.hpp 408: void moveCursor (int dx,int dy);
\CPP\LIB\TSWIN\tswin.hpp 409: void cursorUp   (int n = 1);
\CPP\LIB\TSWIN\tswin.hpp 410: void cursorDown (int n = 1);
\CPP\LIB\TSWIN\tswin.hpp 411: void cursorLeft (int n = 1);
\CPP\LIB\TSWIN\tswin.hpp 412: void cursorRight(int n = 1);
\CPP\LIB\TSWIN\tswin.hpp 413: void getPos(int& x,int& y)
\CPP\LIB\TSWIN\tswin.hpp 414: {
\CPP\LIB\TSWIN\tswin.hpp 415: x = curX;
\CPP\LIB\TSWIN\tswin.hpp 416: y = curY;
\CPP\LIB\TSWIN\tswin.hpp 417: }
\CPP\LIB\TSWIN\tswin.hpp 418: void setPos(int x,int y);
\CPP\LIB\TSWIN\tswin.hpp 419: int  getX()
\CPP\LIB\TSWIN\tswin.hpp 420: {
\CPP\LIB\TSWIN\tswin.hpp 421: return curX;
\CPP\LIB\TSWIN\tswin.hpp 422: }
\CPP\LIB\TSWIN\tswin.hpp 423: int  getY()
\CPP\LIB\TSWIN\tswin.hpp 424: {
\CPP\LIB\TSWIN\tswin.hpp 425: return curY;
\CPP\LIB\TSWIN\tswin.hpp 426: }
\CPP\LIB\TSWIN\tswin.hpp 427: void saveCursor();
\CPP\LIB\TSWIN\tswin.hpp 428: void restoreCursor();
\CPP\LIB\TSWIN\tswin.hpp 429: void attrib(ATTR a) { attr=a; }
\CPP\LIB\TSWIN\tswin.hpp 430: ATTR attrib() { return attr; }
\CPP\LIB\TSWIN\tswin.hpp 431: void scroll(byte direction=6,word numlines=1);
\CPP\LIB\TSWIN\tswin.hpp 432: void title(char *string,ATTR attr=0);
\CPP\LIB\TSWIN\tswin.hpp 433: void title(ATTR a);
\CPP\LIB\TSWIN\tswin.hpp 434: Window& operator<<(char *);
\CPP\LIB\TSWIN\tswin.hpp 435: Window& operator<<(char);
\CPP\LIB\TSWIN\tswin.hpp 436: void direct(int x,int y,ATTR a,char *str);
\CPP\LIB\TSWIN\tswin.hpp 437: void direct(int x,int y,char *str);
\CPP\LIB\TSWIN\tswin.hpp 438: void direct(int x,int y,char c);
\CPP\LIB\TSWIN\tswin.hpp 439: void direct(int x,int y,ATTR a,char c);
\CPP\LIB\TSWIN\tswin.hpp 440: void centerLine(int y,char *s,ATTR a=0);
\CPP\LIB\TSWIN\tswin.hpp 441: char whaton(int x,int y);
\CPP\LIB\TSWIN\tswin.hpp 442: int  scan(char *s,unsigned len,unsigned w=0,byte mode=0);
\CPP\LIB\TSWIN\tswin.hpp 443: int  scan(int& s,unsigned len,unsigned w=0,byte mode=0);
\CPP\LIB\TSWIN\tswin.hpp 444: int  scan(unsigned& s,unsigned len,unsigned w=0,byte mode=0);
\CPP\LIB\TSWIN\tswin.hpp 445: int  scan(long& s,unsigned len,unsigned w=0,byte mode=0);
\CPP\LIB\TSWIN\tswin.hpp 446: int  scan(Date& d,char *fmt);
\CPP\LIB\TSWIN\tswin.hpp 447: void setScanHotKeys(KEY *h = 0)
\CPP\LIB\TSWIN\tswin.hpp 448: {
\CPP\LIB\TSWIN\tswin.hpp 449: scanHotKeys = h;
\CPP\LIB\TSWIN\tswin.hpp 450: }
\CPP\LIB\TSWIN\tswin.hpp 451: KEY  getScanHotkey()
\CPP\LIB\TSWIN\tswin.hpp 452: {
\CPP\LIB\TSWIN\tswin.hpp 453: return scanHotKey;
\CPP\LIB\TSWIN\tswin.hpp 454: }
\CPP\LIB\TSWIN\tswin.hpp 455: void zoom();
\CPP\LIB\TSWIN\tswin.hpp 456: void change(int x1,int y1,int x2,int y2);
\CPP\LIB\TSWIN\tswin.hpp 457: void frame();
\CPP\LIB\TSWIN\tswin.hpp 458: void setFieldAttr(ATTR a)
\CPP\LIB\TSWIN\tswin.hpp 459: {
\CPP\LIB\TSWIN\tswin.hpp 460: fieldAttr = a;
\CPP\LIB\TSWIN\tswin.hpp 461: }
\CPP\LIB\TSWIN\tswin.hpp 462: void gauge(int x,int y,ATTR a,int len,dword val,dword max ,bool rewrite = TRUE);
\CPP\LIB\TSWIN\tswin.hpp 463: void gauge(int x,int y,int len,dword val,dword max ,bool rewrite = TRUE)
\CPP\LIB\TSWIN\tswin.hpp 464: {
\CPP\LIB\TSWIN\tswin.hpp 465: gauge(x,y,attr,len,val,max ,rewrite);
\CPP\LIB\TSWIN\tswin.hpp 466: }
\CPP\LIB\TSWIN\tswin.hpp 467: bool inEscape()
\CPP\LIB\TSWIN\tswin.hpp 468: {
\CPP\LIB\TSWIN\tswin.hpp 469: return bool(terminal.status != 0);
\CPP\LIB\TSWIN\tswin.hpp 470: }
\CPP\LIB\TSWIN\tswin.hpp 471: void disableCursor()
\CPP\LIB\TSWIN\tswin.hpp 472: {
\CPP\LIB\TSWIN\tswin.hpp 473: noCursorUpdate = TRUE;
\CPP\LIB\TSWIN\tswin.hpp 474: }
\CPP\LIB\TSWIN\tswin.hpp 475: void enableCursor()
\CPP\LIB\TSWIN\tswin.hpp 476: {
\CPP\LIB\TSWIN\tswin.hpp 477: noCursorUpdate = FALSE;
\CPP\LIB\TSWIN\tswin.hpp 478: updateCursor();
\CPP\LIB\TSWIN\tswin.hpp 479: }
\CPP\LIB\TSWIN\tswin.hpp 480: void placeCursor();
\CPP\LIB\TSWIN\tswin.hpp 481: int  selBox(char **choices,byte battr = 0x70,int defChoice = 0);
\CPP\LIB\TSWIN\tswin.hpp 482: };
\CPP\LIB\TSWIN\tswin.hpp 483: 
\CPP\LIB\TSWIN\tswin.hpp 484: 
\CPP\LIB\TSWIN\tswin.hpp 485: class FormWindow : public Window
\CPP\LIB\TSWIN\tswin.hpp 486: {
\CPP\LIB\TSWIN\tswin.hpp 487: Field *f;
\CPP\LIB\TSWIN\tswin.hpp 488: int    numFields;
\CPP\LIB\TSWIN\tswin.hpp 489: ATTR   dispAttr;
\CPP\LIB\TSWIN\tswin.hpp 490: ATTR   selAttr;
\CPP\LIB\TSWIN\tswin.hpp 491: KEY   *hotkeys;
\CPP\LIB\TSWIN\tswin.hpp 492: void   (*helpFunc)(int);
\CPP\LIB\TSWIN\tswin.hpp 493: int    cur_field;
\CPP\LIB\TSWIN\tswin.hpp 494: 
\CPP\LIB\TSWIN\tswin.hpp 495: int  editField(int);
\CPP\LIB\TSWIN\tswin.hpp 496: public:
\CPP\LIB\TSWIN\tswin.hpp 497: void showField(int);
\CPP\LIB\TSWIN\tswin.hpp 498: FormWindow();
\CPP\LIB\TSWIN\tswin.hpp 499: FormWindow(int x1,int y1,int x2,int y2,ATTR attr,int type=2,const char *border=DOUBLE_BORDER,ATTR b_attr=0,char *title=0,ATTR t_attr=0);
\CPP\LIB\TSWIN\tswin.hpp 500: FormWindow(Field *,int num_forms,ATTR disp_attr=0,ATTR sel_attr=0x70,KEY *hotkeys=0,void(*func)(int)=0);
\CPP\LIB\TSWIN\tswin.hpp 501: void define(Field *,int num_forms,ATTR disp_attr=0,ATTR sel_attr=0x70,KEY *hotkeys=0,void(*func)(int)=0);
\CPP\LIB\TSWIN\tswin.hpp 502: int process();
\CPP\LIB\TSWIN\tswin.hpp 503: void setField(int field=0)
\CPP\LIB\TSWIN\tswin.hpp 504: {
\CPP\LIB\TSWIN\tswin.hpp 505: cur_field = field;
\CPP\LIB\TSWIN\tswin.hpp 506: }
\CPP\LIB\TSWIN\tswin.hpp 507: 
\CPP\LIB\TSWIN\tswin.hpp 508: int getField()
\CPP\LIB\TSWIN\tswin.hpp 509: {
\CPP\LIB\TSWIN\tswin.hpp 510: return(cur_field);
\CPP\LIB\TSWIN\tswin.hpp 511: }
\CPP\LIB\TSWIN\tswin.hpp 512: };
\CPP\LIB\TSWIN\tswin.hpp 513: 
\CPP\LIB\TSWIN\tswin.hpp 514: 
\CPP\LIB\TSWIN\tswin.hpp 515: class EditWindow : public Window
\CPP\LIB\TSWIN\tswin.hpp 516: {
\CPP\LIB\TSWIN\tswin.hpp 517: int ed_x,ed_y;       
\CPP\LIB\TSWIN\tswin.hpp 518: int ed_x1,ed_y1;     
\CPP\LIB\TSWIN\tswin.hpp 519: int numlines;        
\CPP\LIB\TSWIN\tswin.hpp 520: String *line;        
\CPP\LIB\TSWIN\tswin.hpp 521: 
\CPP\LIB\TSWIN\tswin.hpp 522: void display(int line);
\CPP\LIB\TSWIN\tswin.hpp 523: void display();
\CPP\LIB\TSWIN\tswin.hpp 524: void display_cursor();
\CPP\LIB\TSWIN\tswin.hpp 525: void key_up();
\CPP\LIB\TSWIN\tswin.hpp 526: void key_down();
\CPP\LIB\TSWIN\tswin.hpp 527: void key_left();
\CPP\LIB\TSWIN\tswin.hpp 528: void key_right();
\CPP\LIB\TSWIN\tswin.hpp 529: void key_pageup();
\CPP\LIB\TSWIN\tswin.hpp 530: void key_pagedown();
\CPP\LIB\TSWIN\tswin.hpp 531: void key_del();
\CPP\LIB\TSWIN\tswin.hpp 532: void key_enter();
\CPP\LIB\TSWIN\tswin.hpp 533: void key_end();
\CPP\LIB\TSWIN\tswin.hpp 534: void key_home();
\CPP\LIB\TSWIN\tswin.hpp 535: void key_bs();
\CPP\LIB\TSWIN\tswin.hpp 536: void key_char(char k);
\CPP\LIB\TSWIN\tswin.hpp 537: public:
\CPP\LIB\TSWIN\tswin.hpp 538: EditWindow();
\CPP\LIB\TSWIN\tswin.hpp 539: ~EditWindow();
\CPP\LIB\TSWIN\tswin.hpp 540: void feed(char *text);
\CPP\LIB\TSWIN\tswin.hpp 541: KEY  edit(KEY *hotkeys=0);
\CPP\LIB\TSWIN\tswin.hpp 542: void retrieve(char *text,int maxsize=0);
\CPP\LIB\TSWIN\tswin.hpp 543: };
\CPP\LIB\TSWIN\tswin.hpp 544: 
\CPP\LIB\TSWIN\tswin.hpp 545: class ViewWindow : public Window
\CPP\LIB\TSWIN\tswin.hpp 546: {
\CPP\LIB\TSWIN\tswin.hpp 547: int start,end;
\CPP\LIB\TSWIN\tswin.hpp 548: KEY *hotkeys;
\CPP\LIB\TSWIN\tswin.hpp 549: void (*func)(int i,int x,int y);
\CPP\LIB\TSWIN\tswin.hpp 550: int num_entries;
\CPP\LIB\TSWIN\tswin.hpp 551: public:
\CPP\LIB\TSWIN\tswin.hpp 552: KEY hotkey;
\CPP\LIB\TSWIN\tswin.hpp 553: 
\CPP\LIB\TSWIN\tswin.hpp 554: ViewWindow() { }
\CPP\LIB\TSWIN\tswin.hpp 555: ViewWindow(int num,void(*function)(int,int,int),KEY *hot);
\CPP\LIB\TSWIN\tswin.hpp 556: void define(int num,void(*function)(int,int,int),KEY *hot);
\CPP\LIB\TSWIN\tswin.hpp 557: int process();
\CPP\LIB\TSWIN\tswin.hpp 558: void showlast();
\CPP\LIB\TSWIN\tswin.hpp 559: void showfirst() { end=0; }
\CPP\LIB\TSWIN\tswin.hpp 560: };
\CPP\LIB\TSWIN\tswin.hpp 561: 
\CPP\LIB\TSWIN\tswin.hpp 562: class SelectWindow : public Window
\CPP\LIB\TSWIN\tswin.hpp 563: {
\CPP\LIB\TSWIN\tswin.hpp 564: int start,end;
\CPP\LIB\TSWIN\tswin.hpp 565: KEY *hotkeys;
\CPP\LIB\TSWIN\tswin.hpp 566: void (*func)(int,int,int);
\CPP\LIB\TSWIN\tswin.hpp 567: void (*emptyfunc)(int,int);
\CPP\LIB\TSWIN\tswin.hpp 568: void (*action)(int);
\CPP\LIB\TSWIN\tswin.hpp 569: char *selected;
\CPP\LIB\TSWIN\tswin.hpp 570: ATTR selAttr,bar_attr;
\CPP\LIB\TSWIN\tswin.hpp 571: int num_entries;
\CPP\LIB\TSWIN\tswin.hpp 572: public:
\CPP\LIB\TSWIN\tswin.hpp 573: int current;
\CPP\LIB\TSWIN\tswin.hpp 574: KEY hotkey;
\CPP\LIB\TSWIN\tswin.hpp 575: 
\CPP\LIB\TSWIN\tswin.hpp 576: SelectWindow() { }
\CPP\LIB\TSWIN\tswin.hpp 577: 
\CPP\LIB\TSWIN\tswin.hpp 578: SelectWindow( int  num,
\CPP\LIB\TSWIN\tswin.hpp 579: ATTR battr,
\CPP\LIB\TSWIN\tswin.hpp 580: void(*f)(int,int,int),
\CPP\LIB\TSWIN\tswin.hpp 581: ATTR  sattr = 0,
\CPP\LIB\TSWIN\tswin.hpp 582: char *sel   = 0,
\CPP\LIB\TSWIN\tswin.hpp 583: KEY  *hot   = 0,
\CPP\LIB\TSWIN\tswin.hpp 584: void(*actionf)(int) = 0,
\CPP\LIB\TSWIN\tswin.hpp 585: void(*emptyfunc)(int,int) = 0 );
\CPP\LIB\TSWIN\tswin.hpp 586: 
\CPP\LIB\TSWIN\tswin.hpp 587: void define( int  num,
\CPP\LIB\TSWIN\tswin.hpp 588: ATTR battr,
\CPP\LIB\TSWIN\tswin.hpp 589: void(*f)(int,int,int),
\CPP\LIB\TSWIN\tswin.hpp 590: ATTR  sattr = 0,
\CPP\LIB\TSWIN\tswin.hpp 591: char *sel   = 0,
\CPP\LIB\TSWIN\tswin.hpp 592: KEY *hot    = 0,
\CPP\LIB\TSWIN\tswin.hpp 593: void(*actionf)(int)       = 0,
\CPP\LIB\TSWIN\tswin.hpp 594: void(*emptyfunc)(int,int) = 0 );
\CPP\LIB\TSWIN\tswin.hpp 595: void redefine(int num);
\CPP\LIB\TSWIN\tswin.hpp 596: int process();
\CPP\LIB\TSWIN\tswin.hpp 597: void show(int n);
\CPP\LIB\TSWIN\tswin.hpp 598: void showlast()  { show(num_entries-1); }
\CPP\LIB\TSWIN\tswin.hpp 599: void showfirst() { show(0); }
\CPP\LIB\TSWIN\tswin.hpp 600: };
\CPP\LIB\TSWIN\tswin.hpp 601: 
\CPP\LIB\TSWIN\tswin.hpp 602: struct menu_item
\CPP\LIB\TSWIN\tswin.hpp 603: {
\CPP\LIB\TSWIN\tswin.hpp 604: KEY   hotkey;
\CPP\LIB\TSWIN\tswin.hpp 605: int   highlight1,highlight2;
\CPP\LIB\TSWIN\tswin.hpp 606: char *s;
\CPP\LIB\TSWIN\tswin.hpp 607: };
\CPP\LIB\TSWIN\tswin.hpp 608: 
\CPP\LIB\TSWIN\tswin.hpp 609: class PopMenu : public Window
\CPP\LIB\TSWIN\tswin.hpp 610: {
\CPP\LIB\TSWIN\tswin.hpp 611: int current;
\CPP\LIB\TSWIN\tswin.hpp 612: menu_item *items;
\CPP\LIB\TSWIN\tswin.hpp 613: KEY *hotkeys;
\CPP\LIB\TSWIN\tswin.hpp 614: ATTR bar_attr,high_attr;
\CPP\LIB\TSWIN\tswin.hpp 615: int num_entries;
\CPP\LIB\TSWIN\tswin.hpp 616: void (*action)(int);
\CPP\LIB\TSWIN\tswin.hpp 617: public:
\CPP\LIB\TSWIN\tswin.hpp 618: KEY hotkey;
\CPP\LIB\TSWIN\tswin.hpp 619: 
\CPP\LIB\TSWIN\tswin.hpp 620: PopMenu();
\CPP\LIB\TSWIN\tswin.hpp 621: PopMenu(menu_item *i,ATTR b_attr=0x70,ATTR h_attr=0x70,KEY *hot=0,void (*func)(int)=0);
\CPP\LIB\TSWIN\tswin.hpp 622: void define(menu_item *i,ATTR b_attr=0x70,ATTR h_attr=0x70,KEY *hot=0,void (*func)(int)=0);
\CPP\LIB\TSWIN\tswin.hpp 623: int process();
\CPP\LIB\TSWIN\tswin.hpp 624: void refresh(int n=1);
\CPP\LIB\TSWIN\tswin.hpp 625: };
\CPP\LIB\TSWIN\tswin.hpp 626: 
\CPP\LIB\TSWIN\tswin.hpp 627: class KeyBoard
\CPP\LIB\TSWIN\tswin.hpp 628: {
\CPP\LIB\TSWIN\tswin.hpp 629: KEY last;
\CPP\LIB\TSWIN\tswin.hpp 630: KEY pushed;
\CPP\LIB\TSWIN\tswin.hpp 631: void (*help)();
\CPP\LIB\TSWIN\tswin.hpp 632: public:
\CPP\LIB\TSWIN\tswin.hpp 633: KeyBoard();
\CPP\LIB\TSWIN\tswin.hpp 634: ~KeyBoard()
\CPP\LIB\TSWIN\tswin.hpp 635: {
\CPP\LIB\TSWIN\tswin.hpp 636: tsw_cursoron();
\CPP\LIB\TSWIN\tswin.hpp 637: }
\CPP\LIB\TSWIN\tswin.hpp 638: void push(KEY k)
\CPP\LIB\TSWIN\tswin.hpp 639: {
\CPP\LIB\TSWIN\tswin.hpp 640: pushed = k;
\CPP\LIB\TSWIN\tswin.hpp 641: }
\CPP\LIB\TSWIN\tswin.hpp 642: KEY get();
\CPP\LIB\TSWIN\tswin.hpp 643: void get(KEY& k)
\CPP\LIB\TSWIN\tswin.hpp 644: {
\CPP\LIB\TSWIN\tswin.hpp 645: k = get();
\CPP\LIB\TSWIN\tswin.hpp 646: }
\CPP\LIB\TSWIN\tswin.hpp 647: KEY uget();
\CPP\LIB\TSWIN\tswin.hpp 648: void uget(KEY& k)
\CPP\LIB\TSWIN\tswin.hpp 649: {
\CPP\LIB\TSWIN\tswin.hpp 650: k = uget();
\CPP\LIB\TSWIN\tswin.hpp 651: }
\CPP\LIB\TSWIN\tswin.hpp 652: void getlast(KEY& c)
\CPP\LIB\TSWIN\tswin.hpp 653: {
\CPP\LIB\TSWIN\tswin.hpp 654: c = last;
\CPP\LIB\TSWIN\tswin.hpp 655: }
\CPP\LIB\TSWIN\tswin.hpp 656: KEY getlast()
\CPP\LIB\TSWIN\tswin.hpp 657: {
\CPP\LIB\TSWIN\tswin.hpp 658: return last;
\CPP\LIB\TSWIN\tswin.hpp 659: }
\CPP\LIB\TSWIN\tswin.hpp 660: bool hit();
\CPP\LIB\TSWIN\tswin.hpp 661: void clear();
\CPP\LIB\TSWIN\tswin.hpp 662: char choice(const char *s);
\CPP\LIB\TSWIN\tswin.hpp 663: bool ask();
\CPP\LIB\TSWIN\tswin.hpp 664: void helpfunc(void(*helpfunc)())
\CPP\LIB\TSWIN\tswin.hpp 665: {
\CPP\LIB\TSWIN\tswin.hpp 666: help = helpfunc;
\CPP\LIB\TSWIN\tswin.hpp 667: }
\CPP\LIB\TSWIN\tswin.hpp 668: };
\CPP\LIB\TSWIN\tswin.hpp 669: 
\CPP\LIB\TSWIN\tswin.hpp 670: class ScreenRestore
\CPP\LIB\TSWIN\tswin.hpp 671: {
\CPP\LIB\TSWIN\tswin.hpp 672: word *buffer;
\CPP\LIB\TSWIN\tswin.hpp 673: word pos;
\CPP\LIB\TSWIN\tswin.hpp 674: byte mode;
\CPP\LIB\TSWIN\tswin.hpp 675: public:
\CPP\LIB\TSWIN\tswin.hpp 676: ScreenRestore(int mode=0);
\CPP\LIB\TSWIN\tswin.hpp 677: ~ScreenRestore();
\CPP\LIB\TSWIN\tswin.hpp 678: };
\CPP\LIB\TSWIN\tswin.hpp 679: 
\CPP\LIB\TSWIN\tswin.hpp 680: extern Window SCREEN; 
\CPP\LIB\TSWIN\tswin.hpp 681: extern KeyBoard KB;   
\CPP\LIB\TSWIN\tswin.hpp 682: 
\CPP\LIB\TSWIN\tswin.hpp 683: 
\CPP\LIB\TSWIN\tswin.hpp 684: 
\CPP\LIB\TSWIN\tswin.hpp 685: 
\CPP\LIB\TSWIN\tswin.hpp 686: 
editstat.cpp 2: 
procfg.hpp 1: 
procfg.hpp 2: 
procfg.hpp 3: 
procfg.hpp 4: 
procfg.hpp 5: 
procfg.hpp 6: 
procfg.hpp 7: 
procfg.hpp 8: 
procfg.hpp 9: 
procfg.hpp 10: 
procfg.hpp 11: 
procfg.hpp 12: 
procfg.hpp 13: 
procfg.hpp 14: 
procfg.hpp 15: 
procfg.hpp 16: 
procfg.hpp 17: 
procfg.hpp 18: 
procfg.hpp 19: 
procfg.hpp 20: 
procfg.hpp 21: 
procfg.hpp 22: 
procfg.hpp 23: 
procfg.hpp 24: 
procfg.hpp 25: 
procfg.hpp 26: 
\CPP\LIB\TSLIB\tslib.hpp 1: 
\CPP\LIB\TSLIB\tslib.hpp 2: 
\CPP\LIB\TSLIB\tslib.hpp 3: 
\CPP\LIB\TSLIB\tslib.hpp 4: 
\CPP\LIB\TSLIB\tslib.hpp 5: 
\CPP\LIB\TSLIB\tslib.hpp 6: 
\CPP\LIB\TSLIB\tslib.hpp 7: 
\CPP\LIB\TSLIB\tslib.hpp 8: 
\CPP\LIB\TSLIB\tslib.hpp 9: 
\CPP\LIB\TSLIB\tslib.hpp 10: 
\CPP\LIB\TSLIB\tslib.hpp 11: 
\CPP\LIB\TSLIB\tslib.hpp 12: 
\CPP\LIB\TSLIB\tslib.hpp 13: 
\CPP\LIB\TSLIB\tslib.hpp 14: 
\CPP\LIB\TSLIB\tslib.hpp 15: 
\CPP\LIB\TSLIB\tslib.hpp 16: 
\CPP\LIB\TSLIB\tslib.hpp 17: 
\CPP\LIB\TSLIB\tslib.hpp 18: 
\CPP\LIB\TSLIB\tslib.hpp 19: 
\CPP\LIB\TSLIB\tslib.hpp 20: 
\CPP\LIB\TSLIB\tslib.hpp 21: 
\CPP\LIB\TSLIB\tslib.hpp 22: 
\CPP\LIB\TSLIB\tslib.hpp 23: 
\CPP\LIB\TSLIB\tslib.hpp 24: 
\CPP\LIB\TSLIB\tslib.hpp 25: 
\CPP\LIB\TSLIB\tslib.hpp 26: 
\CPP\LIB\TSLIB\tslib.hpp 27: 
\CPP\LIB\TSLIB\tslib.hpp 28: 
\CPP\LIB\TSLIB\tslib.hpp 29: 
\CPP\LIB\TSLIB\tslib.hpp 30: 
\CPP\LIB\TSLIB\tslib.hpp 31: 
\CPP\LIB\TSLIB\tslib.hpp 32: 
\CPP\LIB\TSLIB\tslib.hpp 33: 
\CPP\LIB\TSLIB\tslib.hpp 34: 
\CPP\LIB\TSLIB\tslib.hpp 35: 
\CPP\LIB\TSLIB\tslib.hpp 36: 
\CPP\LIB\TSLIB\tslib.hpp 37: 
\CPP\LIB\TSLIB\tslib.hpp 38: 
\CPP\LIB\TSLIB\tslib.hpp 39: 
\CPP\LIB\TSLIB\tslib.hpp 40: 
\CPP\LIB\TSLIB\tslib.hpp 41: 
\CPP\LIB\TSLIB\tslib.hpp 42: 
\CPP\LIB\TSLIB\tslib.hpp 43: 
\CPP\LIB\TSLIB\tslib.hpp 44: 
\CPP\LIB\TSLIB\tslib.hpp 45: 
\CPP\LIB\TSLIB\tslib.hpp 46: 
\CPP\LIB\TSLIB\tslib.hpp 47: 
\CPP\LIB\TSLIB\tslib.hpp 48: 
\CPP\LIB\TSLIB\tslib.hpp 49: 
\CPP\LIB\TSLIB\tslib.hpp 50: 
\CPP\LIB\TSLIB\tslib.hpp 51: 
\CPP\LIB\TSLIB\tslib.hpp 52: 
\CPP\LIB\TSLIB\tslib.hpp 53: 
\CPP\LIB\TSLIB\tslib.hpp 54: 
\CPP\LIB\TSLIB\tslib.hpp 55: 
\CPP\LIB\TSLIB\tslib.hpp 56: 
\CPP\LIB\TSLIB\tslib.hpp 57: 
\CPP\LIB\TSLIB\tslib.hpp 58: 
\CPP\LIB\TSLIB\tslib.hpp 59: 
\CPP\LIB\TSLIB\tslib.hpp 60: 
\CPP\LIB\TSLIB\tslib.hpp 61: 
\CPP\LIB\TSLIB\tslib.hpp 62: 
\CPP\LIB\TSLIB\tslib.hpp 63: 
\CPP\LIB\TSLIB\tslib.hpp 64: 
\CPP\LIB\TSLIB\tslib.hpp 65: 
\CPP\LIB\TSLIB\tslib.hpp 66: 
\CPP\LIB\TSLIB\tslib.hpp 67: 
\CPP\LIB\TSLIB\tslib.hpp 68: 
\CPP\LIB\TSLIB\tslib.hpp 69: 
\CPP\LIB\TSLIB\tslib.hpp 70: 
\CPP\LIB\TSLIB\tslib.hpp 71: 
\CPP\LIB\TSLIB\tslib.hpp 72: 
\CPP\LIB\TSLIB\tslib.hpp 73: 
\CPP\LIB\TSLIB\tslib.hpp 74: 
\CPP\LIB\TSLIB\tslib.hpp 75: 
\CPP\LIB\TSLIB\tslib.hpp 76: 
\CPP\LIB\TSLIB\tslib.hpp 77: 
\CPP\LIB\TSLIB\tslib.hpp 78: 
\CPP\LIB\TSLIB\tslib.hpp 79: 
\CPP\LIB\TSLIB\tslib.hpp 80: 
\CPP\LIB\TSLIB\tslib.hpp 81: 
\CPP\LIB\TSLIB\tslib.hpp 82: 
\CPP\LIB\TSLIB\tslib.hpp 83: 
\CPP\LIB\TSLIB\tslib.hpp 84: 
\CPP\LIB\TSLIB\tslib.hpp 85: 
\CPP\LIB\TSLIB\tslib.hpp 86: 
\CPP\LIB\TSLIB\tslib.hpp 87: 
\CPP\LIB\TSLIB\tslib.hpp 88: 
\CPP\LIB\TSLIB\tslib.hpp 89: 
\CPP\LIB\TSLIB\tslib.hpp 90: 
\CPP\LIB\TSLIB\tslib.hpp 91: 
\CPP\LIB\TSLIB\tslib.hpp 92: 
\CPP\LIB\TSLIB\tslib.hpp 93: 
\CPP\LIB\TSLIB\tslib.hpp 94: 
\CPP\LIB\TSLIB\tslib.hpp 95: 
\CPP\LIB\TSLIB\tslib.hpp 96: 
\CPP\LIB\TSLIB\tslib.hpp 97: 
\CPP\LIB\TSLIB\tslib.hpp 98: 
\CPP\LIB\TSLIB\tslib.hpp 99: 
\CPP\LIB\TSLIB\tslib.hpp 100: 
\CPP\LIB\TSLIB\tslib.hpp 101: 
\CPP\LIB\TSLIB\tslib.hpp 102: 
\CPP\LIB\TSLIB\tslib.hpp 103: 
\CPP\LIB\TSLIB\tslib.hpp 104: 
\CPP\LIB\TSLIB\tslib.hpp 105: 
\CPP\LIB\TSLIB\tslib.hpp 106: 
\CPP\LIB\TSLIB\tslib.hpp 107: 
\CPP\LIB\TSLIB\tslib.hpp 108: 
\CPP\LIB\TSLIB\tslib.hpp 109: 
\CPP\LIB\TSLIB\tslib.hpp 110: 
\CPP\LIB\TSLIB\tslib.hpp 111: 
\CPP\LIB\TSLIB\tslib.hpp 112: 
\CPP\LIB\TSLIB\tslib.hpp 113: 
\CPP\LIB\TSLIB\tslib.hpp 114: 
\CPP\LIB\TSLIB\tslib.hpp 115: 
\CPP\LIB\TSLIB\tslib.hpp 116: 
\CPP\LIB\TSLIB\tslib.hpp 117: 
\CPP\LIB\TSLIB\tslib.hpp 118: 
\CPP\LIB\TSLIB\tslib.hpp 119: 
\CPP\LIB\TSLIB\tslib.hpp 120: 
\CPP\LIB\TSLIB\tslib.hpp 121: 
\CPP\LIB\TSLIB\tslib.hpp 122: 
\CPP\LIB\TSLIB\tslib.hpp 123: 
\CPP\LIB\TSLIB\tslib.hpp 124: 
\CPP\LIB\TSLIB\tslib.hpp 125: 
\CPP\LIB\TSLIB\tslib.hpp 126: 
\CPP\LIB\TSLIB\tslib.hpp 127: 
\CPP\LIB\TSLIB\tslib.hpp 128: 
\CPP\LIB\TSLIB\tslib.hpp 129: 
\CPP\LIB\TSLIB\tslib.hpp 130: 
\CPP\LIB\TSLIB\tslib.hpp 131: 
\CPP\LIB\TSLIB\tslib.hpp 132: 
\CPP\LIB\TSLIB\tslib.hpp 133: 
\CPP\LIB\TSLIB\tslib.hpp 134: 
\CPP\LIB\TSLIB\tslib.hpp 135: 
\CPP\LIB\TSLIB\tslib.hpp 136: 
\CPP\LIB\TSLIB\tslib.hpp 137: 
\CPP\LIB\TSLIB\tslib.hpp 138: 
\CPP\LIB\TSLIB\tslib.hpp 139: 
\CPP\LIB\TSLIB\tslib.hpp 140: 
\CPP\LIB\TSLIB\tslib.hpp 141: 
\CPP\LIB\TSLIB\tslib.hpp 142: 
\CPP\LIB\TSLIB\tslib.hpp 143: 
\CPP\LIB\TSLIB\tslib.hpp 144: 
\CPP\LIB\TSLIB\tslib.hpp 145: 
\CPP\LIB\TSLIB\tslib.hpp 146: 
\CPP\LIB\TSLIB\tslib.hpp 147: 
\CPP\LIB\TSLIB\tslib.hpp 148: 
\CPP\LIB\TSLIB\tslib.hpp 149: 
\CPP\LIB\TSLIB\tslib.hpp 150: 
\CPP\LIB\TSLIB\tslib.hpp 151: 
\CPP\LIB\TSLIB\tslib.hpp 152: 
\CPP\LIB\TSLIB\tslib.hpp 153: 
\CPP\LIB\TSLIB\tslib.hpp 154: 
\CPP\LIB\TSLIB\tslib.hpp 155: 
\CPP\LIB\TSLIB\tslib.hpp 156: 
\CPP\LIB\TSLIB\tslib.hpp 157: 
\CPP\LIB\TSLIB\tslib.hpp 158: 
\CPP\LIB\TSLIB\tslib.hpp 159: 
\CPP\LIB\TSLIB\tslib.hpp 160: 
\CPP\LIB\TSLIB\tslib.hpp 161: 
\CPP\LIB\TSLIB\tslib.hpp 162: 
\CPP\LIB\TSLIB\tslib.hpp 163: 
\CPP\LIB\TSLIB\tslib.hpp 164: 
\CPP\LIB\TSLIB\tslib.hpp 165: 
\CPP\LIB\TSLIB\tslib.hpp 166: 
\CPP\LIB\TSLIB\tslib.hpp 167: 
\CPP\LIB\TSLIB\tslib.hpp 168: 
\CPP\LIB\TSLIB\tslib.hpp 169: 
\CPP\LIB\TSLIB\tslib.hpp 170: 
\CPP\LIB\TSLIB\tslib.hpp 171: 
\CPP\LIB\TSLIB\tslib.hpp 172: 
\CPP\LIB\TSLIB\tslib.hpp 173: 
\CPP\LIB\TSLIB\tslib.hpp 174: 
\CPP\LIB\TSLIB\tslib.hpp 175: 
\CPP\LIB\TSLIB\tslib.hpp 176: 
\CPP\LIB\TSLIB\tslib.hpp 177: 
\CPP\LIB\TSLIB\tslib.hpp 178: 
\CPP\LIB\TSLIB\tslib.hpp 179: 
\CPP\LIB\TSLIB\tslib.hpp 180: 
\CPP\LIB\TSLIB\tslib.hpp 181: 
\CPP\LIB\TSLIB\tslib.hpp 182: 
\CPP\LIB\TSLIB\tslib.hpp 183: 
\CPP\LIB\TSLIB\tslib.hpp 184: 
\CPP\LIB\TSLIB\tslib.hpp 185: 
\CPP\LIB\TSLIB\tslib.hpp 186: 
\CPP\LIB\TSLIB\tslib.hpp 187: 
\CPP\LIB\TSLIB\tslib.hpp 188: 
\CPP\LIB\TSLIB\tslib.hpp 189: 
\CPP\LIB\TSLIB\tslib.hpp 190: 
\CPP\LIB\TSLIB\tslib.hpp 191: 
\CPP\LIB\TSLIB\tslib.hpp 192: 
\CPP\LIB\TSLIB\tslib.hpp 193: 
\CPP\LIB\TSLIB\tslib.hpp 194: 
\CPP\LIB\TSLIB\tslib.hpp 195: 
\CPP\LIB\TSLIB\tslib.hpp 196: 
\CPP\LIB\TSLIB\tslib.hpp 197: 
\CPP\LIB\TSLIB\tslib.hpp 198: 
\CPP\LIB\TSLIB\tslib.hpp 199: 
\CPP\LIB\TSLIB\tslib.hpp 200: 
\CPP\LIB\TSLIB\tslib.hpp 201: 
\CPP\LIB\TSLIB\tslib.hpp 202: 
\CPP\LIB\TSLIB\tslib.hpp 203: 
\CPP\LIB\TSLIB\tslib.hpp 204: 
\CPP\LIB\TSLIB\tslib.hpp 205: 
\CPP\LIB\TSLIB\tslib.hpp 206: 
\CPP\LIB\TSLIB\tslib.hpp 207: 
\CPP\LIB\TSLIB\tslib.hpp 208: 
\CPP\LIB\TSLIB\tslib.hpp 209: 
\CPP\LIB\TSLIB\tslib.hpp 210: 
\CPP\LIB\TSLIB\tslib.hpp 211: 
\CPP\LIB\TSLIB\tslib.hpp 212: 
\CPP\LIB\TSLIB\tslib.hpp 213: 
\CPP\LIB\TSLIB\tslib.hpp 214: 
\CPP\LIB\TSLIB\tslib.hpp 215: 
\CPP\LIB\TSLIB\tslib.hpp 216: 
\CPP\LIB\TSLIB\tslib.hpp 217: 
\CPP\LIB\TSLIB\tslib.hpp 218: 
\CPP\LIB\TSLIB\tslib.hpp 219: 
\CPP\LIB\TSLIB\tslib.hpp 220: 
\CPP\LIB\TSLIB\tslib.hpp 221: 
\CPP\LIB\TSLIB\tslib.hpp 222: 
\CPP\LIB\TSLIB\tslib.hpp 223: 
\CPP\LIB\TSLIB\tslib.hpp 224: 
\CPP\LIB\TSLIB\tslib.hpp 225: 
\CPP\LIB\TSLIB\tslib.hpp 226: 
\CPP\LIB\TSLIB\tslib.hpp 227: 
\CPP\LIB\TSLIB\tslib.hpp 228: 
\CPP\LIB\TSLIB\tslib.hpp 229: 
\CPP\LIB\TSLIB\tslib.hpp 230: 
\CPP\LIB\TSLIB\tslib.hpp 231: 
\CPP\LIB\TSLIB\tslib.hpp 232: 
\CPP\LIB\TSLIB\tslib.hpp 233: 
\CPP\LIB\TSLIB\tslib.hpp 234: 
\CPP\LIB\TSLIB\tslib.hpp 235: 
\CPP\LIB\TSLIB\tslib.hpp 236: 
\CPP\LIB\TSLIB\tslib.hpp 237: 
\CPP\LIB\TSLIB\tslib.hpp 238: 
\CPP\LIB\TSLIB\tslib.hpp 239: 
\CPP\LIB\TSLIB\tslib.hpp 240: 
\CPP\LIB\TSLIB\tslib.hpp 241: 
\CPP\LIB\TSLIB\tslib.hpp 242: 
\CPP\LIB\TSLIB\tslib.hpp 243: 
\CPP\LIB\TSLIB\tslib.hpp 244: 
\CPP\LIB\TSLIB\tslib.hpp 245: 
\CPP\LIB\TSLIB\tslib.hpp 246: 
\CPP\LIB\TSLIB\tslib.hpp 247: 
\CPP\LIB\TSLIB\tslib.hpp 248: 
\CPP\LIB\TSLIB\tslib.hpp 249: 
\CPP\LIB\TSLIB\tslib.hpp 250: 
\CPP\LIB\TSLIB\tslib.hpp 251: 
\CPP\LIB\TSLIB\tslib.hpp 252: 
\CPP\LIB\TSLIB\tslib.hpp 253: 
\CPP\LIB\TSLIB\tslib.hpp 254: 
\CPP\LIB\TSLIB\tslib.hpp 255: 
\CPP\LIB\TSLIB\tslib.hpp 256: 
\CPP\LIB\TSLIB\tslib.hpp 257: 
\CPP\LIB\TSLIB\tslib.hpp 258: 
\CPP\LIB\TSLIB\tslib.hpp 259: 
\CPP\LIB\TSLIB\tslib.hpp 260: 
\CPP\LIB\TSLIB\tslib.hpp 261: 
\CPP\LIB\TSLIB\tslib.hpp 262: 
\CPP\LIB\TSLIB\tslib.hpp 263: 
\CPP\LIB\TSLIB\tslib.hpp 264: 
\CPP\LIB\TSLIB\tslib.hpp 265: 
\CPP\LIB\TSLIB\tslib.hpp 266: 
\CPP\LIB\TSLIB\tslib.hpp 267: 
\CPP\LIB\TSLIB\tslib.hpp 268: 
\CPP\LIB\TSLIB\tslib.hpp 269: 
\CPP\LIB\TSLIB\tslib.hpp 270: 
\CPP\LIB\TSLIB\tslib.hpp 271: 
\CPP\LIB\TSLIB\tslib.hpp 272: 
\CPP\LIB\TSLIB\tslib.hpp 273: 
\CPP\LIB\TSLIB\tslib.hpp 274: 
\CPP\LIB\TSLIB\tslib.hpp 275: 
\CPP\LIB\TSLIB\tslib.hpp 276: 
\CPP\LIB\TSLIB\tslib.hpp 277: 
\CPP\LIB\TSLIB\tslib.hpp 278: 
\CPP\LIB\TSLIB\tslib.hpp 279: 
\CPP\LIB\TSLIB\tslib.hpp 280: 
\CPP\LIB\TSLIB\tslib.hpp 281: 
\CPP\LIB\TSLIB\tslib.hpp 282: 
\CPP\LIB\TSLIB\tslib.hpp 283: 
\CPP\LIB\TSLIB\tslib.hpp 284: 
\CPP\LIB\TSLIB\tslib.hpp 285: 
\CPP\LIB\TSLIB\tslib.hpp 286: 
\CPP\LIB\TSLIB\tslib.hpp 287: 
\CPP\LIB\TSLIB\tslib.hpp 288: 
\CPP\LIB\TSLIB\tslib.hpp 289: 
\CPP\LIB\TSLIB\tslib.hpp 290: 
\CPP\LIB\TSLIB\tslib.hpp 291: 
\CPP\LIB\TSLIB\tslib.hpp 292: 
\CPP\LIB\TSLIB\tslib.hpp 293: 
\CPP\LIB\TSLIB\tslib.hpp 294: 
\CPP\LIB\TSLIB\tslib.hpp 295: 
\CPP\LIB\TSLIB\tslib.hpp 296: 
\CPP\LIB\TSLIB\tslib.hpp 297: 
\CPP\LIB\TSLIB\tslib.hpp 298: 
\CPP\LIB\TSLIB\tslib.hpp 299: 
\CPP\LIB\TSLIB\tslib.hpp 300: 
\CPP\LIB\TSLIB\tslib.hpp 301: 
\CPP\LIB\TSLIB\tslib.hpp 302: 
\CPP\LIB\TSLIB\tslib.hpp 303: 
\CPP\LIB\TSLIB\tslib.hpp 304: 
\CPP\LIB\TSLIB\tslib.hpp 305: 
\CPP\LIB\TSLIB\tslib.hpp 306: 
\CPP\LIB\TSLIB\tslib.hpp 307: 
\CPP\LIB\TSLIB\tslib.hpp 308: 
\CPP\LIB\TSLIB\tslib.hpp 309: 
\CPP\LIB\TSLIB\tslib.hpp 310: 
\CPP\LIB\TSLIB\tslib.hpp 311: 
\CPP\LIB\TSLIB\tslib.hpp 312: 
\CPP\LIB\TSLIB\tslib.hpp 313: 
\CPP\LIB\TSLIB\tslib.hpp 314: 
\CPP\LIB\TSLIB\tslib.hpp 315: 
\CPP\LIB\TSLIB\tslib.hpp 316: 
\CPP\LIB\TSLIB\tslib.hpp 317: 
\CPP\LIB\TSLIB\tslib.hpp 318: 
\CPP\LIB\TSLIB\tslib.hpp 319: 
\CPP\LIB\TSLIB\tslib.hpp 320: 
\CPP\LIB\TSLIB\tslib.hpp 321: 
\CPP\LIB\TSLIB\tslib.hpp 322: 
\CPP\LIB\TSLIB\tslib.hpp 323: 
\CPP\LIB\TSLIB\tslib.hpp 324: 
\CPP\LIB\TSLIB\tslib.hpp 325: 
\CPP\LIB\TSLIB\tslib.hpp 326: 
\CPP\LIB\TSLIB\tslib.hpp 327: 
\CPP\LIB\TSLIB\tslib.hpp 328: 
\CPP\LIB\TSLIB\tslib.hpp 329: 
\CPP\LIB\TSLIB\tslib.hpp 330: 
\CPP\LIB\TSLIB\tslib.hpp 331: 
\CPP\LIB\TSLIB\tslib.hpp 332: 
\CPP\LIB\TSLIB\tslib.hpp 333: 
\CPP\LIB\TSLIB\tslib.hpp 334: 
\CPP\LIB\TSLIB\tslib.hpp 335: 
\CPP\LIB\TSLIB\tslib.hpp 336: 
\CPP\LIB\TSLIB\tslib.hpp 337: 
\CPP\LIB\TSLIB\tslib.hpp 338: 
\CPP\LIB\TSLIB\tslib.hpp 339: 
\CPP\LIB\TSLIB\tslib.hpp 340: 
\CPP\LIB\TSLIB\tslib.hpp 341: 
\CPP\LIB\TSLIB\tslib.hpp 342: 
\CPP\LIB\TSLIB\tslib.hpp 343: 
\CPP\LIB\TSLIB\tslib.hpp 344: 
\CPP\LIB\TSLIB\tslib.hpp 345: 
\CPP\LIB\TSLIB\tslib.hpp 346: 
\CPP\LIB\TSLIB\tslib.hpp 347: 
\CPP\LIB\TSLIB\tslib.hpp 348: 
\CPP\LIB\TSLIB\tslib.hpp 349: 
\CPP\LIB\TSLIB\tslib.hpp 350: 
\CPP\LIB\TSLIB\tslib.hpp 351: 
\CPP\LIB\TSLIB\tslib.hpp 352: 
\CPP\LIB\TSLIB\tslib.hpp 353: 
\CPP\LIB\TSLIB\tslib.hpp 354: 
\CPP\LIB\TSLIB\tslib.hpp 355: 
\CPP\LIB\TSLIB\tslib.hpp 356: 
\CPP\LIB\TSLIB\tslib.hpp 357: 
\CPP\LIB\TSLIB\tslib.hpp 358: 
\CPP\LIB\TSLIB\tslib.hpp 359: 
\CPP\LIB\TSLIB\tslib.hpp 360: 
\CPP\LIB\TSLIB\tslib.hpp 361: 
\CPP\LIB\TSLIB\tslib.hpp 362: 
\CPP\LIB\TSLIB\tslib.hpp 363: 
\CPP\LIB\TSLIB\tslib.hpp 364: 
\CPP\LIB\TSLIB\tslib.hpp 365: 
\CPP\LIB\TSLIB\tslib.hpp 366: 
\CPP\LIB\TSLIB\tslib.hpp 367: 
\CPP\LIB\TSLIB\tslib.hpp 368: 
\CPP\LIB\TSLIB\tslib.hpp 369: 
\CPP\LIB\TSLIB\tslib.hpp 370: 
\CPP\LIB\TSLIB\tslib.hpp 371: 
\CPP\LIB\TSLIB\tslib.hpp 372: 
\CPP\LIB\TSLIB\tslib.hpp 373: 
\CPP\LIB\TSLIB\tslib.hpp 374: 
\CPP\LIB\TSLIB\tslib.hpp 375: 
\CPP\LIB\TSLIB\tslib.hpp 376: 
\CPP\LIB\TSLIB\tslib.hpp 377: 
\CPP\LIB\TSLIB\tslib.hpp 378: 
\CPP\LIB\TSLIB\tslib.hpp 379: 
\CPP\LIB\TSLIB\tslib.hpp 380: 
\CPP\LIB\TSLIB\tslib.hpp 381: 
\CPP\LIB\TSLIB\tslib.hpp 382: 
\CPP\LIB\TSLIB\tslib.hpp 383: 
\CPP\LIB\TSLIB\tslib.hpp 384: 
\CPP\LIB\TSLIB\tslib.hpp 385: 
\CPP\LIB\TSLIB\tslib.hpp 386: 
\CPP\LIB\TSLIB\tslib.hpp 387: 
\CPP\LIB\TSLIB\tslib.hpp 388: 
\CPP\LIB\TSLIB\tslib.hpp 389: 
\CPP\LIB\TSLIB\tslib.hpp 390: 
\CPP\LIB\TSLIB\tslib.hpp 391: 
\CPP\LIB\TSLIB\tslib.hpp 392: 
\CPP\LIB\TSLIB\tslib.hpp 393: 
\CPP\LIB\TSLIB\tslib.hpp 394: 
\CPP\LIB\TSLIB\tslib.hpp 395: 
\CPP\LIB\TSLIB\tslib.hpp 396: 
\CPP\LIB\TSLIB\tslib.hpp 397: 
\CPP\LIB\TSLIB\tslib.hpp 398: 
\CPP\LIB\TSLIB\tslib.hpp 399: 
\CPP\LIB\TSLIB\tslib.hpp 400: 
\CPP\LIB\TSLIB\tslib.hpp 401: 
\CPP\LIB\TSLIB\tslib.hpp 402: 
\CPP\LIB\TSLIB\tslib.hpp 403: 
\CPP\LIB\TSLIB\tslib.hpp 404: 
\CPP\LIB\TSLIB\tslib.hpp 405: 
\CPP\LIB\TSLIB\tslib.hpp 406: 
\CPP\LIB\TSLIB\tslib.hpp 407: 
\CPP\LIB\TSLIB\tslib.hpp 408: 
\CPP\LIB\TSLIB\tslib.hpp 409: 
\CPP\LIB\TSLIB\tslib.hpp 410: 
\CPP\LIB\TSLIB\tslib.hpp 411: 
\CPP\LIB\TSLIB\tslib.hpp 412: 
\CPP\LIB\TSLIB\tslib.hpp 413: 
\CPP\LIB\TSLIB\tslib.hpp 414: 
\CPP\LIB\TSLIB\tslib.hpp 415: 
\CPP\LIB\TSLIB\tslib.hpp 416: 
\CPP\LIB\TSLIB\tslib.hpp 417: 
\CPP\LIB\TSLIB\tslib.hpp 418: 
\CPP\LIB\TSLIB\tslib.hpp 419: 
\CPP\LIB\TSLIB\tslib.hpp 420: 
\CPP\LIB\TSLIB\tslib.hpp 421: 
\CPP\LIB\TSLIB\tslib.hpp 422: 
\CPP\LIB\TSLIB\tslib.hpp 423: 
\CPP\LIB\TSLIB\tslib.hpp 424: 
\CPP\LIB\TSLIB\tslib.hpp 425: 
\CPP\LIB\TSLIB\tslib.hpp 426: 
\CPP\LIB\TSLIB\tslib.hpp 427: 
\CPP\LIB\TSLIB\tslib.hpp 428: 
\CPP\LIB\TSLIB\tslib.hpp 429: 
\CPP\LIB\TSLIB\tslib.hpp 430: 
\CPP\LIB\TSLIB\tslib.hpp 431: 
\CPP\LIB\TSLIB\tslib.hpp 432: 
\CPP\LIB\TSLIB\tslib.hpp 433: 
\CPP\LIB\TSLIB\tslib.hpp 434: 
\CPP\LIB\TSLIB\tslib.hpp 435: 
\CPP\LIB\TSLIB\tslib.hpp 436: 
\CPP\LIB\TSLIB\tslib.hpp 437: 
\CPP\LIB\TSLIB\tslib.hpp 438: 
\CPP\LIB\TSLIB\tslib.hpp 439: 
\CPP\LIB\TSLIB\tslib.hpp 440: 
\CPP\LIB\TSLIB\tslib.hpp 441: 
\CPP\LIB\TSLIB\tslib.hpp 442: 
\CPP\LIB\TSLIB\tslib.hpp 443: 
\CPP\LIB\TSLIB\tslib.hpp 444: 
\CPP\LIB\TSLIB\tslib.hpp 445: 
\CPP\LIB\TSLIB\tslib.hpp 446: 
\CPP\LIB\TSLIB\tslib.hpp 447: 
\CPP\LIB\TSLIB\tslib.hpp 448: 
\CPP\LIB\TSLIB\tslib.hpp 449: 
\CPP\LIB\TSLIB\tslib.hpp 450: 
\CPP\LIB\TSLIB\tslib.hpp 451: 
\CPP\LIB\TSLIB\tslib.hpp 452: 
\CPP\LIB\TSLIB\tslib.hpp 453: 
\CPP\LIB\TSLIB\tslib.hpp 454: 
\CPP\LIB\TSLIB\tslib.hpp 455: 
\CPP\LIB\TSLIB\tslib.hpp 456: 
\CPP\LIB\TSLIB\tslib.hpp 457: 
\CPP\LIB\TSLIB\tslib.hpp 458: 
\CPP\LIB\TSLIB\tslib.hpp 459: 
\CPP\LIB\TSLIB\tslib.hpp 460: 
\CPP\LIB\TSLIB\tslib.hpp 461: 
\CPP\LIB\TSLIB\tslib.hpp 462: 
\CPP\LIB\TSLIB\tslib.hpp 463: 
\CPP\LIB\TSLIB\tslib.hpp 464: 
\CPP\LIB\TSLIB\tslib.hpp 465: 
\CPP\LIB\TSLIB\tslib.hpp 466: 
\CPP\LIB\TSLIB\tslib.hpp 467: 
\CPP\LIB\TSLIB\tslib.hpp 468: 
\CPP\LIB\TSLIB\tslib.hpp 469: 
\CPP\LIB\TSLIB\tslib.hpp 470: 
\CPP\LIB\TSLIB\tslib.hpp 471: 
\CPP\LIB\TSLIB\tslib.hpp 472: 
\CPP\LIB\TSLIB\tslib.hpp 473: 
\CPP\LIB\TSLIB\tslib.hpp 474: 
\CPP\LIB\TSLIB\tslib.hpp 475: 
\CPP\LIB\TSLIB\tslib.hpp 476: 
\CPP\LIB\TSLIB\tslib.hpp 477: 
\CPP\LIB\TSLIB\tslib.hpp 478: 
\CPP\LIB\TSLIB\tslib.hpp 479: 
\CPP\LIB\TSLIB\tslib.hpp 480: 
\CPP\LIB\TSLIB\tslib.hpp 481: 
\CPP\LIB\TSLIB\tslib.hpp 482: 
\CPP\LIB\TSLIB\tslib.hpp 483: 
\CPP\LIB\TSLIB\tslib.hpp 484: 
\CPP\LIB\TSLIB\tslib.hpp 485: 
\CPP\LIB\TSLIB\tslib.hpp 486: 
\CPP\LIB\TSLIB\tslib.hpp 487: 
\CPP\LIB\TSLIB\tslib.hpp 488: 
\CPP\LIB\TSLIB\tslib.hpp 489: 
\CPP\LIB\TSLIB\tslib.hpp 490: 
\CPP\LIB\TSLIB\tslib.hpp 491: 
\CPP\LIB\TSLIB\tslib.hpp 492: 
\CPP\LIB\TSLIB\tslib.hpp 493: 
\CPP\LIB\TSLIB\tslib.hpp 494: 
\CPP\LIB\TSLIB\tslib.hpp 495: 
\CPP\LIB\TSLIB\tslib.hpp 496: 
\CPP\LIB\TSLIB\tslib.hpp 497: 
\CPP\LIB\TSLIB\tslib.hpp 498: 
\CPP\LIB\TSLIB\tslib.hpp 499: 
\CPP\LIB\TSLIB\tslib.hpp 500: 
\CPP\LIB\TSLIB\tslib.hpp 501: 
\CPP\LIB\TSLIB\tslib.hpp 502: 
\CPP\LIB\TSLIB\tslib.hpp 503: 
\CPP\LIB\TSLIB\tslib.hpp 504: 
\CPP\LIB\TSLIB\tslib.hpp 505: 
\CPP\LIB\TSLIB\tslib.hpp 506: 
\CPP\LIB\TSLIB\tslib.hpp 507: 
\CPP\LIB\TSLIB\tslib.hpp 508: 
\CPP\LIB\TSLIB\tslib.hpp 509: 
\CPP\LIB\TSLIB\tslib.hpp 510: 
\CPP\LIB\TSLIB\tslib.hpp 511: 
\CPP\LIB\TSLIB\tslib.hpp 512: 
\CPP\LIB\TSLIB\tslib.hpp 513: 
\CPP\LIB\TSLIB\tslib.hpp 514: 
\CPP\LIB\TSLIB\tslib.hpp 515: 
\CPP\LIB\TSLIB\tslib.hpp 516: 
\CPP\LIB\TSLIB\tslib.hpp 517: 
\CPP\LIB\TSLIB\tslib.hpp 518: 
\CPP\LIB\TSLIB\tslib.hpp 519: 
\CPP\LIB\TSLIB\tslib.hpp 520: 
\CPP\LIB\TSLIB\tslib.hpp 521: 
\CPP\LIB\TSLIB\tslib.hpp 522: 
\CPP\LIB\TSLIB\tslib.hpp 523: 
\CPP\LIB\TSLIB\tslib.hpp 524: 
\CPP\LIB\TSLIB\tslib.hpp 525: 
\CPP\LIB\TSLIB\tslib.hpp 526: 
\CPP\LIB\TSLIB\tslib.hpp 527: 
\CPP\LIB\TSLIB\tslib.hpp 528: 
\CPP\LIB\TSLIB\tslib.hpp 529: 
\CPP\LIB\TSLIB\tslib.hpp 530: 
\CPP\LIB\TSLIB\tslib.hpp 531: 
\CPP\LIB\TSLIB\tslib.hpp 532: 
\CPP\LIB\TSLIB\tslib.hpp 533: 
\CPP\LIB\TSLIB\tslib.hpp 534: 
\CPP\LIB\TSLIB\tslib.hpp 535: 
\CPP\LIB\TSLIB\tslib.hpp 536: 
\CPP\LIB\TSLIB\tslib.hpp 537: 
\CPP\LIB\TSLIB\tslib.hpp 538: 
\CPP\LIB\TSLIB\tslib.hpp 539: 
\CPP\LIB\TSLIB\tslib.hpp 540: 
\CPP\LIB\TSLIB\tslib.hpp 541: 
\CPP\LIB\TSLIB\tslib.hpp 542: 
\CPP\LIB\TSLIB\tslib.hpp 543: 
\CPP\LIB\TSLIB\tslib.hpp 544: 
\CPP\LIB\TSLIB\tslib.hpp 545: 
\CPP\LIB\TSLIB\tslib.hpp 546: 
\CPP\LIB\TSLIB\tslib.hpp 547: 
\CPP\LIB\TSLIB\tslib.hpp 548: 
\CPP\LIB\TSLIB\tslib.hpp 549: 
\CPP\LIB\TSLIB\tslib.hpp 550: 
\CPP\LIB\TSLIB\tslib.hpp 551: 
\CPP\LIB\TSLIB\tslib.hpp 552: 
\CPP\LIB\TSLIB\tslib.hpp 553: 
\CPP\LIB\TSLIB\tslib.hpp 554: 
\CPP\LIB\TSLIB\tslib.hpp 555: 
\CPP\LIB\TSLIB\tslib.hpp 556: 
\CPP\LIB\TSLIB\tslib.hpp 557: 
\CPP\LIB\TSLIB\tslib.hpp 558: 
\CPP\LIB\TSLIB\tslib.hpp 559: 
\CPP\LIB\TSLIB\tslib.hpp 560: 
\CPP\LIB\TSLIB\tslib.hpp 561: 
\CPP\LIB\TSLIB\tslib.hpp 562: 
\CPP\LIB\TSLIB\tslib.hpp 563: 
\CPP\LIB\TSLIB\tslib.hpp 564: 
\CPP\LIB\TSLIB\tslib.hpp 565: 
\CPP\LIB\TSLIB\tslib.hpp 566: 
\CPP\LIB\TSLIB\tslib.hpp 567: 
\CPP\LIB\TSLIB\tslib.hpp 568: 
\CPP\LIB\TSLIB\tslib.hpp 569: 
\CPP\LIB\TSLIB\tslib.hpp 570: 
\CPP\LIB\TSLIB\tslib.hpp 571: 
\CPP\LIB\TSLIB\tslib.hpp 572: 
\CPP\LIB\TSLIB\tslib.hpp 573: 
\CPP\LIB\TSLIB\tslib.hpp 574: 
\CPP\LIB\TSLIB\tslib.hpp 575: 
\CPP\LIB\TSLIB\tslib.hpp 576: 
\CPP\LIB\TSLIB\tslib.hpp 577: 
\CPP\LIB\TSLIB\tslib.hpp 578: 
\CPP\LIB\TSLIB\tslib.hpp 579: 
\CPP\LIB\TSLIB\tslib.hpp 580: 
\CPP\LIB\TSLIB\tslib.hpp 581: 
\CPP\LIB\TSLIB\tslib.hpp 582: 
\CPP\LIB\TSLIB\tslib.hpp 583: 
\CPP\LIB\TSLIB\tslib.hpp 584: 
\CPP\LIB\TSLIB\tslib.hpp 585: 
\CPP\LIB\TSLIB\tslib.hpp 586: 
\CPP\LIB\TSLIB\tslib.hpp 587: 
\CPP\LIB\TSLIB\tslib.hpp 588: 
\CPP\LIB\TSLIB\tslib.hpp 589: 
\CPP\LIB\TSLIB\tslib.hpp 590: 
\CPP\LIB\TSLIB\tslib.hpp 591: 
\CPP\LIB\TSLIB\tslib.hpp 592: 
\CPP\LIB\TSLIB\tslib.hpp 593: 
\CPP\LIB\TSLIB\tslib.hpp 594: 
\CPP\LIB\TSLIB\tslib.hpp 595: 
\CPP\LIB\TSLIB\tslib.hpp 596: 
\CPP\LIB\TSLIB\tslib.hpp 597: 
\CPP\LIB\TSLIB\tslib.hpp 598: 
\CPP\LIB\TSLIB\tslib.hpp 599: 
\CPP\LIB\TSLIB\tslib.hpp 600: 
\CPP\LIB\TSLIB\tslib.hpp 601: 
\CPP\LIB\TSLIB\tslib.hpp 602: 
\CPP\LIB\TSLIB\tslib.hpp 603: 
\CPP\LIB\TSLIB\tslib.hpp 604: 
\CPP\LIB\TSLIB\tslib.hpp 605: 
\CPP\LIB\TSLIB\tslib.hpp 606: 
\CPP\LIB\TSLIB\tslib.hpp 607: 
\CPP\LIB\TSLIB\tslib.hpp 608: 
\CPP\LIB\TSLIB\tslib.hpp 609: 
\CPP\LIB\TSLIB\tslib.hpp 610: 
\CPP\LIB\TSLIB\tslib.hpp 611: 
\CPP\LIB\TSLIB\tslib.hpp 612: 
\CPP\LIB\TSLIB\tslib.hpp 613: 
\CPP\LIB\TSLIB\tslib.hpp 614: 
\CPP\LIB\TSLIB\tslib.hpp 615: 
\CPP\LIB\TSLIB\tslib.hpp 616: 
\CPP\LIB\TSLIB\tslib.hpp 617: 
\CPP\LIB\TSLIB\tslib.hpp 618: 
\CPP\LIB\TSLIB\tslib.hpp 619: 
\CPP\LIB\TSLIB\tslib.hpp 620: 
\CPP\LIB\TSLIB\tslib.hpp 621: 
\CPP\LIB\TSLIB\tslib.hpp 622: 
\CPP\LIB\TSLIB\tslib.hpp 623: 
\CPP\LIB\TSLIB\tslib.hpp 624: 
\CPP\LIB\TSLIB\tslib.hpp 625: 
\CPP\LIB\TSLIB\tslib.hpp 626: 
\CPP\LIB\TSLIB\tslib.hpp 627: 
\CPP\LIB\TSLIB\tslib.hpp 628: 
\CPP\LIB\TSLIB\tslib.hpp 629: 
\CPP\LIB\TSLIB\tslib.hpp 630: 
\CPP\LIB\TSLIB\tslib.hpp 631: 
\CPP\LIB\TSLIB\tslib.hpp 632: 
\CPP\LIB\TSLIB\tslib.hpp 633: 
\CPP\LIB\TSLIB\tslib.hpp 634: 
\CPP\LIB\TSLIB\tslib.hpp 635: 
\CPP\LIB\TSLIB\tslib.hpp 636: 
\CPP\LIB\TSLIB\tslib.hpp 637: 
\CPP\LIB\TSLIB\tslib.hpp 638: 
\CPP\LIB\TSLIB\tslib.hpp 639: 
\CPP\LIB\TSLIB\tslib.hpp 640: 
\CPP\LIB\TSLIB\tslib.hpp 641: 
\CPP\LIB\TSLIB\tslib.hpp 642: 
\CPP\LIB\TSLIB\tslib.hpp 643: 
\CPP\LIB\TSLIB\tslib.hpp 644: 
\CPP\LIB\TSLIB\tslib.hpp 645: 
\CPP\LIB\TSLIB\tslib.hpp 646: 
\CPP\LIB\TSLIB\tslib.hpp 647: 
\CPP\LIB\TSLIB\tslib.hpp 648: 
\CPP\LIB\TSLIB\tslib.hpp 649: 
\CPP\LIB\TSLIB\tslib.hpp 650: 
\CPP\LIB\TSLIB\tslib.hpp 651: 
\CPP\LIB\TSLIB\tslib.hpp 652: 
\CPP\LIB\TSLIB\tslib.hpp 653: 
\CPP\LIB\TSLIB\tslib.hpp 654: 
\CPP\LIB\TSLIB\tslib.hpp 655: 
\CPP\LIB\TSLIB\tslib.hpp 656: 
\CPP\LIB\TSLIB\tslib.hpp 657: 
\CPP\LIB\TSLIB\tslib.hpp 658: 
\CPP\LIB\TSLIB\tslib.hpp 659: 
\CPP\LIB\TSLIB\tslib.hpp 660: 
\CPP\LIB\TSLIB\tslib.hpp 661: 
\CPP\LIB\TSLIB\tslib.hpp 662: 
\CPP\LIB\TSLIB\tslib.hpp 663: 
\CPP\LIB\TSLIB\tslib.hpp 664: 
\CPP\LIB\TSLIB\tslib.hpp 665: 
\CPP\LIB\TSLIB\tslib.hpp 666: 
\CPP\LIB\TSLIB\tslib.hpp 667: 
\CPP\LIB\TSLIB\tslib.hpp 668: 
\CPP\LIB\TSLIB\tslib.hpp 669: 
\CPP\LIB\TSLIB\tslib.hpp 670: 
\CPP\LIB\TSLIB\tslib.hpp 671: 
\CPP\LIB\TSLIB\tslib.hpp 672: 
\CPP\LIB\TSLIB\tslib.hpp 673: 
\CPP\LIB\TSLIB\tslib.hpp 674: 
\CPP\LIB\TSLIB\tslib.hpp 675: 
\CPP\LIB\TSLIB\tslib.hpp 676: 
\CPP\LIB\TSLIB\tslib.hpp 677: 
\CPP\LIB\TSLIB\tslib.hpp 678: 
\CPP\LIB\TSLIB\tslib.hpp 679: 
\CPP\LIB\TSLIB\tslib.hpp 680: 
\CPP\LIB\TSLIB\tslib.hpp 681: 
\CPP\LIB\TSLIB\tslib.hpp 682: 
\CPP\LIB\TSLIB\tslib.hpp 683: 
\CPP\LIB\TSLIB\tslib.hpp 684: 
\CPP\LIB\TSLIB\tslib.hpp 685: 
\CPP\LIB\TSLIB\tslib.hpp 686: 
\CPP\LIB\TSLIB\tslib.hpp 687: 
\CPP\LIB\TSLIB\tslib.hpp 688: 
\CPP\LIB\TSLIB\tslib.hpp 689: 
\CPP\LIB\TSLIB\tslib.hpp 690: 
\CPP\LIB\TSLIB\tslib.hpp 691: 
\CPP\LIB\TSLIB\tslib.hpp 692: 
\CPP\LIB\TSLIB\tslib.hpp 693: 
\CPP\LIB\TSLIB\tslib.hpp 694: 
\CPP\LIB\TSLIB\tslib.hpp 695: 
\CPP\LIB\TSLIB\tslib.hpp 696: 
\CPP\LIB\TSLIB\tslib.hpp 697: 
\CPP\LIB\TSLIB\tslib.hpp 698: 
\CPP\LIB\TSLIB\tslib.hpp 699: 
\CPP\LIB\TSLIB\tslib.hpp 700: 
\CPP\LIB\TSLIB\tslib.hpp 701: 
\CPP\LIB\TSLIB\tslib.hpp 702: 
\CPP\LIB\TSLIB\tslib.hpp 703: 
\CPP\LIB\TSLIB\tslib.hpp 704: 
\CPP\LIB\TSLIB\tslib.hpp 705: 
\CPP\LIB\TSLIB\tslib.hpp 706: 
\CPP\LIB\TSLIB\tslib.hpp 707: 
\CPP\LIB\TSLIB\tslib.hpp 708: 
\CPP\LIB\TSLIB\tslib.hpp 709: 
\CPP\LIB\TSLIB\tslib.hpp 710: 
\CPP\LIB\TSLIB\tslib.hpp 711: 
\CPP\LIB\TSLIB\tslib.hpp 712: 
\CPP\LIB\TSLIB\tslib.hpp 713: 
\CPP\LIB\TSLIB\tslib.hpp 714: 
\CPP\LIB\TSLIB\tslib.hpp 715: 
\CPP\LIB\TSLIB\tslib.hpp 716: 
\CPP\LIB\TSLIB\tslib.hpp 717: 
\CPP\LIB\TSLIB\tslib.hpp 718: 
\CPP\LIB\TSLIB\tslib.hpp 719: 
\CPP\LIB\TSLIB\tslib.hpp 720: 
\CPP\LIB\TSLIB\tslib.hpp 721: 
\CPP\LIB\TSLIB\tslib.hpp 722: 
\CPP\LIB\TSLIB\tslib.hpp 723: 
\CPP\LIB\TSLIB\tslib.hpp 724: 
\CPP\LIB\TSLIB\tslib.hpp 725: 
\CPP\LIB\TSLIB\tslib.hpp 726: 
\CPP\LIB\TSLIB\tslib.hpp 727: 
\CPP\LIB\TSLIB\tslib.hpp 728: 
\CPP\LIB\TSLIB\tslib.hpp 729: 
\CPP\LIB\TSLIB\tslib.hpp 730: 
\CPP\LIB\TSLIB\tslib.hpp 731: 
\CPP\LIB\TSLIB\tslib.hpp 732: 
\CPP\LIB\TSLIB\tslib.hpp 733: 
\CPP\LIB\TSLIB\tslib.hpp 734: 
\CPP\LIB\TSLIB\tslib.hpp 735: 
\CPP\LIB\TSLIB\tslib.hpp 736: 
\CPP\LIB\TSLIB\tslib.hpp 737: 
\CPP\LIB\TSLIB\tslib.hpp 738: 
\CPP\LIB\TSLIB\tslib.hpp 739: 
\CPP\LIB\TSLIB\tslib.hpp 740: 
\CPP\LIB\TSLIB\tslib.hpp 741: 
\CPP\LIB\TSLIB\tslib.hpp 742: 
\CPP\LIB\TSLIB\tslib.hpp 743: 
\CPP\LIB\TSLIB\tslib.hpp 744: 
\CPP\LIB\TSLIB\tslib.hpp 745: 
\CPP\LIB\TSLIB\tslib.hpp 746: 
\CPP\LIB\TSLIB\tslib.hpp 747: 
\CPP\LIB\TSLIB\tslib.hpp 748: 
\CPP\LIB\TSLIB\tslib.hpp 749: 
\CPP\LIB\TSLIB\tslib.hpp 750: 
\CPP\LIB\TSLIB\tslib.hpp 751: 
\CPP\LIB\TSLIB\tslib.hpp 752: 
\CPP\LIB\TSLIB\tslib.hpp 753: 
\CPP\LIB\TSLIB\tslib.hpp 754: 
\CPP\LIB\TSLIB\tslib.hpp 755: 
\CPP\LIB\TSLIB\tslib.hpp 756: 
\CPP\LIB\TSLIB\tslib.hpp 757: 
\CPP\LIB\TSLIB\tslib.hpp 758: 
\CPP\LIB\TSLIB\tslib.hpp 759: 
\CPP\LIB\TSLIB\tslib.hpp 760: 
\CPP\LIB\TSLIB\tslib.hpp 761: 
\CPP\LIB\TSLIB\tslib.hpp 762: 
\CPP\LIB\TSLIB\tslib.hpp 763: 
\CPP\LIB\TSLIB\tslib.hpp 764: 
\CPP\LIB\TSLIB\tslib.hpp 765: 
\CPP\LIB\TSLIB\tslib.hpp 766: 
\CPP\LIB\TSLIB\tslib.hpp 767: 
\CPP\LIB\TSLIB\tslib.hpp 768: 
\CPP\LIB\TSLIB\tslib.hpp 769: 
\CPP\LIB\TSLIB\tslib.hpp 770: 
\CPP\LIB\TSLIB\tslib.hpp 771: 
\CPP\LIB\TSLIB\tslib.hpp 772: 
\CPP\LIB\TSLIB\tslib.hpp 773: 
\CPP\LIB\TSLIB\tslib.hpp 774: 
\CPP\LIB\TSLIB\tslib.hpp 775: 
\CPP\LIB\TSLIB\tslib.hpp 776: 
\CPP\LIB\TSLIB\tslib.hpp 777: 
\CPP\LIB\TSLIB\tslib.hpp 778: 
\CPP\LIB\TSLIB\tslib.hpp 779: 
\CPP\LIB\TSLIB\tslib.hpp 780: 
\CPP\LIB\TSLIB\tslib.hpp 781: 
\CPP\LIB\TSLIB\tslib.hpp 782: 
\CPP\LIB\TSLIB\tslib.hpp 783: 
\CPP\LIB\TSLIB\tslib.hpp 784: 
\CPP\LIB\TSLIB\tslib.hpp 785: 
\CPP\LIB\TSLIB\tslib.hpp 786: 
\CPP\LIB\TSLIB\tslib.hpp 787: 
\CPP\LIB\TSLIB\tslib.hpp 788: 
\CPP\LIB\TSLIB\tslib.hpp 789: 
\CPP\LIB\TSLIB\tslib.hpp 790: 
\CPP\LIB\TSLIB\tslib.hpp 791: 
\CPP\LIB\TSLIB\tslib.hpp 792: 
\CPP\LIB\TSLIB\tslib.hpp 793: 
\CPP\LIB\TSLIB\tslib.hpp 794: 
\CPP\LIB\TSLIB\tslib.hpp 795: 
\CPP\LIB\TSLIB\tslib.hpp 796: 
\CPP\LIB\TSLIB\tslib.hpp 797: 
\CPP\LIB\TSLIB\tslib.hpp 798: 
\CPP\LIB\TSLIB\tslib.hpp 799: 
\CPP\LIB\TSLIB\tslib.hpp 800: 
\CPP\LIB\TSLIB\tslib.hpp 801: 
\CPP\LIB\TSLIB\tslib.hpp 802: 
\CPP\LIB\TSLIB\tslib.hpp 803: 
\CPP\LIB\TSLIB\tslib.hpp 804: 
\CPP\LIB\TSLIB\tslib.hpp 805: 
\CPP\LIB\TSLIB\tslib.hpp 806: 
\CPP\LIB\TSLIB\tslib.hpp 807: 
\CPP\LIB\TSLIB\tslib.hpp 808: 
\CPP\LIB\TSLIB\tslib.hpp 809: 
\CPP\LIB\TSLIB\tslib.hpp 810: 
\CPP\LIB\TSLIB\tslib.hpp 811: 
\CPP\LIB\TSLIB\tslib.hpp 812: 
\CPP\LIB\TSLIB\tslib.hpp 813: 
\CPP\LIB\TSLIB\tslib.hpp 814: 
\CPP\LIB\TSLIB\tslib.hpp 815: 
\CPP\LIB\TSLIB\tslib.hpp 816: 
\CPP\LIB\TSLIB\tslib.hpp 817: 
\CPP\LIB\TSLIB\tslib.hpp 818: 
\CPP\LIB\TSLIB\tslib.hpp 819: 
\CPP\LIB\TSLIB\tslib.hpp 820: 
\CPP\LIB\TSLIB\tslib.hpp 821: 
\CPP\LIB\TSLIB\tslib.hpp 822: 
\CPP\LIB\TSLIB\tslib.hpp 823: 
\CPP\LIB\TSLIB\tslib.hpp 824: 
\CPP\LIB\TSLIB\tslib.hpp 825: 
\CPP\LIB\TSLIB\tslib.hpp 826: 
\CPP\LIB\TSLIB\tslib.hpp 827: 
\CPP\LIB\TSLIB\tslib.hpp 828: 
\CPP\LIB\TSLIB\tslib.hpp 829: 
\CPP\LIB\TSLIB\tslib.hpp 830: 
\CPP\LIB\TSLIB\tslib.hpp 831: 
\CPP\LIB\TSLIB\tslib.hpp 832: 
\CPP\LIB\TSLIB\tslib.hpp 833: 
\CPP\LIB\TSLIB\tslib.hpp 834: 
\CPP\LIB\TSLIB\tslib.hpp 835: 
\CPP\LIB\TSLIB\tslib.hpp 836: 
\CPP\LIB\TSLIB\tslib.hpp 837: 
\CPP\LIB\TSLIB\tslib.hpp 838: 
\CPP\LIB\TSLIB\tslib.hpp 839: 
\CPP\LIB\TSLIB\tslib.hpp 840: 
\CPP\LIB\TSLIB\tslib.hpp 841: 
\CPP\LIB\TSLIB\tslib.hpp 842: 
\CPP\LIB\TSLIB\tslib.hpp 843: 
\CPP\LIB\TSLIB\tslib.hpp 844: 
\CPP\LIB\TSLIB\tslib.hpp 845: 
\CPP\LIB\TSLIB\tslib.hpp 846: 
\CPP\LIB\TSLIB\tslib.hpp 847: 
\CPP\LIB\TSLIB\tslib.hpp 848: 
\CPP\LIB\TSLIB\tslib.hpp 849: 
\CPP\LIB\TSLIB\tslib.hpp 850: 
\CPP\LIB\TSLIB\tslib.hpp 851: 
procfg.hpp 27: 
\CPP\LIB\TSWIN\tswin.hpp 1: 
\CPP\LIB\TSLIB\tslib.hpp 1: 
\CPP\LIB\TSLIB\tslib.hpp 2: 
\CPP\LIB\TSLIB\tslib.hpp 3: 
\CPP\LIB\TSLIB\tslib.hpp 4: 
\CPP\LIB\TSLIB\tslib.hpp 5: 
\CPP\LIB\TSLIB\tslib.hpp 6: 
\CPP\LIB\TSLIB\tslib.hpp 7: 
\CPP\LIB\TSLIB\tslib.hpp 8: 
\CPP\LIB\TSLIB\tslib.hpp 9: 
\CPP\LIB\TSLIB\tslib.hpp 10: 
\CPP\LIB\TSLIB\tslib.hpp 11: 
\CPP\LIB\TSLIB\tslib.hpp 12: 
\CPP\LIB\TSLIB\tslib.hpp 13: 
\CPP\LIB\TSLIB\tslib.hpp 14: 
\CPP\LIB\TSLIB\tslib.hpp 15: 
\CPP\LIB\TSLIB\tslib.hpp 16: 
\CPP\LIB\TSLIB\tslib.hpp 17: 
\CPP\LIB\TSLIB\tslib.hpp 18: 
\CPP\LIB\TSLIB\tslib.hpp 19: 
\CPP\LIB\TSLIB\tslib.hpp 20: 
\CPP\LIB\TSLIB\tslib.hpp 21: 
\CPP\LIB\TSLIB\tslib.hpp 22: 
\CPP\LIB\TSLIB\tslib.hpp 23: 
\CPP\LIB\TSLIB\tslib.hpp 24: 
\CPP\LIB\TSLIB\tslib.hpp 25: 
\CPP\LIB\TSLIB\tslib.hpp 26: 
\CPP\LIB\TSLIB\tslib.hpp 27: 
\CPP\LIB\TSLIB\tslib.hpp 28: 
\CPP\LIB\TSLIB\tslib.hpp 29: 
\CPP\LIB\TSLIB\tslib.hpp 30: 
\CPP\LIB\TSLIB\tslib.hpp 31: 
\CPP\LIB\TSLIB\tslib.hpp 32: 
\CPP\LIB\TSLIB\tslib.hpp 33: 
\CPP\LIB\TSLIB\tslib.hpp 34: 
\CPP\LIB\TSLIB\tslib.hpp 35: 
\CPP\LIB\TSLIB\tslib.hpp 36: 
\CPP\LIB\TSLIB\tslib.hpp 37: 
\CPP\LIB\TSLIB\tslib.hpp 38: 
\CPP\LIB\TSLIB\tslib.hpp 39: 
\CPP\LIB\TSLIB\tslib.hpp 40: 
\CPP\LIB\TSLIB\tslib.hpp 41: 
\CPP\LIB\TSLIB\tslib.hpp 42: 
\CPP\LIB\TSLIB\tslib.hpp 43: 
\CPP\LIB\TSLIB\tslib.hpp 44: 
\CPP\LIB\TSLIB\tslib.hpp 45: 
\CPP\LIB\TSLIB\tslib.hpp 46: 
\CPP\LIB\TSLIB\tslib.hpp 47: 
\CPP\LIB\TSLIB\tslib.hpp 48: 
\CPP\LIB\TSLIB\tslib.hpp 49: 
\CPP\LIB\TSLIB\tslib.hpp 50: 
\CPP\LIB\TSLIB\tslib.hpp 51: 
\CPP\LIB\TSLIB\tslib.hpp 52: 
\CPP\LIB\TSLIB\tslib.hpp 53: 
\CPP\LIB\TSLIB\tslib.hpp 54: 
\CPP\LIB\TSLIB\tslib.hpp 55: 
\CPP\LIB\TSLIB\tslib.hpp 56: 
\CPP\LIB\TSLIB\tslib.hpp 57: 
\CPP\LIB\TSLIB\tslib.hpp 58: 
\CPP\LIB\TSLIB\tslib.hpp 59: 
\CPP\LIB\TSLIB\tslib.hpp 60: 
\CPP\LIB\TSLIB\tslib.hpp 61: 
\CPP\LIB\TSLIB\tslib.hpp 62: 
\CPP\LIB\TSLIB\tslib.hpp 63: 
\CPP\LIB\TSLIB\tslib.hpp 64: 
\CPP\LIB\TSLIB\tslib.hpp 65: 
\CPP\LIB\TSLIB\tslib.hpp 66: 
\CPP\LIB\TSLIB\tslib.hpp 67: 
\CPP\LIB\TSLIB\tslib.hpp 68: 
\CPP\LIB\TSLIB\tslib.hpp 69: 
\CPP\LIB\TSLIB\tslib.hpp 70: 
\CPP\LIB\TSLIB\tslib.hpp 71: 
\CPP\LIB\TSLIB\tslib.hpp 72: 
\CPP\LIB\TSLIB\tslib.hpp 73: 
\CPP\LIB\TSLIB\tslib.hpp 74: 
\CPP\LIB\TSLIB\tslib.hpp 75: 
\CPP\LIB\TSLIB\tslib.hpp 76: 
\CPP\LIB\TSLIB\tslib.hpp 77: 
\CPP\LIB\TSLIB\tslib.hpp 78: 
\CPP\LIB\TSLIB\tslib.hpp 79: 
\CPP\LIB\TSLIB\tslib.hpp 80: 
\CPP\LIB\TSLIB\tslib.hpp 81: 
\CPP\LIB\TSLIB\tslib.hpp 82: 
\CPP\LIB\TSLIB\tslib.hpp 83: 
\CPP\LIB\TSLIB\tslib.hpp 84: 
\CPP\LIB\TSLIB\tslib.hpp 85: 
\CPP\LIB\TSLIB\tslib.hpp 86: 
\CPP\LIB\TSLIB\tslib.hpp 87: 
\CPP\LIB\TSLIB\tslib.hpp 88: 
\CPP\LIB\TSLIB\tslib.hpp 89: 
\CPP\LIB\TSLIB\tslib.hpp 90: 
\CPP\LIB\TSLIB\tslib.hpp 91: 
\CPP\LIB\TSLIB\tslib.hpp 92: 
\CPP\LIB\TSLIB\tslib.hpp 93: 
\CPP\LIB\TSLIB\tslib.hpp 94: 
\CPP\LIB\TSLIB\tslib.hpp 95: 
\CPP\LIB\TSLIB\tslib.hpp 96: 
\CPP\LIB\TSLIB\tslib.hpp 97: 
\CPP\LIB\TSLIB\tslib.hpp 98: 
\CPP\LIB\TSLIB\tslib.hpp 99: 
\CPP\LIB\TSLIB\tslib.hpp 100: 
\CPP\LIB\TSLIB\tslib.hpp 101: 
\CPP\LIB\TSLIB\tslib.hpp 102: 
\CPP\LIB\TSLIB\tslib.hpp 103: 
\CPP\LIB\TSLIB\tslib.hpp 104: 
\CPP\LIB\TSLIB\tslib.hpp 105: 
\CPP\LIB\TSLIB\tslib.hpp 106: 
\CPP\LIB\TSLIB\tslib.hpp 107: 
\CPP\LIB\TSLIB\tslib.hpp 108: 
\CPP\LIB\TSLIB\tslib.hpp 109: 
\CPP\LIB\TSLIB\tslib.hpp 110: 
\CPP\LIB\TSLIB\tslib.hpp 111: 
\CPP\LIB\TSLIB\tslib.hpp 112: 
\CPP\LIB\TSLIB\tslib.hpp 113: 
\CPP\LIB\TSLIB\tslib.hpp 114: 
\CPP\LIB\TSLIB\tslib.hpp 115: 
\CPP\LIB\TSLIB\tslib.hpp 116: 
\CPP\LIB\TSLIB\tslib.hpp 117: 
\CPP\LIB\TSLIB\tslib.hpp 118: 
\CPP\LIB\TSLIB\tslib.hpp 119: 
\CPP\LIB\TSLIB\tslib.hpp 120: 
\CPP\LIB\TSLIB\tslib.hpp 121: 
\CPP\LIB\TSLIB\tslib.hpp 122: 
\CPP\LIB\TSLIB\tslib.hpp 123: 
\CPP\LIB\TSLIB\tslib.hpp 124: 
\CPP\LIB\TSLIB\tslib.hpp 125: 
\CPP\LIB\TSLIB\tslib.hpp 126: 
\CPP\LIB\TSLIB\tslib.hpp 127: 
\CPP\LIB\TSLIB\tslib.hpp 128: 
\CPP\LIB\TSLIB\tslib.hpp 129: 
\CPP\LIB\TSLIB\tslib.hpp 130: 
\CPP\LIB\TSLIB\tslib.hpp 131: 
\CPP\LIB\TSLIB\tslib.hpp 132: 
\CPP\LIB\TSLIB\tslib.hpp 133: 
\CPP\LIB\TSLIB\tslib.hpp 134: 
\CPP\LIB\TSLIB\tslib.hpp 135: 
\CPP\LIB\TSLIB\tslib.hpp 136: 
\CPP\LIB\TSLIB\tslib.hpp 137: 
\CPP\LIB\TSLIB\tslib.hpp 138: 
\CPP\LIB\TSLIB\tslib.hpp 139: 
\CPP\LIB\TSLIB\tslib.hpp 140: 
\CPP\LIB\TSLIB\tslib.hpp 141: 
\CPP\LIB\TSLIB\tslib.hpp 142: 
\CPP\LIB\TSLIB\tslib.hpp 143: 
\CPP\LIB\TSLIB\tslib.hpp 144: 
\CPP\LIB\TSLIB\tslib.hpp 145: 
\CPP\LIB\TSLIB\tslib.hpp 146: 
\CPP\LIB\TSLIB\tslib.hpp 147: 
\CPP\LIB\TSLIB\tslib.hpp 148: 
\CPP\LIB\TSLIB\tslib.hpp 149: 
\CPP\LIB\TSLIB\tslib.hpp 150: 
\CPP\LIB\TSLIB\tslib.hpp 151: 
\CPP\LIB\TSLIB\tslib.hpp 152: 
\CPP\LIB\TSLIB\tslib.hpp 153: 
\CPP\LIB\TSLIB\tslib.hpp 154: 
\CPP\LIB\TSLIB\tslib.hpp 155: 
\CPP\LIB\TSLIB\tslib.hpp 156: 
\CPP\LIB\TSLIB\tslib.hpp 157: 
\CPP\LIB\TSLIB\tslib.hpp 158: 
\CPP\LIB\TSLIB\tslib.hpp 159: 
\CPP\LIB\TSLIB\tslib.hpp 160: 
\CPP\LIB\TSLIB\tslib.hpp 161: 
\CPP\LIB\TSLIB\tslib.hpp 162: 
\CPP\LIB\TSLIB\tslib.hpp 163: 
\CPP\LIB\TSLIB\tslib.hpp 164: 
\CPP\LIB\TSLIB\tslib.hpp 165: 
\CPP\LIB\TSLIB\tslib.hpp 166: 
\CPP\LIB\TSLIB\tslib.hpp 167: 
\CPP\LIB\TSLIB\tslib.hpp 168: 
\CPP\LIB\TSLIB\tslib.hpp 169: 
\CPP\LIB\TSLIB\tslib.hpp 170: 
\CPP\LIB\TSLIB\tslib.hpp 171: 
\CPP\LIB\TSLIB\tslib.hpp 172: 
\CPP\LIB\TSLIB\tslib.hpp 173: 
\CPP\LIB\TSLIB\tslib.hpp 174: 
\CPP\LIB\TSLIB\tslib.hpp 175: 
\CPP\LIB\TSLIB\tslib.hpp 176: 
\CPP\LIB\TSLIB\tslib.hpp 177: 
\CPP\LIB\TSLIB\tslib.hpp 178: 
\CPP\LIB\TSLIB\tslib.hpp 179: 
\CPP\LIB\TSLIB\tslib.hpp 180: 
\CPP\LIB\TSLIB\tslib.hpp 181: 
\CPP\LIB\TSLIB\tslib.hpp 182: 
\CPP\LIB\TSLIB\tslib.hpp 183: 
\CPP\LIB\TSLIB\tslib.hpp 184: 
\CPP\LIB\TSLIB\tslib.hpp 185: 
\CPP\LIB\TSLIB\tslib.hpp 186: 
\CPP\LIB\TSLIB\tslib.hpp 187: 
\CPP\LIB\TSLIB\tslib.hpp 188: 
\CPP\LIB\TSLIB\tslib.hpp 189: 
\CPP\LIB\TSLIB\tslib.hpp 190: 
\CPP\LIB\TSLIB\tslib.hpp 191: 
\CPP\LIB\TSLIB\tslib.hpp 192: 
\CPP\LIB\TSLIB\tslib.hpp 193: 
\CPP\LIB\TSLIB\tslib.hpp 194: 
\CPP\LIB\TSLIB\tslib.hpp 195: 
\CPP\LIB\TSLIB\tslib.hpp 196: 
\CPP\LIB\TSLIB\tslib.hpp 197: 
\CPP\LIB\TSLIB\tslib.hpp 198: 
\CPP\LIB\TSLIB\tslib.hpp 199: 
\CPP\LIB\TSLIB\tslib.hpp 200: 
\CPP\LIB\TSLIB\tslib.hpp 201: 
\CPP\LIB\TSLIB\tslib.hpp 202: 
\CPP\LIB\TSLIB\tslib.hpp 203: 
\CPP\LIB\TSLIB\tslib.hpp 204: 
\CPP\LIB\TSLIB\tslib.hpp 205: 
\CPP\LIB\TSLIB\tslib.hpp 206: 
\CPP\LIB\TSLIB\tslib.hpp 207: 
\CPP\LIB\TSLIB\tslib.hpp 208: 
\CPP\LIB\TSLIB\tslib.hpp 209: 
\CPP\LIB\TSLIB\tslib.hpp 210: 
\CPP\LIB\TSLIB\tslib.hpp 211: 
\CPP\LIB\TSLIB\tslib.hpp 212: 
\CPP\LIB\TSLIB\tslib.hpp 213: 
\CPP\LIB\TSLIB\tslib.hpp 214: 
\CPP\LIB\TSLIB\tslib.hpp 215: 
\CPP\LIB\TSLIB\tslib.hpp 216: 
\CPP\LIB\TSLIB\tslib.hpp 217: 
\CPP\LIB\TSLIB\tslib.hpp 218: 
\CPP\LIB\TSLIB\tslib.hpp 219: 
\CPP\LIB\TSLIB\tslib.hpp 220: 
\CPP\LIB\TSLIB\tslib.hpp 221: 
\CPP\LIB\TSLIB\tslib.hpp 222: 
\CPP\LIB\TSLIB\tslib.hpp 223: 
\CPP\LIB\TSLIB\tslib.hpp 224: 
\CPP\LIB\TSLIB\tslib.hpp 225: 
\CPP\LIB\TSLIB\tslib.hpp 226: 
\CPP\LIB\TSLIB\tslib.hpp 227: 
\CPP\LIB\TSLIB\tslib.hpp 228: 
\CPP\LIB\TSLIB\tslib.hpp 229: 
\CPP\LIB\TSLIB\tslib.hpp 230: 
\CPP\LIB\TSLIB\tslib.hpp 231: 
\CPP\LIB\TSLIB\tslib.hpp 232: 
\CPP\LIB\TSLIB\tslib.hpp 233: 
\CPP\LIB\TSLIB\tslib.hpp 234: 
\CPP\LIB\TSLIB\tslib.hpp 235: 
\CPP\LIB\TSLIB\tslib.hpp 236: 
\CPP\LIB\TSLIB\tslib.hpp 237: 
\CPP\LIB\TSLIB\tslib.hpp 238: 
\CPP\LIB\TSLIB\tslib.hpp 239: 
\CPP\LIB\TSLIB\tslib.hpp 240: 
\CPP\LIB\TSLIB\tslib.hpp 241: 
\CPP\LIB\TSLIB\tslib.hpp 242: 
\CPP\LIB\TSLIB\tslib.hpp 243: 
\CPP\LIB\TSLIB\tslib.hpp 244: 
\CPP\LIB\TSLIB\tslib.hpp 245: 
\CPP\LIB\TSLIB\tslib.hpp 246: 
\CPP\LIB\TSLIB\tslib.hpp 247: 
\CPP\LIB\TSLIB\tslib.hpp 248: 
\CPP\LIB\TSLIB\tslib.hpp 249: 
\CPP\LIB\TSLIB\tslib.hpp 250: 
\CPP\LIB\TSLIB\tslib.hpp 251: 
\CPP\LIB\TSLIB\tslib.hpp 252: 
\CPP\LIB\TSLIB\tslib.hpp 253: 
\CPP\LIB\TSLIB\tslib.hpp 254: 
\CPP\LIB\TSLIB\tslib.hpp 255: 
\CPP\LIB\TSLIB\tslib.hpp 256: 
\CPP\LIB\TSLIB\tslib.hpp 257: 
\CPP\LIB\TSLIB\tslib.hpp 258: 
\CPP\LIB\TSLIB\tslib.hpp 259: 
\CPP\LIB\TSLIB\tslib.hpp 260: 
\CPP\LIB\TSLIB\tslib.hpp 261: 
\CPP\LIB\TSLIB\tslib.hpp 262: 
\CPP\LIB\TSLIB\tslib.hpp 263: 
\CPP\LIB\TSLIB\tslib.hpp 264: 
\CPP\LIB\TSLIB\tslib.hpp 265: 
\CPP\LIB\TSLIB\tslib.hpp 266: 
\CPP\LIB\TSLIB\tslib.hpp 267: 
\CPP\LIB\TSLIB\tslib.hpp 268: 
\CPP\LIB\TSLIB\tslib.hpp 269: 
\CPP\LIB\TSLIB\tslib.hpp 270: 
\CPP\LIB\TSLIB\tslib.hpp 271: 
\CPP\LIB\TSLIB\tslib.hpp 272: 
\CPP\LIB\TSLIB\tslib.hpp 273: 
\CPP\LIB\TSLIB\tslib.hpp 274: 
\CPP\LIB\TSLIB\tslib.hpp 275: 
\CPP\LIB\TSLIB\tslib.hpp 276: 
\CPP\LIB\TSLIB\tslib.hpp 277: 
\CPP\LIB\TSLIB\tslib.hpp 278: 
\CPP\LIB\TSLIB\tslib.hpp 279: 
\CPP\LIB\TSLIB\tslib.hpp 280: 
\CPP\LIB\TSLIB\tslib.hpp 281: 
\CPP\LIB\TSLIB\tslib.hpp 282: 
\CPP\LIB\TSLIB\tslib.hpp 283: 
\CPP\LIB\TSLIB\tslib.hpp 284: 
\CPP\LIB\TSLIB\tslib.hpp 285: 
\CPP\LIB\TSLIB\tslib.hpp 286: 
\CPP\LIB\TSLIB\tslib.hpp 287: 
\CPP\LIB\TSLIB\tslib.hpp 288: 
\CPP\LIB\TSLIB\tslib.hpp 289: 
\CPP\LIB\TSLIB\tslib.hpp 290: 
\CPP\LIB\TSLIB\tslib.hpp 291: 
\CPP\LIB\TSLIB\tslib.hpp 292: 
\CPP\LIB\TSLIB\tslib.hpp 293: 
\CPP\LIB\TSLIB\tslib.hpp 294: 
\CPP\LIB\TSLIB\tslib.hpp 295: 
\CPP\LIB\TSLIB\tslib.hpp 296: 
\CPP\LIB\TSLIB\tslib.hpp 297: 
\CPP\LIB\TSLIB\tslib.hpp 298: 
\CPP\LIB\TSLIB\tslib.hpp 299: 
\CPP\LIB\TSLIB\tslib.hpp 300: 
\CPP\LIB\TSLIB\tslib.hpp 301: 
\CPP\LIB\TSLIB\tslib.hpp 302: 
\CPP\LIB\TSLIB\tslib.hpp 303: 
\CPP\LIB\TSLIB\tslib.hpp 304: 
\CPP\LIB\TSLIB\tslib.hpp 305: 
\CPP\LIB\TSLIB\tslib.hpp 306: 
\CPP\LIB\TSLIB\tslib.hpp 307: 
\CPP\LIB\TSLIB\tslib.hpp 308: 
\CPP\LIB\TSLIB\tslib.hpp 309: 
\CPP\LIB\TSLIB\tslib.hpp 310: 
\CPP\LIB\TSLIB\tslib.hpp 311: 
\CPP\LIB\TSLIB\tslib.hpp 312: 
\CPP\LIB\TSLIB\tslib.hpp 313: 
\CPP\LIB\TSLIB\tslib.hpp 314: 
\CPP\LIB\TSLIB\tslib.hpp 315: 
\CPP\LIB\TSLIB\tslib.hpp 316: 
\CPP\LIB\TSLIB\tslib.hpp 317: 
\CPP\LIB\TSLIB\tslib.hpp 318: 
\CPP\LIB\TSLIB\tslib.hpp 319: 
\CPP\LIB\TSLIB\tslib.hpp 320: 
\CPP\LIB\TSLIB\tslib.hpp 321: 
\CPP\LIB\TSLIB\tslib.hpp 322: 
\CPP\LIB\TSLIB\tslib.hpp 323: 
\CPP\LIB\TSLIB\tslib.hpp 324: 
\CPP\LIB\TSLIB\tslib.hpp 325: 
\CPP\LIB\TSLIB\tslib.hpp 326: 
\CPP\LIB\TSLIB\tslib.hpp 327: 
\CPP\LIB\TSLIB\tslib.hpp 328: 
\CPP\LIB\TSLIB\tslib.hpp 329: 
\CPP\LIB\TSLIB\tslib.hpp 330: 
\CPP\LIB\TSLIB\tslib.hpp 331: 
\CPP\LIB\TSLIB\tslib.hpp 332: 
\CPP\LIB\TSLIB\tslib.hpp 333: 
\CPP\LIB\TSLIB\tslib.hpp 334: 
\CPP\LIB\TSLIB\tslib.hpp 335: 
\CPP\LIB\TSLIB\tslib.hpp 336: 
\CPP\LIB\TSLIB\tslib.hpp 337: 
\CPP\LIB\TSLIB\tslib.hpp 338: 
\CPP\LIB\TSLIB\tslib.hpp 339: 
\CPP\LIB\TSLIB\tslib.hpp 340: 
\CPP\LIB\TSLIB\tslib.hpp 341: 
\CPP\LIB\TSLIB\tslib.hpp 342: 
\CPP\LIB\TSLIB\tslib.hpp 343: 
\CPP\LIB\TSLIB\tslib.hpp 344: 
\CPP\LIB\TSLIB\tslib.hpp 345: 
\CPP\LIB\TSLIB\tslib.hpp 346: 
\CPP\LIB\TSLIB\tslib.hpp 347: 
\CPP\LIB\TSLIB\tslib.hpp 348: 
\CPP\LIB\TSLIB\tslib.hpp 349: 
\CPP\LIB\TSLIB\tslib.hpp 350: 
\CPP\LIB\TSLIB\tslib.hpp 351: 
\CPP\LIB\TSLIB\tslib.hpp 352: 
\CPP\LIB\TSLIB\tslib.hpp 353: 
\CPP\LIB\TSLIB\tslib.hpp 354: 
\CPP\LIB\TSLIB\tslib.hpp 355: 
\CPP\LIB\TSLIB\tslib.hpp 356: 
\CPP\LIB\TSLIB\tslib.hpp 357: 
\CPP\LIB\TSLIB\tslib.hpp 358: 
\CPP\LIB\TSLIB\tslib.hpp 359: 
\CPP\LIB\TSLIB\tslib.hpp 360: 
\CPP\LIB\TSLIB\tslib.hpp 361: 
\CPP\LIB\TSLIB\tslib.hpp 362: 
\CPP\LIB\TSLIB\tslib.hpp 363: 
\CPP\LIB\TSLIB\tslib.hpp 364: 
\CPP\LIB\TSLIB\tslib.hpp 365: 
\CPP\LIB\TSLIB\tslib.hpp 366: 
\CPP\LIB\TSLIB\tslib.hpp 367: 
\CPP\LIB\TSLIB\tslib.hpp 368: 
\CPP\LIB\TSLIB\tslib.hpp 369: 
\CPP\LIB\TSLIB\tslib.hpp 370: 
\CPP\LIB\TSLIB\tslib.hpp 371: 
\CPP\LIB\TSLIB\tslib.hpp 372: 
\CPP\LIB\TSLIB\tslib.hpp 373: 
\CPP\LIB\TSLIB\tslib.hpp 374: 
\CPP\LIB\TSLIB\tslib.hpp 375: 
\CPP\LIB\TSLIB\tslib.hpp 376: 
\CPP\LIB\TSLIB\tslib.hpp 377: 
\CPP\LIB\TSLIB\tslib.hpp 378: 
\CPP\LIB\TSLIB\tslib.hpp 379: 
\CPP\LIB\TSLIB\tslib.hpp 380: 
\CPP\LIB\TSLIB\tslib.hpp 381: 
\CPP\LIB\TSLIB\tslib.hpp 382: 
\CPP\LIB\TSLIB\tslib.hpp 383: 
\CPP\LIB\TSLIB\tslib.hpp 384: 
\CPP\LIB\TSLIB\tslib.hpp 385: 
\CPP\LIB\TSLIB\tslib.hpp 386: 
\CPP\LIB\TSLIB\tslib.hpp 387: 
\CPP\LIB\TSLIB\tslib.hpp 388: 
\CPP\LIB\TSLIB\tslib.hpp 389: 
\CPP\LIB\TSLIB\tslib.hpp 390: 
\CPP\LIB\TSLIB\tslib.hpp 391: 
\CPP\LIB\TSLIB\tslib.hpp 392: 
\CPP\LIB\TSLIB\tslib.hpp 393: 
\CPP\LIB\TSLIB\tslib.hpp 394: 
\CPP\LIB\TSLIB\tslib.hpp 395: 
\CPP\LIB\TSLIB\tslib.hpp 396: 
\CPP\LIB\TSLIB\tslib.hpp 397: 
\CPP\LIB\TSLIB\tslib.hpp 398: 
\CPP\LIB\TSLIB\tslib.hpp 399: 
\CPP\LIB\TSLIB\tslib.hpp 400: 
\CPP\LIB\TSLIB\tslib.hpp 401: 
\CPP\LIB\TSLIB\tslib.hpp 402: 
\CPP\LIB\TSLIB\tslib.hpp 403: 
\CPP\LIB\TSLIB\tslib.hpp 404: 
\CPP\LIB\TSLIB\tslib.hpp 405: 
\CPP\LIB\TSLIB\tslib.hpp 406: 
\CPP\LIB\TSLIB\tslib.hpp 407: 
\CPP\LIB\TSLIB\tslib.hpp 408: 
\CPP\LIB\TSLIB\tslib.hpp 409: 
\CPP\LIB\TSLIB\tslib.hpp 410: 
\CPP\LIB\TSLIB\tslib.hpp 411: 
\CPP\LIB\TSLIB\tslib.hpp 412: 
\CPP\LIB\TSLIB\tslib.hpp 413: 
\CPP\LIB\TSLIB\tslib.hpp 414: 
\CPP\LIB\TSLIB\tslib.hpp 415: 
\CPP\LIB\TSLIB\tslib.hpp 416: 
\CPP\LIB\TSLIB\tslib.hpp 417: 
\CPP\LIB\TSLIB\tslib.hpp 418: 
\CPP\LIB\TSLIB\tslib.hpp 419: 
\CPP\LIB\TSLIB\tslib.hpp 420: 
\CPP\LIB\TSLIB\tslib.hpp 421: 
\CPP\LIB\TSLIB\tslib.hpp 422: 
\CPP\LIB\TSLIB\tslib.hpp 423: 
\CPP\LIB\TSLIB\tslib.hpp 424: 
\CPP\LIB\TSLIB\tslib.hpp 425: 
\CPP\LIB\TSLIB\tslib.hpp 426: 
\CPP\LIB\TSLIB\tslib.hpp 427: 
\CPP\LIB\TSLIB\tslib.hpp 428: 
\CPP\LIB\TSLIB\tslib.hpp 429: 
\CPP\LIB\TSLIB\tslib.hpp 430: 
\CPP\LIB\TSLIB\tslib.hpp 431: 
\CPP\LIB\TSLIB\tslib.hpp 432: 
\CPP\LIB\TSLIB\tslib.hpp 433: 
\CPP\LIB\TSLIB\tslib.hpp 434: 
\CPP\LIB\TSLIB\tslib.hpp 435: 
\CPP\LIB\TSLIB\tslib.hpp 436: 
\CPP\LIB\TSLIB\tslib.hpp 437: 
\CPP\LIB\TSLIB\tslib.hpp 438: 
\CPP\LIB\TSLIB\tslib.hpp 439: 
\CPP\LIB\TSLIB\tslib.hpp 440: 
\CPP\LIB\TSLIB\tslib.hpp 441: 
\CPP\LIB\TSLIB\tslib.hpp 442: 
\CPP\LIB\TSLIB\tslib.hpp 443: 
\CPP\LIB\TSLIB\tslib.hpp 444: 
\CPP\LIB\TSLIB\tslib.hpp 445: 
\CPP\LIB\TSLIB\tslib.hpp 446: 
\CPP\LIB\TSLIB\tslib.hpp 447: 
\CPP\LIB\TSLIB\tslib.hpp 448: 
\CPP\LIB\TSLIB\tslib.hpp 449: 
\CPP\LIB\TSLIB\tslib.hpp 450: 
\CPP\LIB\TSLIB\tslib.hpp 451: 
\CPP\LIB\TSLIB\tslib.hpp 452: 
\CPP\LIB\TSLIB\tslib.hpp 453: 
\CPP\LIB\TSLIB\tslib.hpp 454: 
\CPP\LIB\TSLIB\tslib.hpp 455: 
\CPP\LIB\TSLIB\tslib.hpp 456: 
\CPP\LIB\TSLIB\tslib.hpp 457: 
\CPP\LIB\TSLIB\tslib.hpp 458: 
\CPP\LIB\TSLIB\tslib.hpp 459: 
\CPP\LIB\TSLIB\tslib.hpp 460: 
\CPP\LIB\TSLIB\tslib.hpp 461: 
\CPP\LIB\TSLIB\tslib.hpp 462: 
\CPP\LIB\TSLIB\tslib.hpp 463: 
\CPP\LIB\TSLIB\tslib.hpp 464: 
\CPP\LIB\TSLIB\tslib.hpp 465: 
\CPP\LIB\TSLIB\tslib.hpp 466: 
\CPP\LIB\TSLIB\tslib.hpp 467: 
\CPP\LIB\TSLIB\tslib.hpp 468: 
\CPP\LIB\TSLIB\tslib.hpp 469: 
\CPP\LIB\TSLIB\tslib.hpp 470: 
\CPP\LIB\TSLIB\tslib.hpp 471: 
\CPP\LIB\TSLIB\tslib.hpp 472: 
\CPP\LIB\TSLIB\tslib.hpp 473: 
\CPP\LIB\TSLIB\tslib.hpp 474: 
\CPP\LIB\TSLIB\tslib.hpp 475: 
\CPP\LIB\TSLIB\tslib.hpp 476: 
\CPP\LIB\TSLIB\tslib.hpp 477: 
\CPP\LIB\TSLIB\tslib.hpp 478: 
\CPP\LIB\TSLIB\tslib.hpp 479: 
\CPP\LIB\TSLIB\tslib.hpp 480: 
\CPP\LIB\TSLIB\tslib.hpp 481: 
\CPP\LIB\TSLIB\tslib.hpp 482: 
\CPP\LIB\TSLIB\tslib.hpp 483: 
\CPP\LIB\TSLIB\tslib.hpp 484: 
\CPP\LIB\TSLIB\tslib.hpp 485: 
\CPP\LIB\TSLIB\tslib.hpp 486: 
\CPP\LIB\TSLIB\tslib.hpp 487: 
\CPP\LIB\TSLIB\tslib.hpp 488: 
\CPP\LIB\TSLIB\tslib.hpp 489: 
\CPP\LIB\TSLIB\tslib.hpp 490: 
\CPP\LIB\TSLIB\tslib.hpp 491: 
\CPP\LIB\TSLIB\tslib.hpp 492: 
\CPP\LIB\TSLIB\tslib.hpp 493: 
\CPP\LIB\TSLIB\tslib.hpp 494: 
\CPP\LIB\TSLIB\tslib.hpp 495: 
\CPP\LIB\TSLIB\tslib.hpp 496: 
\CPP\LIB\TSLIB\tslib.hpp 497: 
\CPP\LIB\TSLIB\tslib.hpp 498: 
\CPP\LIB\TSLIB\tslib.hpp 499: 
\CPP\LIB\TSLIB\tslib.hpp 500: 
\CPP\LIB\TSLIB\tslib.hpp 501: 
\CPP\LIB\TSLIB\tslib.hpp 502: 
\CPP\LIB\TSLIB\tslib.hpp 503: 
\CPP\LIB\TSLIB\tslib.hpp 504: 
\CPP\LIB\TSLIB\tslib.hpp 505: 
\CPP\LIB\TSLIB\tslib.hpp 506: 
\CPP\LIB\TSLIB\tslib.hpp 507: 
\CPP\LIB\TSLIB\tslib.hpp 508: 
\CPP\LIB\TSLIB\tslib.hpp 509: 
\CPP\LIB\TSLIB\tslib.hpp 510: 
\CPP\LIB\TSLIB\tslib.hpp 511: 
\CPP\LIB\TSLIB\tslib.hpp 512: 
\CPP\LIB\TSLIB\tslib.hpp 513: 
\CPP\LIB\TSLIB\tslib.hpp 514: 
\CPP\LIB\TSLIB\tslib.hpp 515: 
\CPP\LIB\TSLIB\tslib.hpp 516: 
\CPP\LIB\TSLIB\tslib.hpp 517: 
\CPP\LIB\TSLIB\tslib.hpp 518: 
\CPP\LIB\TSLIB\tslib.hpp 519: 
\CPP\LIB\TSLIB\tslib.hpp 520: 
\CPP\LIB\TSLIB\tslib.hpp 521: 
\CPP\LIB\TSLIB\tslib.hpp 522: 
\CPP\LIB\TSLIB\tslib.hpp 523: 
\CPP\LIB\TSLIB\tslib.hpp 524: 
\CPP\LIB\TSLIB\tslib.hpp 525: 
\CPP\LIB\TSLIB\tslib.hpp 526: 
\CPP\LIB\TSLIB\tslib.hpp 527: 
\CPP\LIB\TSLIB\tslib.hpp 528: 
\CPP\LIB\TSLIB\tslib.hpp 529: 
\CPP\LIB\TSLIB\tslib.hpp 530: 
\CPP\LIB\TSLIB\tslib.hpp 531: 
\CPP\LIB\TSLIB\tslib.hpp 532: 
\CPP\LIB\TSLIB\tslib.hpp 533: 
\CPP\LIB\TSLIB\tslib.hpp 534: 
\CPP\LIB\TSLIB\tslib.hpp 535: 
\CPP\LIB\TSLIB\tslib.hpp 536: 
\CPP\LIB\TSLIB\tslib.hpp 537: 
\CPP\LIB\TSLIB\tslib.hpp 538: 
\CPP\LIB\TSLIB\tslib.hpp 539: 
\CPP\LIB\TSLIB\tslib.hpp 540: 
\CPP\LIB\TSLIB\tslib.hpp 541: 
\CPP\LIB\TSLIB\tslib.hpp 542: 
\CPP\LIB\TSLIB\tslib.hpp 543: 
\CPP\LIB\TSLIB\tslib.hpp 544: 
\CPP\LIB\TSLIB\tslib.hpp 545: 
\CPP\LIB\TSLIB\tslib.hpp 546: 
\CPP\LIB\TSLIB\tslib.hpp 547: 
\CPP\LIB\TSLIB\tslib.hpp 548: 
\CPP\LIB\TSLIB\tslib.hpp 549: 
\CPP\LIB\TSLIB\tslib.hpp 550: 
\CPP\LIB\TSLIB\tslib.hpp 551: 
\CPP\LIB\TSLIB\tslib.hpp 552: 
\CPP\LIB\TSLIB\tslib.hpp 553: 
\CPP\LIB\TSLIB\tslib.hpp 554: 
\CPP\LIB\TSLIB\tslib.hpp 555: 
\CPP\LIB\TSLIB\tslib.hpp 556: 
\CPP\LIB\TSLIB\tslib.hpp 557: 
\CPP\LIB\TSLIB\tslib.hpp 558: 
\CPP\LIB\TSLIB\tslib.hpp 559: 
\CPP\LIB\TSLIB\tslib.hpp 560: 
\CPP\LIB\TSLIB\tslib.hpp 561: 
\CPP\LIB\TSLIB\tslib.hpp 562: 
\CPP\LIB\TSLIB\tslib.hpp 563: 
\CPP\LIB\TSLIB\tslib.hpp 564: 
\CPP\LIB\TSLIB\tslib.hpp 565: 
\CPP\LIB\TSLIB\tslib.hpp 566: 
\CPP\LIB\TSLIB\tslib.hpp 567: 
\CPP\LIB\TSLIB\tslib.hpp 568: 
\CPP\LIB\TSLIB\tslib.hpp 569: 
\CPP\LIB\TSLIB\tslib.hpp 570: 
\CPP\LIB\TSLIB\tslib.hpp 571: 
\CPP\LIB\TSLIB\tslib.hpp 572: 
\CPP\LIB\TSLIB\tslib.hpp 573: 
\CPP\LIB\TSLIB\tslib.hpp 574: 
\CPP\LIB\TSLIB\tslib.hpp 575: 
\CPP\LIB\TSLIB\tslib.hpp 576: 
\CPP\LIB\TSLIB\tslib.hpp 577: 
\CPP\LIB\TSLIB\tslib.hpp 578: 
\CPP\LIB\TSLIB\tslib.hpp 579: 
\CPP\LIB\TSLIB\tslib.hpp 580: 
\CPP\LIB\TSLIB\tslib.hpp 581: 
\CPP\LIB\TSLIB\tslib.hpp 582: 
\CPP\LIB\TSLIB\tslib.hpp 583: 
\CPP\LIB\TSLIB\tslib.hpp 584: 
\CPP\LIB\TSLIB\tslib.hpp 585: 
\CPP\LIB\TSLIB\tslib.hpp 586: 
\CPP\LIB\TSLIB\tslib.hpp 587: 
\CPP\LIB\TSLIB\tslib.hpp 588: 
\CPP\LIB\TSLIB\tslib.hpp 589: 
\CPP\LIB\TSLIB\tslib.hpp 590: 
\CPP\LIB\TSLIB\tslib.hpp 591: 
\CPP\LIB\TSLIB\tslib.hpp 592: 
\CPP\LIB\TSLIB\tslib.hpp 593: 
\CPP\LIB\TSLIB\tslib.hpp 594: 
\CPP\LIB\TSLIB\tslib.hpp 595: 
\CPP\LIB\TSLIB\tslib.hpp 596: 
\CPP\LIB\TSLIB\tslib.hpp 597: 
\CPP\LIB\TSLIB\tslib.hpp 598: 
\CPP\LIB\TSLIB\tslib.hpp 599: 
\CPP\LIB\TSLIB\tslib.hpp 600: 
\CPP\LIB\TSLIB\tslib.hpp 601: 
\CPP\LIB\TSLIB\tslib.hpp 602: 
\CPP\LIB\TSLIB\tslib.hpp 603: 
\CPP\LIB\TSLIB\tslib.hpp 604: 
\CPP\LIB\TSLIB\tslib.hpp 605: 
\CPP\LIB\TSLIB\tslib.hpp 606: 
\CPP\LIB\TSLIB\tslib.hpp 607: 
\CPP\LIB\TSLIB\tslib.hpp 608: 
\CPP\LIB\TSLIB\tslib.hpp 609: 
\CPP\LIB\TSLIB\tslib.hpp 610: 
\CPP\LIB\TSLIB\tslib.hpp 611: 
\CPP\LIB\TSLIB\tslib.hpp 612: 
\CPP\LIB\TSLIB\tslib.hpp 613: 
\CPP\LIB\TSLIB\tslib.hpp 614: 
\CPP\LIB\TSLIB\tslib.hpp 615: 
\CPP\LIB\TSLIB\tslib.hpp 616: 
\CPP\LIB\TSLIB\tslib.hpp 617: 
\CPP\LIB\TSLIB\tslib.hpp 618: 
\CPP\LIB\TSLIB\tslib.hpp 619: 
\CPP\LIB\TSLIB\tslib.hpp 620: 
\CPP\LIB\TSLIB\tslib.hpp 621: 
\CPP\LIB\TSLIB\tslib.hpp 622: 
\CPP\LIB\TSLIB\tslib.hpp 623: 
\CPP\LIB\TSLIB\tslib.hpp 624: 
\CPP\LIB\TSLIB\tslib.hpp 625: 
\CPP\LIB\TSLIB\tslib.hpp 626: 
\CPP\LIB\TSLIB\tslib.hpp 627: 
\CPP\LIB\TSLIB\tslib.hpp 628: 
\CPP\LIB\TSLIB\tslib.hpp 629: 
\CPP\LIB\TSLIB\tslib.hpp 630: 
\CPP\LIB\TSLIB\tslib.hpp 631: 
\CPP\LIB\TSLIB\tslib.hpp 632: 
\CPP\LIB\TSLIB\tslib.hpp 633: 
\CPP\LIB\TSLIB\tslib.hpp 634: 
\CPP\LIB\TSLIB\tslib.hpp 635: 
\CPP\LIB\TSLIB\tslib.hpp 636: 
\CPP\LIB\TSLIB\tslib.hpp 637: 
\CPP\LIB\TSLIB\tslib.hpp 638: 
\CPP\LIB\TSLIB\tslib.hpp 639: 
\CPP\LIB\TSLIB\tslib.hpp 640: 
\CPP\LIB\TSLIB\tslib.hpp 641: 
\CPP\LIB\TSLIB\tslib.hpp 642: 
\CPP\LIB\TSLIB\tslib.hpp 643: 
\CPP\LIB\TSLIB\tslib.hpp 644: 
\CPP\LIB\TSLIB\tslib.hpp 645: 
\CPP\LIB\TSLIB\tslib.hpp 646: 
\CPP\LIB\TSLIB\tslib.hpp 647: 
\CPP\LIB\TSLIB\tslib.hpp 648: 
\CPP\LIB\TSLIB\tslib.hpp 649: 
\CPP\LIB\TSLIB\tslib.hpp 650: 
\CPP\LIB\TSLIB\tslib.hpp 651: 
\CPP\LIB\TSLIB\tslib.hpp 652: 
\CPP\LIB\TSLIB\tslib.hpp 653: 
\CPP\LIB\TSLIB\tslib.hpp 654: 
\CPP\LIB\TSLIB\tslib.hpp 655: 
\CPP\LIB\TSLIB\tslib.hpp 656: 
\CPP\LIB\TSLIB\tslib.hpp 657: 
\CPP\LIB\TSLIB\tslib.hpp 658: 
\CPP\LIB\TSLIB\tslib.hpp 659: 
\CPP\LIB\TSLIB\tslib.hpp 660: 
\CPP\LIB\TSLIB\tslib.hpp 661: 
\CPP\LIB\TSLIB\tslib.hpp 662: 
\CPP\LIB\TSLIB\tslib.hpp 663: 
\CPP\LIB\TSLIB\tslib.hpp 664: 
\CPP\LIB\TSLIB\tslib.hpp 665: 
\CPP\LIB\TSLIB\tslib.hpp 666: 
\CPP\LIB\TSLIB\tslib.hpp 667: 
\CPP\LIB\TSLIB\tslib.hpp 668: 
\CPP\LIB\TSLIB\tslib.hpp 669: 
\CPP\LIB\TSLIB\tslib.hpp 670: 
\CPP\LIB\TSLIB\tslib.hpp 671: 
\CPP\LIB\TSLIB\tslib.hpp 672: 
\CPP\LIB\TSLIB\tslib.hpp 673: 
\CPP\LIB\TSLIB\tslib.hpp 674: 
\CPP\LIB\TSLIB\tslib.hpp 675: 
\CPP\LIB\TSLIB\tslib.hpp 676: 
\CPP\LIB\TSLIB\tslib.hpp 677: 
\CPP\LIB\TSLIB\tslib.hpp 678: 
\CPP\LIB\TSLIB\tslib.hpp 679: 
\CPP\LIB\TSLIB\tslib.hpp 680: 
\CPP\LIB\TSLIB\tslib.hpp 681: 
\CPP\LIB\TSLIB\tslib.hpp 682: 
\CPP\LIB\TSLIB\tslib.hpp 683: 
\CPP\LIB\TSLIB\tslib.hpp 684: 
\CPP\LIB\TSLIB\tslib.hpp 685: 
\CPP\LIB\TSLIB\tslib.hpp 686: 
\CPP\LIB\TSLIB\tslib.hpp 687: 
\CPP\LIB\TSLIB\tslib.hpp 688: 
\CPP\LIB\TSLIB\tslib.hpp 689: 
\CPP\LIB\TSLIB\tslib.hpp 690: 
\CPP\LIB\TSLIB\tslib.hpp 691: 
\CPP\LIB\TSLIB\tslib.hpp 692: 
\CPP\LIB\TSLIB\tslib.hpp 693: 
\CPP\LIB\TSLIB\tslib.hpp 694: 
\CPP\LIB\TSLIB\tslib.hpp 695: 
\CPP\LIB\TSLIB\tslib.hpp 696: 
\CPP\LIB\TSLIB\tslib.hpp 697: 
\CPP\LIB\TSLIB\tslib.hpp 698: 
\CPP\LIB\TSLIB\tslib.hpp 699: 
\CPP\LIB\TSLIB\tslib.hpp 700: 
\CPP\LIB\TSLIB\tslib.hpp 701: 
\CPP\LIB\TSLIB\tslib.hpp 702: 
\CPP\LIB\TSLIB\tslib.hpp 703: 
\CPP\LIB\TSLIB\tslib.hpp 704: 
\CPP\LIB\TSLIB\tslib.hpp 705: 
\CPP\LIB\TSLIB\tslib.hpp 706: 
\CPP\LIB\TSLIB\tslib.hpp 707: 
\CPP\LIB\TSLIB\tslib.hpp 708: 
\CPP\LIB\TSLIB\tslib.hpp 709: 
\CPP\LIB\TSLIB\tslib.hpp 710: 
\CPP\LIB\TSLIB\tslib.hpp 711: 
\CPP\LIB\TSLIB\tslib.hpp 712: 
\CPP\LIB\TSLIB\tslib.hpp 713: 
\CPP\LIB\TSLIB\tslib.hpp 714: 
\CPP\LIB\TSLIB\tslib.hpp 715: 
\CPP\LIB\TSLIB\tslib.hpp 716: 
\CPP\LIB\TSLIB\tslib.hpp 717: 
\CPP\LIB\TSLIB\tslib.hpp 718: 
\CPP\LIB\TSLIB\tslib.hpp 719: 
\CPP\LIB\TSLIB\tslib.hpp 720: 
\CPP\LIB\TSLIB\tslib.hpp 721: 
\CPP\LIB\TSLIB\tslib.hpp 722: 
\CPP\LIB\TSLIB\tslib.hpp 723: 
\CPP\LIB\TSLIB\tslib.hpp 724: 
\CPP\LIB\TSLIB\tslib.hpp 725: 
\CPP\LIB\TSLIB\tslib.hpp 726: 
\CPP\LIB\TSLIB\tslib.hpp 727: 
\CPP\LIB\TSLIB\tslib.hpp 728: 
\CPP\LIB\TSLIB\tslib.hpp 729: 
\CPP\LIB\TSLIB\tslib.hpp 730: 
\CPP\LIB\TSLIB\tslib.hpp 731: 
\CPP\LIB\TSLIB\tslib.hpp 732: 
\CPP\LIB\TSLIB\tslib.hpp 733: 
\CPP\LIB\TSLIB\tslib.hpp 734: 
\CPP\LIB\TSLIB\tslib.hpp 735: 
\CPP\LIB\TSLIB\tslib.hpp 736: 
\CPP\LIB\TSLIB\tslib.hpp 737: 
\CPP\LIB\TSLIB\tslib.hpp 738: 
\CPP\LIB\TSLIB\tslib.hpp 739: 
\CPP\LIB\TSLIB\tslib.hpp 740: 
\CPP\LIB\TSLIB\tslib.hpp 741: 
\CPP\LIB\TSLIB\tslib.hpp 742: 
\CPP\LIB\TSLIB\tslib.hpp 743: 
\CPP\LIB\TSLIB\tslib.hpp 744: 
\CPP\LIB\TSLIB\tslib.hpp 745: 
\CPP\LIB\TSLIB\tslib.hpp 746: 
\CPP\LIB\TSLIB\tslib.hpp 747: 
\CPP\LIB\TSLIB\tslib.hpp 748: 
\CPP\LIB\TSLIB\tslib.hpp 749: 
\CPP\LIB\TSLIB\tslib.hpp 750: 
\CPP\LIB\TSLIB\tslib.hpp 751: 
\CPP\LIB\TSLIB\tslib.hpp 752: 
\CPP\LIB\TSLIB\tslib.hpp 753: 
\CPP\LIB\TSLIB\tslib.hpp 754: 
\CPP\LIB\TSLIB\tslib.hpp 755: 
\CPP\LIB\TSLIB\tslib.hpp 756: 
\CPP\LIB\TSLIB\tslib.hpp 757: 
\CPP\LIB\TSLIB\tslib.hpp 758: 
\CPP\LIB\TSLIB\tslib.hpp 759: 
\CPP\LIB\TSLIB\tslib.hpp 760: 
\CPP\LIB\TSLIB\tslib.hpp 761: 
\CPP\LIB\TSLIB\tslib.hpp 762: 
\CPP\LIB\TSLIB\tslib.hpp 763: 
\CPP\LIB\TSLIB\tslib.hpp 764: 
\CPP\LIB\TSLIB\tslib.hpp 765: 
\CPP\LIB\TSLIB\tslib.hpp 766: 
\CPP\LIB\TSLIB\tslib.hpp 767: 
\CPP\LIB\TSLIB\tslib.hpp 768: 
\CPP\LIB\TSLIB\tslib.hpp 769: 
\CPP\LIB\TSLIB\tslib.hpp 770: 
\CPP\LIB\TSLIB\tslib.hpp 771: 
\CPP\LIB\TSLIB\tslib.hpp 772: 
\CPP\LIB\TSLIB\tslib.hpp 773: 
\CPP\LIB\TSLIB\tslib.hpp 774: 
\CPP\LIB\TSLIB\tslib.hpp 775: 
\CPP\LIB\TSLIB\tslib.hpp 776: 
\CPP\LIB\TSLIB\tslib.hpp 777: 
\CPP\LIB\TSLIB\tslib.hpp 778: 
\CPP\LIB\TSLIB\tslib.hpp 779: 
\CPP\LIB\TSLIB\tslib.hpp 780: 
\CPP\LIB\TSLIB\tslib.hpp 781: 
\CPP\LIB\TSLIB\tslib.hpp 782: 
\CPP\LIB\TSLIB\tslib.hpp 783: 
\CPP\LIB\TSLIB\tslib.hpp 784: 
\CPP\LIB\TSLIB\tslib.hpp 785: 
\CPP\LIB\TSLIB\tslib.hpp 786: 
\CPP\LIB\TSLIB\tslib.hpp 787: 
\CPP\LIB\TSLIB\tslib.hpp 788: 
\CPP\LIB\TSLIB\tslib.hpp 789: 
\CPP\LIB\TSLIB\tslib.hpp 790: 
\CPP\LIB\TSLIB\tslib.hpp 791: 
\CPP\LIB\TSLIB\tslib.hpp 792: 
\CPP\LIB\TSLIB\tslib.hpp 793: 
\CPP\LIB\TSLIB\tslib.hpp 794: 
\CPP\LIB\TSLIB\tslib.hpp 795: 
\CPP\LIB\TSLIB\tslib.hpp 796: 
\CPP\LIB\TSLIB\tslib.hpp 797: 
\CPP\LIB\TSLIB\tslib.hpp 798: 
\CPP\LIB\TSLIB\tslib.hpp 799: 
\CPP\LIB\TSLIB\tslib.hpp 800: 
\CPP\LIB\TSLIB\tslib.hpp 801: 
\CPP\LIB\TSLIB\tslib.hpp 802: 
\CPP\LIB\TSLIB\tslib.hpp 803: 
\CPP\LIB\TSLIB\tslib.hpp 804: 
\CPP\LIB\TSLIB\tslib.hpp 805: 
\CPP\LIB\TSLIB\tslib.hpp 806: 
\CPP\LIB\TSLIB\tslib.hpp 807: 
\CPP\LIB\TSLIB\tslib.hpp 808: 
\CPP\LIB\TSLIB\tslib.hpp 809: 
\CPP\LIB\TSLIB\tslib.hpp 810: 
\CPP\LIB\TSLIB\tslib.hpp 811: 
\CPP\LIB\TSLIB\tslib.hpp 812: 
\CPP\LIB\TSLIB\tslib.hpp 813: 
\CPP\LIB\TSLIB\tslib.hpp 814: 
\CPP\LIB\TSLIB\tslib.hpp 815: 
\CPP\LIB\TSLIB\tslib.hpp 816: 
\CPP\LIB\TSLIB\tslib.hpp 817: 
\CPP\LIB\TSLIB\tslib.hpp 818: 
\CPP\LIB\TSLIB\tslib.hpp 819: 
\CPP\LIB\TSLIB\tslib.hpp 820: 
\CPP\LIB\TSLIB\tslib.hpp 821: 
\CPP\LIB\TSLIB\tslib.hpp 822: 
\CPP\LIB\TSLIB\tslib.hpp 823: 
\CPP\LIB\TSLIB\tslib.hpp 824: 
\CPP\LIB\TSLIB\tslib.hpp 825: 
\CPP\LIB\TSLIB\tslib.hpp 826: 
\CPP\LIB\TSLIB\tslib.hpp 827: 
\CPP\LIB\TSLIB\tslib.hpp 828: 
\CPP\LIB\TSLIB\tslib.hpp 829: 
\CPP\LIB\TSLIB\tslib.hpp 830: 
\CPP\LIB\TSLIB\tslib.hpp 831: 
\CPP\LIB\TSLIB\tslib.hpp 832: 
\CPP\LIB\TSLIB\tslib.hpp 833: 
\CPP\LIB\TSLIB\tslib.hpp 834: 
\CPP\LIB\TSLIB\tslib.hpp 835: 
\CPP\LIB\TSLIB\tslib.hpp 836: 
\CPP\LIB\TSLIB\tslib.hpp 837: 
\CPP\LIB\TSLIB\tslib.hpp 838: 
\CPP\LIB\TSLIB\tslib.hpp 839: 
\CPP\LIB\TSLIB\tslib.hpp 840: 
\CPP\LIB\TSLIB\tslib.hpp 841: 
\CPP\LIB\TSLIB\tslib.hpp 842: 
\CPP\LIB\TSLIB\tslib.hpp 843: 
\CPP\LIB\TSLIB\tslib.hpp 844: 
\CPP\LIB\TSLIB\tslib.hpp 845: 
\CPP\LIB\TSLIB\tslib.hpp 846: 
\CPP\LIB\TSLIB\tslib.hpp 847: 
\CPP\LIB\TSLIB\tslib.hpp 848: 
\CPP\LIB\TSLIB\tslib.hpp 849: 
\CPP\LIB\TSLIB\tslib.hpp 850: 
\CPP\LIB\TSLIB\tslib.hpp 851: 
\CPP\LIB\TSWIN\tswin.hpp 2: 
\CPP\LIB\TSWIN\tswin.hpp 3: 
\CPP\LIB\TSWIN\tswin.hpp 4: 
\CPP\LIB\TSWIN\tswin.hpp 5: 
\CPP\LIB\TSWIN\tswin.hpp 6: 
\CPP\LIB\TSWIN\tswin.hpp 7: 
\CPP\LIB\TSWIN\tswin.hpp 8: 
\CPP\LIB\TSWIN\tswin.hpp 9: 
\CPP\LIB\TSWIN\tswin.hpp 10: 
\CPP\LIB\TSWIN\tswin.hpp 11: 
\CPP\LIB\TSWIN\tswin.hpp 12: 
\CPP\LIB\TSWIN\tswin.hpp 13: 
\CPP\LIB\TSWIN\tswin.hpp 14: 
\CPP\LIB\TSWIN\tswin.hpp 15: 
\CPP\LIB\TSWIN\tswin.hpp 16: 
\CPP\LIB\TSWIN\tswin.hpp 17: 
\CPP\LIB\TSWIN\tswin.hpp 18: 
\CPP\LIB\TSWIN\tswin.hpp 19: 
\CPP\LIB\TSWIN\tswin.hpp 20: 
\CPP\LIB\TSWIN\tswin.hpp 21: 
\CPP\LIB\TSWIN\tswin.hpp 22: 
\CPP\LIB\TSWIN\tswin.hpp 23: 
\CPP\LIB\TSWIN\tswin.hpp 24: 
\CPP\LIB\TSWIN\tswin.hpp 25: 
\CPP\LIB\TSWIN\tswin.hpp 26: 
\CPP\LIB\TSWIN\tswin.hpp 27: 
\CPP\LIB\TSWIN\tswin.hpp 28: 
\CPP\LIB\TSWIN\tswin.hpp 29: 
\CPP\LIB\TSWIN\tswin.hpp 30: 
\CPP\LIB\TSWIN\tswin.hpp 31: 
\CPP\LIB\TSWIN\tswin.hpp 32: 
\CPP\LIB\TSWIN\tswin.hpp 33: 
\CPP\LIB\TSWIN\tswin.hpp 34: 
\CPP\LIB\TSWIN\tswin.hpp 35: 
\CPP\LIB\TSWIN\tswin.hpp 36: 
\CPP\LIB\TSWIN\tswin.hpp 37: 
\CPP\LIB\TSWIN\tswin.hpp 38: 
\CPP\LIB\TSWIN\tswin.hpp 39: 
\CPP\LIB\TSWIN\tswin.hpp 40: 
\CPP\LIB\TSWIN\tswin.hpp 41: 
\CPP\LIB\TSWIN\tswin.hpp 42: 
\CPP\LIB\TSWIN\tswin.hpp 43: 
\CPP\LIB\TSWIN\tswin.hpp 44: 
\CPP\LIB\TSWIN\tswin.hpp 45: 
\CPP\LIB\TSWIN\tswin.hpp 46: 
\CPP\LIB\TSWIN\tswin.hpp 47: 
\CPP\LIB\TSWIN\tswin.hpp 48: 
\CPP\LIB\TSWIN\tswin.hpp 49: 
\CPP\LIB\TSWIN\tswin.hpp 50: 
\CPP\LIB\TSWIN\tswin.hpp 51: 
\CPP\LIB\TSWIN\tswin.hpp 52: 
\CPP\LIB\TSWIN\tswin.hpp 53: 
\CPP\LIB\TSWIN\tswin.hpp 54: 
\CPP\LIB\TSWIN\tswin.hpp 55: 
\CPP\LIB\TSWIN\tswin.hpp 56: 
\CPP\LIB\TSWIN\tswin.hpp 57: 
\CPP\LIB\TSWIN\tswin.hpp 58: 
\CPP\LIB\TSWIN\tswin.hpp 59: 
\CPP\LIB\TSWIN\tswin.hpp 60: 
\CPP\LIB\TSWIN\tswin.hpp 61: 
\CPP\LIB\TSWIN\tswin.hpp 62: 
\CPP\LIB\TSWIN\tswin.hpp 63: 
\CPP\LIB\TSWIN\tswin.hpp 64: 
\CPP\LIB\TSWIN\tswin.hpp 65: 
\CPP\LIB\TSWIN\tswin.hpp 66: 
\CPP\LIB\TSWIN\tswin.hpp 67: 
\CPP\LIB\TSWIN\tswin.hpp 68: 
\CPP\LIB\TSWIN\tswin.hpp 69: 
\CPP\LIB\TSWIN\tswin.hpp 70: 
\CPP\LIB\TSWIN\tswin.hpp 71: 
\CPP\LIB\TSWIN\tswin.hpp 72: 
\CPP\LIB\TSWIN\tswin.hpp 73: 
\CPP\LIB\TSWIN\tswin.hpp 74: 
\CPP\LIB\TSWIN\tswin.hpp 75: 
\CPP\LIB\TSWIN\tswin.hpp 76: 
\CPP\LIB\TSWIN\tswin.hpp 77: 
\CPP\LIB\TSWIN\tswin.hpp 78: 
\CPP\LIB\TSWIN\tswin.hpp 79: 
\CPP\LIB\TSWIN\tswin.hpp 80: 
\CPP\LIB\TSWIN\tswin.hpp 81: 
\CPP\LIB\TSWIN\tswin.hpp 82: 
\CPP\LIB\TSWIN\tswin.hpp 83: 
\CPP\LIB\TSWIN\tswin.hpp 84: 
\CPP\LIB\TSWIN\tswin.hpp 85: 
\CPP\LIB\TSWIN\tswin.hpp 86: 
\CPP\LIB\TSWIN\tswin.hpp 87: 
\CPP\LIB\TSWIN\tswin.hpp 88: 
\CPP\LIB\TSWIN\tswin.hpp 89: 
\CPP\LIB\TSWIN\tswin.hpp 90: 
\CPP\LIB\TSWIN\tswin.hpp 91: 
\CPP\LIB\TSWIN\tswin.hpp 92: 
\CPP\LIB\TSWIN\tswin.hpp 93: 
\CPP\LIB\TSWIN\tswin.hpp 94: 
\CPP\LIB\TSWIN\tswin.hpp 95: 
\CPP\LIB\TSWIN\tswin.hpp 96: 
\CPP\LIB\TSWIN\tswin.hpp 97: 
\CPP\LIB\TSWIN\tswin.hpp 98: 
\CPP\LIB\TSWIN\tswin.hpp 99: 
\CPP\LIB\TSWIN\tswin.hpp 100: 
\CPP\LIB\TSWIN\tswin.hpp 101: 
\CPP\LIB\TSWIN\tswin.hpp 102: 
\CPP\LIB\TSWIN\tswin.hpp 103: 
\CPP\LIB\TSWIN\tswin.hpp 104: 
\CPP\LIB\TSWIN\tswin.hpp 105: 
\CPP\LIB\TSWIN\tswin.hpp 106: 
\CPP\LIB\TSWIN\tswin.hpp 107: 
\CPP\LIB\TSWIN\tswin.hpp 108: 
\CPP\LIB\TSWIN\tswin.hpp 109: 
\CPP\LIB\TSWIN\tswin.hpp 110: 
\CPP\LIB\TSWIN\tswin.hpp 111: 
\CPP\LIB\TSWIN\tswin.hpp 112: 
\CPP\LIB\TSWIN\tswin.hpp 113: 
\CPP\LIB\TSWIN\tswin.hpp 114: 
\CPP\LIB\TSWIN\tswin.hpp 115: 
\CPP\LIB\TSWIN\tswin.hpp 116: 
\CPP\LIB\TSWIN\tswin.hpp 117: 
\CPP\LIB\TSWIN\tswin.hpp 118: 
\CPP\LIB\TSWIN\tswin.hpp 119: 
\CPP\LIB\TSWIN\tswin.hpp 120: 
\CPP\LIB\TSWIN\tswin.hpp 121: 
\CPP\LIB\TSWIN\tswin.hpp 122: 
\CPP\LIB\TSWIN\tswin.hpp 123: 
\CPP\LIB\TSWIN\tswin.hpp 124: 
\CPP\LIB\TSWIN\tswin.hpp 125: 
\CPP\LIB\TSWIN\tswin.hpp 126: 
\CPP\LIB\TSWIN\tswin.hpp 127: 
\CPP\LIB\TSWIN\tswin.hpp 128: 
\CPP\LIB\TSWIN\tswin.hpp 129: 
\CPP\LIB\TSWIN\tswin.hpp 130: 
\CPP\LIB\TSWIN\tswin.hpp 131: 
\CPP\LIB\TSWIN\tswin.hpp 132: 
\CPP\LIB\TSWIN\tswin.hpp 133: 
\CPP\LIB\TSWIN\tswin.hpp 134: 
\CPP\LIB\TSWIN\tswin.hpp 135: 
\CPP\LIB\TSWIN\tswin.hpp 136: 
\CPP\LIB\TSWIN\tswin.hpp 137: 
\CPP\LIB\TSWIN\tswin.hpp 138: 
\CPP\LIB\TSWIN\tswin.hpp 139: 
\CPP\LIB\TSWIN\tswin.hpp 140: 
\CPP\LIB\TSWIN\tswin.hpp 141: 
\CPP\LIB\TSWIN\tswin.hpp 142: 
\CPP\LIB\TSWIN\tswin.hpp 143: 
\CPP\LIB\TSWIN\tswin.hpp 144: 
\CPP\LIB\TSWIN\tswin.hpp 145: 
\CPP\LIB\TSWIN\tswin.hpp 146: 
\CPP\LIB\TSWIN\tswin.hpp 147: 
\CPP\LIB\TSWIN\tswin.hpp 148: 
\CPP\LIB\TSWIN\tswin.hpp 149: 
\CPP\LIB\TSWIN\tswin.hpp 150: 
\CPP\LIB\TSWIN\tswin.hpp 151: 
\CPP\LIB\TSWIN\tswin.hpp 152: 
\CPP\LIB\TSWIN\tswin.hpp 153: 
\CPP\LIB\TSWIN\tswin.hpp 154: 
\CPP\LIB\TSWIN\tswin.hpp 155: 
\CPP\LIB\TSWIN\tswin.hpp 156: 
\CPP\LIB\TSWIN\tswin.hpp 157: 
\CPP\LIB\TSWIN\tswin.hpp 158: 
\CPP\LIB\TSWIN\tswin.hpp 159: 
\CPP\LIB\TSWIN\tswin.hpp 160: 
\CPP\LIB\TSWIN\tswin.hpp 161: 
\CPP\LIB\TSWIN\tswin.hpp 162: 
\CPP\LIB\TSWIN\tswin.hpp 163: 
\CPP\LIB\TSWIN\tswin.hpp 164: 
\CPP\LIB\TSWIN\tswin.hpp 165: 
\CPP\LIB\TSWIN\tswin.hpp 166: 
\CPP\LIB\TSWIN\tswin.hpp 167: 
\CPP\LIB\TSWIN\tswin.hpp 168: 
\CPP\LIB\TSWIN\tswin.hpp 169: 
\CPP\LIB\TSWIN\tswin.hpp 170: 
\CPP\LIB\TSWIN\tswin.hpp 171: 
\CPP\LIB\TSWIN\tswin.hpp 172: 
\CPP\LIB\TSWIN\tswin.hpp 173: 
\CPP\LIB\TSWIN\tswin.hpp 174: 
\CPP\LIB\TSWIN\tswin.hpp 175: 
\CPP\LIB\TSWIN\tswin.hpp 176: 
\CPP\LIB\TSWIN\tswin.hpp 177: 
\CPP\LIB\TSWIN\tswin.hpp 178: 
\CPP\LIB\TSWIN\tswin.hpp 179: 
\CPP\LIB\TSWIN\tswin.hpp 180: 
\CPP\LIB\TSWIN\tswin.hpp 181: 
\CPP\LIB\TSWIN\tswin.hpp 182: 
\CPP\LIB\TSWIN\tswin.hpp 183: 
\CPP\LIB\TSWIN\tswin.hpp 184: 
\CPP\LIB\TSWIN\tswin.hpp 185: 
\CPP\LIB\TSWIN\tswin.hpp 186: 
\CPP\LIB\TSWIN\tswin.hpp 187: 
\CPP\LIB\TSWIN\tswin.hpp 188: 
\CPP\LIB\TSWIN\tswin.hpp 189: 
\CPP\LIB\TSWIN\tswin.hpp 190: 
\CPP\LIB\TSWIN\tswin.hpp 191: 
\CPP\LIB\TSWIN\tswin.hpp 192: 
\CPP\LIB\TSWIN\tswin.hpp 193: 
\CPP\LIB\TSWIN\tswin.hpp 194: 
\CPP\LIB\TSWIN\tswin.hpp 195: 
\CPP\LIB\TSWIN\tswin.hpp 196: 
\CPP\LIB\TSWIN\tswin.hpp 197: 
\CPP\LIB\TSWIN\tswin.hpp 198: 
\CPP\LIB\TSWIN\tswin.hpp 199: 
\CPP\LIB\TSWIN\tswin.hpp 200: 
\CPP\LIB\TSWIN\tswin.hpp 201: 
\CPP\LIB\TSWIN\tswin.hpp 202: 
\CPP\LIB\TSWIN\tswin.hpp 203: 
\CPP\LIB\TSWIN\tswin.hpp 204: 
\CPP\LIB\TSWIN\tswin.hpp 205: 
\CPP\LIB\TSWIN\tswin.hpp 206: 
\CPP\LIB\TSWIN\tswin.hpp 207: 
\CPP\LIB\TSWIN\tswin.hpp 208: 
\CPP\LIB\TSWIN\tswin.hpp 209: 
\CPP\LIB\TSWIN\tswin.hpp 210: 
\CPP\LIB\TSWIN\tswin.hpp 211: 
\CPP\LIB\TSWIN\tswin.hpp 212: 
\CPP\LIB\TSWIN\tswin.hpp 213: 
\CPP\LIB\TSWIN\tswin.hpp 214: 
\CPP\LIB\TSWIN\tswin.hpp 215: 
\CPP\LIB\TSWIN\tswin.hpp 216: 
\CPP\LIB\TSWIN\tswin.hpp 217: 
\CPP\LIB\TSWIN\tswin.hpp 218: 
\CPP\LIB\TSWIN\tswin.hpp 219: 
\CPP\LIB\TSWIN\tswin.hpp 220: 
\CPP\LIB\TSWIN\tswin.hpp 221: 
\CPP\LIB\TSWIN\tswin.hpp 222: 
\CPP\LIB\TSWIN\tswin.hpp 223: 
\CPP\LIB\TSWIN\tswin.hpp 224: 
\CPP\LIB\TSWIN\tswin.hpp 225: 
\CPP\LIB\TSWIN\tswin.hpp 226: 
\CPP\LIB\TSWIN\tswin.hpp 227: 
\CPP\LIB\TSWIN\tswin.hpp 228: 
\CPP\LIB\TSWIN\tswin.hpp 229: 
\CPP\LIB\TSWIN\tswin.hpp 230: 
\CPP\LIB\TSWIN\tswin.hpp 231: 
\CPP\LIB\TSWIN\tswin.hpp 232: 
\CPP\LIB\TSWIN\tswin.hpp 233: 
\CPP\LIB\TSWIN\tswin.hpp 234: 
\CPP\LIB\TSWIN\tswin.hpp 235: 
\CPP\LIB\TSWIN\tswin.hpp 236: 
\CPP\LIB\TSWIN\tswin.hpp 237: 
\CPP\LIB\TSWIN\tswin.hpp 238: 
\CPP\LIB\TSWIN\tswin.hpp 239: 
\CPP\LIB\TSWIN\tswin.hpp 240: 
\CPP\LIB\TSWIN\tswin.hpp 241: 
\CPP\LIB\TSWIN\tswin.hpp 242: 
\CPP\LIB\TSWIN\tswin.hpp 243: 
\CPP\LIB\TSWIN\tswin.hpp 244: 
\CPP\LIB\TSWIN\tswin.hpp 245: 
\CPP\LIB\TSWIN\tswin.hpp 246: 
\CPP\LIB\TSWIN\tswin.hpp 247: 
\CPP\LIB\TSWIN\tswin.hpp 248: 
\CPP\LIB\TSWIN\tswin.hpp 249: 
\CPP\LIB\TSWIN\tswin.hpp 250: 
\CPP\LIB\TSWIN\tswin.hpp 251: 
\CPP\LIB\TSWIN\tswin.hpp 252: 
\CPP\LIB\TSWIN\tswin.hpp 253: 
\CPP\LIB\TSWIN\tswin.hpp 254: 
\CPP\LIB\TSWIN\tswin.hpp 255: 
\CPP\LIB\TSWIN\tswin.hpp 256: 
\CPP\LIB\TSWIN\tswin.hpp 257: 
\CPP\LIB\TSWIN\tswin.hpp 258: 
\CPP\LIB\TSWIN\tswin.hpp 259: 
\CPP\LIB\TSWIN\tswin.hpp 260: 
\CPP\LIB\TSWIN\tswin.hpp 261: 
\CPP\LIB\TSWIN\tswin.hpp 262: 
\CPP\LIB\TSWIN\tswin.hpp 263: 
\CPP\LIB\TSWIN\tswin.hpp 264: 
\CPP\LIB\TSWIN\tswin.hpp 265: 
\CPP\LIB\TSWIN\tswin.hpp 266: 
\CPP\LIB\TSWIN\tswin.hpp 267: 
\CPP\LIB\TSWIN\tswin.hpp 268: 
\CPP\LIB\TSWIN\tswin.hpp 269: 
\CPP\LIB\TSWIN\tswin.hpp 270: 
\CPP\LIB\TSWIN\tswin.hpp 271: 
\CPP\LIB\TSWIN\tswin.hpp 272: 
\CPP\LIB\TSWIN\tswin.hpp 273: 
\CPP\LIB\TSWIN\tswin.hpp 274: 
\CPP\LIB\TSWIN\tswin.hpp 275: 
\CPP\LIB\TSWIN\tswin.hpp 276: 
\CPP\LIB\TSWIN\tswin.hpp 277: 
\CPP\LIB\TSWIN\tswin.hpp 278: 
\CPP\LIB\TSWIN\tswin.hpp 279: 
\CPP\LIB\TSWIN\tswin.hpp 280: 
\CPP\LIB\TSWIN\tswin.hpp 281: 
\CPP\LIB\TSWIN\tswin.hpp 282: 
\CPP\LIB\TSWIN\tswin.hpp 283: 
\CPP\LIB\TSWIN\tswin.hpp 284: 
\CPP\LIB\TSWIN\tswin.hpp 285: 
\CPP\LIB\TSWIN\tswin.hpp 286: 
\CPP\LIB\TSWIN\tswin.hpp 287: 
\CPP\LIB\TSWIN\tswin.hpp 288: 
\CPP\LIB\TSWIN\tswin.hpp 289: 
\CPP\LIB\TSWIN\tswin.hpp 290: 
\CPP\LIB\TSWIN\tswin.hpp 291: 
\CPP\LIB\TSWIN\tswin.hpp 292: 
\CPP\LIB\TSWIN\tswin.hpp 293: 
\CPP\LIB\TSWIN\tswin.hpp 294: 
\CPP\LIB\TSWIN\tswin.hpp 295: 
\CPP\LIB\TSWIN\tswin.hpp 296: 
\CPP\LIB\TSWIN\tswin.hpp 297: 
\CPP\LIB\TSWIN\tswin.hpp 298: 
\CPP\LIB\TSWIN\tswin.hpp 299: 
\CPP\LIB\TSWIN\tswin.hpp 300: 
\CPP\LIB\TSWIN\tswin.hpp 301: 
\CPP\LIB\TSWIN\tswin.hpp 302: 
\CPP\LIB\TSWIN\tswin.hpp 303: 
\CPP\LIB\TSWIN\tswin.hpp 304: 
\CPP\LIB\TSWIN\tswin.hpp 305: 
\CPP\LIB\TSWIN\tswin.hpp 306: 
\CPP\LIB\TSWIN\tswin.hpp 307: 
\CPP\LIB\TSWIN\tswin.hpp 308: 
\CPP\LIB\TSWIN\tswin.hpp 309: 
\CPP\LIB\TSWIN\tswin.hpp 310: 
\CPP\LIB\TSWIN\tswin.hpp 311: 
\CPP\LIB\TSWIN\tswin.hpp 312: 
\CPP\LIB\TSWIN\tswin.hpp 313: 
\CPP\LIB\TSWIN\tswin.hpp 314: 
\CPP\LIB\TSWIN\tswin.hpp 315: 
\CPP\LIB\TSWIN\tswin.hpp 316: 
\CPP\LIB\TSWIN\tswin.hpp 317: 
\CPP\LIB\TSWIN\tswin.hpp 318: 
\CPP\LIB\TSWIN\tswin.hpp 319: 
\CPP\LIB\TSWIN\tswin.hpp 320: 
\CPP\LIB\TSWIN\tswin.hpp 321: 
\CPP\LIB\TSWIN\tswin.hpp 322: 
\CPP\LIB\TSWIN\tswin.hpp 323: 
\CPP\LIB\TSWIN\tswin.hpp 324: 
\CPP\LIB\TSWIN\tswin.hpp 325: 
\CPP\LIB\TSWIN\tswin.hpp 326: 
\CPP\LIB\TSWIN\tswin.hpp 327: 
\CPP\LIB\TSWIN\tswin.hpp 328: 
\CPP\LIB\TSWIN\tswin.hpp 329: 
\CPP\LIB\TSWIN\tswin.hpp 330: 
\CPP\LIB\TSWIN\tswin.hpp 331: 
\CPP\LIB\TSWIN\tswin.hpp 332: 
\CPP\LIB\TSWIN\tswin.hpp 333: 
\CPP\LIB\TSWIN\tswin.hpp 334: 
\CPP\LIB\TSWIN\tswin.hpp 335: 
\CPP\LIB\TSWIN\tswin.hpp 336: 
\CPP\LIB\TSWIN\tswin.hpp 337: 
\CPP\LIB\TSWIN\tswin.hpp 338: 
\CPP\LIB\TSWIN\tswin.hpp 339: 
\CPP\LIB\TSWIN\tswin.hpp 340: 
\CPP\LIB\TSWIN\tswin.hpp 341: 
\CPP\LIB\TSWIN\tswin.hpp 342: 
\CPP\LIB\TSWIN\tswin.hpp 343: 
\CPP\LIB\TSWIN\tswin.hpp 344: 
\CPP\LIB\TSWIN\tswin.hpp 345: 
\CPP\LIB\TSWIN\tswin.hpp 346: 
\CPP\LIB\TSWIN\tswin.hpp 347: 
\CPP\LIB\TSWIN\tswin.hpp 348: 
\CPP\LIB\TSWIN\tswin.hpp 349: 
\CPP\LIB\TSWIN\tswin.hpp 350: 
\CPP\LIB\TSWIN\tswin.hpp 351: 
\CPP\LIB\TSWIN\tswin.hpp 352: 
\CPP\LIB\TSWIN\tswin.hpp 353: 
\CPP\LIB\TSWIN\tswin.hpp 354: 
\CPP\LIB\TSWIN\tswin.hpp 355: 
\CPP\LIB\TSWIN\tswin.hpp 356: 
\CPP\LIB\TSWIN\tswin.hpp 357: 
\CPP\LIB\TSWIN\tswin.hpp 358: 
\CPP\LIB\TSWIN\tswin.hpp 359: 
\CPP\LIB\TSWIN\tswin.hpp 360: 
\CPP\LIB\TSWIN\tswin.hpp 361: 
\CPP\LIB\TSWIN\tswin.hpp 362: 
\CPP\LIB\TSWIN\tswin.hpp 363: 
\CPP\LIB\TSWIN\tswin.hpp 364: 
\CPP\LIB\TSWIN\tswin.hpp 365: 
\CPP\LIB\TSWIN\tswin.hpp 366: 
\CPP\LIB\TSWIN\tswin.hpp 367: 
\CPP\LIB\TSWIN\tswin.hpp 368: 
\CPP\LIB\TSWIN\tswin.hpp 369: 
\CPP\LIB\TSWIN\tswin.hpp 370: 
\CPP\LIB\TSWIN\tswin.hpp 371: 
\CPP\LIB\TSWIN\tswin.hpp 372: 
\CPP\LIB\TSWIN\tswin.hpp 373: 
\CPP\LIB\TSWIN\tswin.hpp 374: 
\CPP\LIB\TSWIN\tswin.hpp 375: 
\CPP\LIB\TSWIN\tswin.hpp 376: 
\CPP\LIB\TSWIN\tswin.hpp 377: 
\CPP\LIB\TSWIN\tswin.hpp 378: 
\CPP\LIB\TSWIN\tswin.hpp 379: 
\CPP\LIB\TSWIN\tswin.hpp 380: 
\CPP\LIB\TSWIN\tswin.hpp 381: 
\CPP\LIB\TSWIN\tswin.hpp 382: 
\CPP\LIB\TSWIN\tswin.hpp 383: 
\CPP\LIB\TSWIN\tswin.hpp 384: 
\CPP\LIB\TSWIN\tswin.hpp 385: 
\CPP\LIB\TSWIN\tswin.hpp 386: 
\CPP\LIB\TSWIN\tswin.hpp 387: 
\CPP\LIB\TSWIN\tswin.hpp 388: 
\CPP\LIB\TSWIN\tswin.hpp 389: 
\CPP\LIB\TSWIN\tswin.hpp 390: 
\CPP\LIB\TSWIN\tswin.hpp 391: 
\CPP\LIB\TSWIN\tswin.hpp 392: 
\CPP\LIB\TSWIN\tswin.hpp 393: 
\CPP\LIB\TSWIN\tswin.hpp 394: 
\CPP\LIB\TSWIN\tswin.hpp 395: 
\CPP\LIB\TSWIN\tswin.hpp 396: 
\CPP\LIB\TSWIN\tswin.hpp 397: 
\CPP\LIB\TSWIN\tswin.hpp 398: 
\CPP\LIB\TSWIN\tswin.hpp 399: 
\CPP\LIB\TSWIN\tswin.hpp 400: 
\CPP\LIB\TSWIN\tswin.hpp 401: 
\CPP\LIB\TSWIN\tswin.hpp 402: 
\CPP\LIB\TSWIN\tswin.hpp 403: 
\CPP\LIB\TSWIN\tswin.hpp 404: 
\CPP\LIB\TSWIN\tswin.hpp 405: 
\CPP\LIB\TSWIN\tswin.hpp 406: 
\CPP\LIB\TSWIN\tswin.hpp 407: 
\CPP\LIB\TSWIN\tswin.hpp 408: 
\CPP\LIB\TSWIN\tswin.hpp 409: 
\CPP\LIB\TSWIN\tswin.hpp 410: 
\CPP\LIB\TSWIN\tswin.hpp 411: 
\CPP\LIB\TSWIN\tswin.hpp 412: 
\CPP\LIB\TSWIN\tswin.hpp 413: 
\CPP\LIB\TSWIN\tswin.hpp 414: 
\CPP\LIB\TSWIN\tswin.hpp 415: 
\CPP\LIB\TSWIN\tswin.hpp 416: 
\CPP\LIB\TSWIN\tswin.hpp 417: 
\CPP\LIB\TSWIN\tswin.hpp 418: 
\CPP\LIB\TSWIN\tswin.hpp 419: 
\CPP\LIB\TSWIN\tswin.hpp 420: 
\CPP\LIB\TSWIN\tswin.hpp 421: 
\CPP\LIB\TSWIN\tswin.hpp 422: 
\CPP\LIB\TSWIN\tswin.hpp 423: 
\CPP\LIB\TSWIN\tswin.hpp 424: 
\CPP\LIB\TSWIN\tswin.hpp 425: 
\CPP\LIB\TSWIN\tswin.hpp 426: 
\CPP\LIB\TSWIN\tswin.hpp 427: 
\CPP\LIB\TSWIN\tswin.hpp 428: 
\CPP\LIB\TSWIN\tswin.hpp 429: 
\CPP\LIB\TSWIN\tswin.hpp 430: 
\CPP\LIB\TSWIN\tswin.hpp 431: 
\CPP\LIB\TSWIN\tswin.hpp 432: 
\CPP\LIB\TSWIN\tswin.hpp 433: 
\CPP\LIB\TSWIN\tswin.hpp 434: 
\CPP\LIB\TSWIN\tswin.hpp 435: 
\CPP\LIB\TSWIN\tswin.hpp 436: 
\CPP\LIB\TSWIN\tswin.hpp 437: 
\CPP\LIB\TSWIN\tswin.hpp 438: 
\CPP\LIB\TSWIN\tswin.hpp 439: 
\CPP\LIB\TSWIN\tswin.hpp 440: 
\CPP\LIB\TSWIN\tswin.hpp 441: 
\CPP\LIB\TSWIN\tswin.hpp 442: 
\CPP\LIB\TSWIN\tswin.hpp 443: 
\CPP\LIB\TSWIN\tswin.hpp 444: 
\CPP\LIB\TSWIN\tswin.hpp 445: 
\CPP\LIB\TSWIN\tswin.hpp 446: 
\CPP\LIB\TSWIN\tswin.hpp 447: 
\CPP\LIB\TSWIN\tswin.hpp 448: 
\CPP\LIB\TSWIN\tswin.hpp 449: 
\CPP\LIB\TSWIN\tswin.hpp 450: 
\CPP\LIB\TSWIN\tswin.hpp 451: 
\CPP\LIB\TSWIN\tswin.hpp 452: 
\CPP\LIB\TSWIN\tswin.hpp 453: 
\CPP\LIB\TSWIN\tswin.hpp 454: 
\CPP\LIB\TSWIN\tswin.hpp 455: 
\CPP\LIB\TSWIN\tswin.hpp 456: 
\CPP\LIB\TSWIN\tswin.hpp 457: 
\CPP\LIB\TSWIN\tswin.hpp 458: 
\CPP\LIB\TSWIN\tswin.hpp 459: 
\CPP\LIB\TSWIN\tswin.hpp 460: 
\CPP\LIB\TSWIN\tswin.hpp 461: 
\CPP\LIB\TSWIN\tswin.hpp 462: 
\CPP\LIB\TSWIN\tswin.hpp 463: 
\CPP\LIB\TSWIN\tswin.hpp 464: 
\CPP\LIB\TSWIN\tswin.hpp 465: 
\CPP\LIB\TSWIN\tswin.hpp 466: 
\CPP\LIB\TSWIN\tswin.hpp 467: 
\CPP\LIB\TSWIN\tswin.hpp 468: 
\CPP\LIB\TSWIN\tswin.hpp 469: 
\CPP\LIB\TSWIN\tswin.hpp 470: 
\CPP\LIB\TSWIN\tswin.hpp 471: 
\CPP\LIB\TSWIN\tswin.hpp 472: 
\CPP\LIB\TSWIN\tswin.hpp 473: 
\CPP\LIB\TSWIN\tswin.hpp 474: 
\CPP\LIB\TSWIN\tswin.hpp 475: 
\CPP\LIB\TSWIN\tswin.hpp 476: 
\CPP\LIB\TSWIN\tswin.hpp 477: 
\CPP\LIB\TSWIN\tswin.hpp 478: 
\CPP\LIB\TSWIN\tswin.hpp 479: 
\CPP\LIB\TSWIN\tswin.hpp 480: 
\CPP\LIB\TSWIN\tswin.hpp 481: 
\CPP\LIB\TSWIN\tswin.hpp 482: 
\CPP\LIB\TSWIN\tswin.hpp 483: 
\CPP\LIB\TSWIN\tswin.hpp 484: 
\CPP\LIB\TSWIN\tswin.hpp 485: 
\CPP\LIB\TSWIN\tswin.hpp 486: 
\CPP\LIB\TSWIN\tswin.hpp 487: 
\CPP\LIB\TSWIN\tswin.hpp 488: 
\CPP\LIB\TSWIN\tswin.hpp 489: 
\CPP\LIB\TSWIN\tswin.hpp 490: 
\CPP\LIB\TSWIN\tswin.hpp 491: 
\CPP\LIB\TSWIN\tswin.hpp 492: 
\CPP\LIB\TSWIN\tswin.hpp 493: 
\CPP\LIB\TSWIN\tswin.hpp 494: 
\CPP\LIB\TSWIN\tswin.hpp 495: 
\CPP\LIB\TSWIN\tswin.hpp 496: 
\CPP\LIB\TSWIN\tswin.hpp 497: 
\CPP\LIB\TSWIN\tswin.hpp 498: 
\CPP\LIB\TSWIN\tswin.hpp 499: 
\CPP\LIB\TSWIN\tswin.hpp 500: 
\CPP\LIB\TSWIN\tswin.hpp 501: 
\CPP\LIB\TSWIN\tswin.hpp 502: 
\CPP\LIB\TSWIN\tswin.hpp 503: 
\CPP\LIB\TSWIN\tswin.hpp 504: 
\CPP\LIB\TSWIN\tswin.hpp 505: 
\CPP\LIB\TSWIN\tswin.hpp 506: 
\CPP\LIB\TSWIN\tswin.hpp 507: 
\CPP\LIB\TSWIN\tswin.hpp 508: 
\CPP\LIB\TSWIN\tswin.hpp 509: 
\CPP\LIB\TSWIN\tswin.hpp 510: 
\CPP\LIB\TSWIN\tswin.hpp 511: 
\CPP\LIB\TSWIN\tswin.hpp 512: 
\CPP\LIB\TSWIN\tswin.hpp 513: 
\CPP\LIB\TSWIN\tswin.hpp 514: 
\CPP\LIB\TSWIN\tswin.hpp 515: 
\CPP\LIB\TSWIN\tswin.hpp 516: 
\CPP\LIB\TSWIN\tswin.hpp 517: 
\CPP\LIB\TSWIN\tswin.hpp 518: 
\CPP\LIB\TSWIN\tswin.hpp 519: 
\CPP\LIB\TSWIN\tswin.hpp 520: 
\CPP\LIB\TSWIN\tswin.hpp 521: 
\CPP\LIB\TSWIN\tswin.hpp 522: 
\CPP\LIB\TSWIN\tswin.hpp 523: 
\CPP\LIB\TSWIN\tswin.hpp 524: 
\CPP\LIB\TSWIN\tswin.hpp 525: 
\CPP\LIB\TSWIN\tswin.hpp 526: 
\CPP\LIB\TSWIN\tswin.hpp 527: 
\CPP\LIB\TSWIN\tswin.hpp 528: 
\CPP\LIB\TSWIN\tswin.hpp 529: 
\CPP\LIB\TSWIN\tswin.hpp 530: 
\CPP\LIB\TSWIN\tswin.hpp 531: 
\CPP\LIB\TSWIN\tswin.hpp 532: 
\CPP\LIB\TSWIN\tswin.hpp 533: 
\CPP\LIB\TSWIN\tswin.hpp 534: 
\CPP\LIB\TSWIN\tswin.hpp 535: 
\CPP\LIB\TSWIN\tswin.hpp 536: 
\CPP\LIB\TSWIN\tswin.hpp 537: 
\CPP\LIB\TSWIN\tswin.hpp 538: 
\CPP\LIB\TSWIN\tswin.hpp 539: 
\CPP\LIB\TSWIN\tswin.hpp 540: 
\CPP\LIB\TSWIN\tswin.hpp 541: 
\CPP\LIB\TSWIN\tswin.hpp 542: 
\CPP\LIB\TSWIN\tswin.hpp 543: 
\CPP\LIB\TSWIN\tswin.hpp 544: 
\CPP\LIB\TSWIN\tswin.hpp 545: 
\CPP\LIB\TSWIN\tswin.hpp 546: 
\CPP\LIB\TSWIN\tswin.hpp 547: 
\CPP\LIB\TSWIN\tswin.hpp 548: 
\CPP\LIB\TSWIN\tswin.hpp 549: 
\CPP\LIB\TSWIN\tswin.hpp 550: 
\CPP\LIB\TSWIN\tswin.hpp 551: 
\CPP\LIB\TSWIN\tswin.hpp 552: 
\CPP\LIB\TSWIN\tswin.hpp 553: 
\CPP\LIB\TSWIN\tswin.hpp 554: 
\CPP\LIB\TSWIN\tswin.hpp 555: 
\CPP\LIB\TSWIN\tswin.hpp 556: 
\CPP\LIB\TSWIN\tswin.hpp 557: 
\CPP\LIB\TSWIN\tswin.hpp 558: 
\CPP\LIB\TSWIN\tswin.hpp 559: 
\CPP\LIB\TSWIN\tswin.hpp 560: 
\CPP\LIB\TSWIN\tswin.hpp 561: 
\CPP\LIB\TSWIN\tswin.hpp 562: 
\CPP\LIB\TSWIN\tswin.hpp 563: 
\CPP\LIB\TSWIN\tswin.hpp 564: 
\CPP\LIB\TSWIN\tswin.hpp 565: 
\CPP\LIB\TSWIN\tswin.hpp 566: 
\CPP\LIB\TSWIN\tswin.hpp 567: 
\CPP\LIB\TSWIN\tswin.hpp 568: 
\CPP\LIB\TSWIN\tswin.hpp 569: 
\CPP\LIB\TSWIN\tswin.hpp 570: 
\CPP\LIB\TSWIN\tswin.hpp 571: 
\CPP\LIB\TSWIN\tswin.hpp 572: 
\CPP\LIB\TSWIN\tswin.hpp 573: 
\CPP\LIB\TSWIN\tswin.hpp 574: 
\CPP\LIB\TSWIN\tswin.hpp 575: 
\CPP\LIB\TSWIN\tswin.hpp 576: 
\CPP\LIB\TSWIN\tswin.hpp 577: 
\CPP\LIB\TSWIN\tswin.hpp 578: 
\CPP\LIB\TSWIN\tswin.hpp 579: 
\CPP\LIB\TSWIN\tswin.hpp 580: 
\CPP\LIB\TSWIN\tswin.hpp 581: 
\CPP\LIB\TSWIN\tswin.hpp 582: 
\CPP\LIB\TSWIN\tswin.hpp 583: 
\CPP\LIB\TSWIN\tswin.hpp 584: 
\CPP\LIB\TSWIN\tswin.hpp 585: 
\CPP\LIB\TSWIN\tswin.hpp 586: 
\CPP\LIB\TSWIN\tswin.hpp 587: 
\CPP\LIB\TSWIN\tswin.hpp 588: 
\CPP\LIB\TSWIN\tswin.hpp 589: 
\CPP\LIB\TSWIN\tswin.hpp 590: 
\CPP\LIB\TSWIN\tswin.hpp 591: 
\CPP\LIB\TSWIN\tswin.hpp 592: 
\CPP\LIB\TSWIN\tswin.hpp 593: 
\CPP\LIB\TSWIN\tswin.hpp 594: 
\CPP\LIB\TSWIN\tswin.hpp 595: 
\CPP\LIB\TSWIN\tswin.hpp 596: 
\CPP\LIB\TSWIN\tswin.hpp 597: 
\CPP\LIB\TSWIN\tswin.hpp 598: 
\CPP\LIB\TSWIN\tswin.hpp 599: 
\CPP\LIB\TSWIN\tswin.hpp 600: 
\CPP\LIB\TSWIN\tswin.hpp 601: 
\CPP\LIB\TSWIN\tswin.hpp 602: 
\CPP\LIB\TSWIN\tswin.hpp 603: 
\CPP\LIB\TSWIN\tswin.hpp 604: 
\CPP\LIB\TSWIN\tswin.hpp 605: 
\CPP\LIB\TSWIN\tswin.hpp 606: 
\CPP\LIB\TSWIN\tswin.hpp 607: 
\CPP\LIB\TSWIN\tswin.hpp 608: 
\CPP\LIB\TSWIN\tswin.hpp 609: 
\CPP\LIB\TSWIN\tswin.hpp 610: 
\CPP\LIB\TSWIN\tswin.hpp 611: 
\CPP\LIB\TSWIN\tswin.hpp 612: 
\CPP\LIB\TSWIN\tswin.hpp 613: 
\CPP\LIB\TSWIN\tswin.hpp 614: 
\CPP\LIB\TSWIN\tswin.hpp 615: 
\CPP\LIB\TSWIN\tswin.hpp 616: 
\CPP\LIB\TSWIN\tswin.hpp 617: 
\CPP\LIB\TSWIN\tswin.hpp 618: 
\CPP\LIB\TSWIN\tswin.hpp 619: 
\CPP\LIB\TSWIN\tswin.hpp 620: 
\CPP\LIB\TSWIN\tswin.hpp 621: 
\CPP\LIB\TSWIN\tswin.hpp 622: 
\CPP\LIB\TSWIN\tswin.hpp 623: 
\CPP\LIB\TSWIN\tswin.hpp 624: 
\CPP\LIB\TSWIN\tswin.hpp 625: 
\CPP\LIB\TSWIN\tswin.hpp 626: 
\CPP\LIB\TSWIN\tswin.hpp 627: 
\CPP\LIB\TSWIN\tswin.hpp 628: 
\CPP\LIB\TSWIN\tswin.hpp 629: 
\CPP\LIB\TSWIN\tswin.hpp 630: 
\CPP\LIB\TSWIN\tswin.hpp 631: 
\CPP\LIB\TSWIN\tswin.hpp 632: 
\CPP\LIB\TSWIN\tswin.hpp 633: 
\CPP\LIB\TSWIN\tswin.hpp 634: 
\CPP\LIB\TSWIN\tswin.hpp 635: 
\CPP\LIB\TSWIN\tswin.hpp 636: 
\CPP\LIB\TSWIN\tswin.hpp 637: 
\CPP\LIB\TSWIN\tswin.hpp 638: 
\CPP\LIB\TSWIN\tswin.hpp 639: 
\CPP\LIB\TSWIN\tswin.hpp 640: 
\CPP\LIB\TSWIN\tswin.hpp 641: 
\CPP\LIB\TSWIN\tswin.hpp 642: 
\CPP\LIB\TSWIN\tswin.hpp 643: 
\CPP\LIB\TSWIN\tswin.hpp 644: 
\CPP\LIB\TSWIN\tswin.hpp 645: 
\CPP\LIB\TSWIN\tswin.hpp 646: 
\CPP\LIB\TSWIN\tswin.hpp 647: 
\CPP\LIB\TSWIN\tswin.hpp 648: 
\CPP\LIB\TSWIN\tswin.hpp 649: 
\CPP\LIB\TSWIN\tswin.hpp 650: 
\CPP\LIB\TSWIN\tswin.hpp 651: 
\CPP\LIB\TSWIN\tswin.hpp 652: 
\CPP\LIB\TSWIN\tswin.hpp 653: 
\CPP\LIB\TSWIN\tswin.hpp 654: 
\CPP\LIB\TSWIN\tswin.hpp 655: 
\CPP\LIB\TSWIN\tswin.hpp 656: 
\CPP\LIB\TSWIN\tswin.hpp 657: 
\CPP\LIB\TSWIN\tswin.hpp 658: 
\CPP\LIB\TSWIN\tswin.hpp 659: 
\CPP\LIB\TSWIN\tswin.hpp 660: 
\CPP\LIB\TSWIN\tswin.hpp 661: 
\CPP\LIB\TSWIN\tswin.hpp 662: 
\CPP\LIB\TSWIN\tswin.hpp 663: 
\CPP\LIB\TSWIN\tswin.hpp 664: 
\CPP\LIB\TSWIN\tswin.hpp 665: 
\CPP\LIB\TSWIN\tswin.hpp 666: 
\CPP\LIB\TSWIN\tswin.hpp 667: 
\CPP\LIB\TSWIN\tswin.hpp 668: 
\CPP\LIB\TSWIN\tswin.hpp 669: 
\CPP\LIB\TSWIN\tswin.hpp 670: 
\CPP\LIB\TSWIN\tswin.hpp 671: 
\CPP\LIB\TSWIN\tswin.hpp 672: 
\CPP\LIB\TSWIN\tswin.hpp 673: 
\CPP\LIB\TSWIN\tswin.hpp 674: 
\CPP\LIB\TSWIN\tswin.hpp 675: 
\CPP\LIB\TSWIN\tswin.hpp 676: 
\CPP\LIB\TSWIN\tswin.hpp 677: 
\CPP\LIB\TSWIN\tswin.hpp 678: 
\CPP\LIB\TSWIN\tswin.hpp 679: 
\CPP\LIB\TSWIN\tswin.hpp 680: 
\CPP\LIB\TSWIN\tswin.hpp 681: 
\CPP\LIB\TSWIN\tswin.hpp 682: 
\CPP\LIB\TSWIN\tswin.hpp 683: 
\CPP\LIB\TSWIN\tswin.hpp 684: 
\CPP\LIB\TSWIN\tswin.hpp 685: 
\CPP\LIB\TSWIN\tswin.hpp 686: 
procfg.hpp 28: 
\CPP\PB\LIB\pb_lib.hpp 1: 
\CPP\PB\LIB\pb_lib.hpp 2: 
\CPP\PB\LIB\pb_lib.hpp 3: 
\CPP\PB\LIB\pb_lib.hpp 4: typedef byte AskType;
\CPP\PB\LIB\pb_lib.hpp 5: 
\CPP\PB\LIB\pb_lib.hpp 6: 
\CPP\PB\LIB\pb_lib.hpp 7: 
\CPP\PB\LIB\pb_lib.hpp 8: 
\CPP\PB\LIB\pb_lib.hpp 9: 
\CPP\PB\LIB\pb_lib.hpp 10: 
\CPP\PB\LIB\pb_lib.hpp 11: 
\CPP\PB\LIB\pb_lib.hpp 12: 
\CPP\PB\LIB\pb_lib.hpp 13: 
\CPP\PB\LIB\pb_lib.hpp 14: 
\CPP\PB\LIB\pb_lib.hpp 15: 
\CPP\PB\LIB\pb_lib.hpp 16: 
\CPP\PB\LIB\pb_lib.hpp 17: 
\CPP\PB\LIB\pb_lib.hpp 18: 
\CPP\PB\LIB\pb_lib.hpp 19: 
\CPP\PB\LIB\pb_lib.hpp 20: 
\CPP\PB\LIB\pb_lib.hpp 21: 
\CPP\PB\LIB\pb_lib.hpp 22: 
\CPP\PB\LIB\pb_lib.hpp 23: 
\CPP\PB\LIB\pb_lib.hpp 24: 
\CPP\PB\LIB\pb_lib.hpp 25: 
\CPP\PB\LIB\pb_lib.hpp 26: 
\CPP\PB\LIB\pb_lib.hpp 27: 
\CPP\PB\LIB\pb_lib.hpp 28: 
\CPP\PB\LIB\pb_lib.hpp 29: 
\CPP\PB\LIB\pb_lib.hpp 30: 
\CPP\PB\LIB\pb_lib.hpp 31: 
\CPP\PB\LIB\pb_lib.hpp 32: 
\CPP\PB\LIB\pb_lib.hpp 33: 
\CPP\PB\LIB\pb_lib.hpp 34: 
\CPP\PB\LIB\pb_lib.hpp 35: 
\CPP\PB\LIB\pb_lib.hpp 36: 
\CPP\PB\LIB\pb_lib.hpp 37: 
\CPP\PB\LIB\pb_lib.hpp 38: 
\CPP\PB\LIB\pb_lib.hpp 39: 
\CPP\PB\LIB\pb_lib.hpp 40: 
\CPP\PB\LIB\pb_lib.hpp 41: const int MAX_FILE_AREAS = 10000;
\CPP\PB\LIB\pb_lib.hpp 42: const int MAX_MSG_AREAS  = 10000;
\CPP\PB\LIB\pb_lib.hpp 43: 
\CPP\PB\LIB\pb_lib.hpp 44: class AccessFlags
\CPP\PB\LIB\pb_lib.hpp 45: {
\CPP\PB\LIB\pb_lib.hpp 46: dword v;
\CPP\PB\LIB\pb_lib.hpp 47: public:
\CPP\PB\LIB\pb_lib.hpp 48: AccessFlags() { clearall(); }
\CPP\PB\LIB\pb_lib.hpp 49: void clearall() { v=0L; }
\CPP\PB\LIB\pb_lib.hpp 50: bool getflag(int flagnr);
\CPP\PB\LIB\pb_lib.hpp 51: void setflag(int flagnr);
\CPP\PB\LIB\pb_lib.hpp 52: void clearflag(int flagnr);
\CPP\PB\LIB\pb_lib.hpp 53: void flagstostr(char *str);
\CPP\PB\LIB\pb_lib.hpp 54: 
\CPP\PB\LIB\pb_lib.hpp 55: operator dword (              )  {  return(v);  }
\CPP\PB\LIB\pb_lib.hpp 56: void operator =     (  dword flags )  {  v = flags;  }
\CPP\PB\LIB\pb_lib.hpp 57: };
\CPP\PB\LIB\pb_lib.hpp 58: 
\CPP\PB\LIB\pb_lib.hpp 59: class CombinedType
\CPP\PB\LIB\pb_lib.hpp 60: {
\CPP\PB\LIB\pb_lib.hpp 61: byte bits[125];
\CPP\PB\LIB\pb_lib.hpp 62: public:
\CPP\PB\LIB\pb_lib.hpp 63: CombinedType();
\CPP\PB\LIB\pb_lib.hpp 64: bool connected(int brdnr);
\CPP\PB\LIB\pb_lib.hpp 65: void connect(int brdnr);
\CPP\PB\LIB\pb_lib.hpp 66: void disconnect(int brdnr);
\CPP\PB\LIB\pb_lib.hpp 67: void toggle(int brdnr);
\CPP\PB\LIB\pb_lib.hpp 68: };
\CPP\PB\LIB\pb_lib.hpp 69: 
\CPP\PB\LIB\pb_lib.hpp 70: struct TimeFrame
\CPP\PB\LIB\pb_lib.hpp 71: {
\CPP\PB\LIB\pb_lib.hpp 72: byte periods[7][6];                 
\CPP\PB\LIB\pb_lib.hpp 73: 
\CPP\PB\LIB\pb_lib.hpp 74: TimeFrame();
\CPP\PB\LIB\pb_lib.hpp 75: 
\CPP\PB\LIB\pb_lib.hpp 76: void clear();
\CPP\PB\LIB\pb_lib.hpp 77: void setAll();
\CPP\PB\LIB\pb_lib.hpp 78: 
\CPP\PB\LIB\pb_lib.hpp 79: bool enabled()                   const;
\CPP\PB\LIB\pb_lib.hpp 80: bool enabled(Time&)              const;
\CPP\PB\LIB\pb_lib.hpp 81: bool enabled(Date&,Time&)        const;
\CPP\PB\LIB\pb_lib.hpp 82: bool enabled(int dow,Time&)      const;
\CPP\PB\LIB\pb_lib.hpp 83: bool enabled(int dow,int period) const;
\CPP\PB\LIB\pb_lib.hpp 84: 
\CPP\PB\LIB\pb_lib.hpp 85: void enable(int dow,Time&);
\CPP\PB\LIB\pb_lib.hpp 86: void enable(int dow,int period);
\CPP\PB\LIB\pb_lib.hpp 87: void disable(int dow,Time&);
\CPP\PB\LIB\pb_lib.hpp 88: void disable(int dow,int period);
\CPP\PB\LIB\pb_lib.hpp 89: };
\CPP\PB\LIB\pb_lib.hpp 90: 
\CPP\PB\LIB\pb_lib.hpp 91: struct AccessRecord
\CPP\PB\LIB\pb_lib.hpp 92: {
\CPP\PB\LIB\pb_lib.hpp 93: 
\CPP\PB\LIB\pb_lib.hpp 94: 
\CPP\PB\LIB\pb_lib.hpp 95: word         minLevel;              
\CPP\PB\LIB\pb_lib.hpp 96: word         maxLevel;              
\CPP\PB\LIB\pb_lib.hpp 97: AccessFlags  flags;                 
\CPP\PB\LIB\pb_lib.hpp 98: AccessFlags  flagsNot;              
\CPP\PB\LIB\pb_lib.hpp 99: byte         minAge;                
\CPP\PB\LIB\pb_lib.hpp 100: byte         maxAge;                
\CPP\PB\LIB\pb_lib.hpp 101: byte         sex;                   
\CPP\PB\LIB\pb_lib.hpp 102: word         minTimeLeft;           
\CPP\PB\LIB\pb_lib.hpp 103: word         minTimeOnline;         
\CPP\PB\LIB\pb_lib.hpp 104: TimeFrame    timeFrame;             
\CPP\PB\LIB\pb_lib.hpp 105: byte         terminals;             
\CPP\PB\LIB\pb_lib.hpp 106: dword        minSpeed;              
\CPP\PB\LIB\pb_lib.hpp 107: dword        maxSpeed;              
\CPP\PB\LIB\pb_lib.hpp 108: 
\CPP\PB\LIB\pb_lib.hpp 109: byte         nodes[32];             
\CPP\PB\LIB\pb_lib.hpp 110: 
\CPP\PB\LIB\pb_lib.hpp 111: byte         extra[18];             
\CPP\PB\LIB\pb_lib.hpp 112: };
\CPP\PB\LIB\pb_lib.hpp 113: 
\CPP\PB\LIB\pb_lib.hpp 114: 
\CPP\PB\LIB\pb_lib.hpp 115: struct RA1_UsersXiBBS
\CPP\PB\LIB\pb_lib.hpp 116: {
\CPP\PB\LIB\pb_lib.hpp 117: char Handle[36];
\CPP\PB\LIB\pb_lib.hpp 118: char Comment[81];
\CPP\PB\LIB\pb_lib.hpp 119: char FirstDate[9];
\CPP\PB\LIB\pb_lib.hpp 120: byte CombinedInfo[25];
\CPP\PB\LIB\pb_lib.hpp 121: char BirthDate[9];
\CPP\PB\LIB\pb_lib.hpp 122: char SubDate[9];
\CPP\PB\LIB\pb_lib.hpp 123: byte ScreenWidth;
\CPP\PB\LIB\pb_lib.hpp 124: byte MsgArea;
\CPP\PB\LIB\pb_lib.hpp 125: byte FileArea;
\CPP\PB\LIB\pb_lib.hpp 126: byte Language;
\CPP\PB\LIB\pb_lib.hpp 127: byte DateFormat;
\CPP\PB\LIB\pb_lib.hpp 128: char ForwardFor[36];
\CPP\PB\LIB\pb_lib.hpp 129: byte extra[43];
\CPP\PB\LIB\pb_lib.hpp 130: };
\CPP\PB\LIB\pb_lib.hpp 131: 
\CPP\PB\LIB\pb_lib.hpp 132: struct RA1_UsersBBS
\CPP\PB\LIB\pb_lib.hpp 133: {
\CPP\PB\LIB\pb_lib.hpp 134: char Name[36];
\CPP\PB\LIB\pb_lib.hpp 135: char Location[26];
\CPP\PB\LIB\pb_lib.hpp 136: char Password[16];
\CPP\PB\LIB\pb_lib.hpp 137: char DataPhone[13];
\CPP\PB\LIB\pb_lib.hpp 138: char VoicePhone[13];
\CPP\PB\LIB\pb_lib.hpp 139: char LastTime[6];
\CPP\PB\LIB\pb_lib.hpp 140: char LastDate[9];
\CPP\PB\LIB\pb_lib.hpp 141: byte Attribute;
\CPP\PB\LIB\pb_lib.hpp 142: long Flags;
\CPP\PB\LIB\pb_lib.hpp 143: int  Credit;
\CPP\PB\LIB\pb_lib.hpp 144: int  Pending;
\CPP\PB\LIB\pb_lib.hpp 145: unsigned
\CPP\PB\LIB\pb_lib.hpp 146: MsgsPosted,
\CPP\PB\LIB\pb_lib.hpp 147: LastRead,
\CPP\PB\LIB\pb_lib.hpp 148: Security,
\CPP\PB\LIB\pb_lib.hpp 149: NoCalls,
\CPP\PB\LIB\pb_lib.hpp 150: Uploads,
\CPP\PB\LIB\pb_lib.hpp 151: Downloads,
\CPP\PB\LIB\pb_lib.hpp 152: UploadsK,
\CPP\PB\LIB\pb_lib.hpp 153: DownloadsK,
\CPP\PB\LIB\pb_lib.hpp 154: TodayK,
\CPP\PB\LIB\pb_lib.hpp 155: Elapsed,
\CPP\PB\LIB\pb_lib.hpp 156: ScreenLength;
\CPP\PB\LIB\pb_lib.hpp 157: byte LastPwdChange;
\CPP\PB\LIB\pb_lib.hpp 158: byte Attribute2;
\CPP\PB\LIB\pb_lib.hpp 159: 
\CPP\PB\LIB\pb_lib.hpp 160: byte Group;
\CPP\PB\LIB\pb_lib.hpp 161: unsigned XIrecord;
\CPP\PB\LIB\pb_lib.hpp 162: char extra[3];
\CPP\PB\LIB\pb_lib.hpp 163: };
\CPP\PB\LIB\pb_lib.hpp 164: 
\CPP\PB\LIB\pb_lib.hpp 165: 
\CPP\PB\LIB\pb_lib.hpp 166: 
\CPP\PB\LIB\pb_lib.hpp 167: 
\CPP\PB\LIB\pb_lib.hpp 168: 
\CPP\PB\LIB\pb_lib.hpp 169: 
\CPP\PB\LIB\pb_lib.hpp 170: 
\CPP\PB\LIB\pb_lib.hpp 171: 
\CPP\PB\LIB\pb_lib.hpp 172: 
\CPP\PB\LIB\pb_lib.hpp 173: 
\CPP\PB\LIB\pb_lib.hpp 174: 
\CPP\PB\LIB\pb_lib.hpp 175: 
\CPP\PB\LIB\pb_lib.hpp 176: 
\CPP\PB\LIB\pb_lib.hpp 177: 
\CPP\PB\LIB\pb_lib.hpp 178: 
\CPP\PB\LIB\pb_lib.hpp 179: 
\CPP\PB\LIB\pb_lib.hpp 180: 
\CPP\PB\LIB\pb_lib.hpp 181: 
\CPP\PB\LIB\pb_lib.hpp 182: 
\CPP\PB\LIB\pb_lib.hpp 183: 
\CPP\PB\LIB\pb_lib.hpp 184: 
\CPP\PB\LIB\pb_lib.hpp 185: struct RA1_UsersPbBBS
\CPP\PB\LIB\pb_lib.hpp 186: {
\CPP\PB\LIB\pb_lib.hpp 187: char            username[36];
\CPP\PB\LIB\pb_lib.hpp 188: int             loglevel;
\CPP\PB\LIB\pb_lib.hpp 189: char            country[26];
\CPP\PB\LIB\pb_lib.hpp 190: int             tb_timebalance;
\CPP\PB\LIB\pb_lib.hpp 191: int             tb_kbytebalance;
\CPP\PB\LIB\pb_lib.hpp 192: int             tb_timewithdrawn;
\CPP\PB\LIB\pb_lib.hpp 193: int             tb_kbytewithdrawn;
\CPP\PB\LIB\pb_lib.hpp 194: word            expirlevel;
\CPP\PB\LIB\pb_lib.hpp 195: word            uflags;
\CPP\PB\LIB\pb_lib.hpp 196: Date            tb_lastused;
\CPP\PB\LIB\pb_lib.hpp 197: long            totaltimeused;
\CPP\PB\LIB\pb_lib.hpp 198: CombinedType mailcheckboards;
\CPP\PB\LIB\pb_lib.hpp 199: CombinedType boards;
\CPP\PB\LIB\pb_lib.hpp 200: word            tb_timedeposited;
\CPP\PB\LIB\pb_lib.hpp 201: word            tb_kbytedeposited;
\CPP\PB\LIB\pb_lib.hpp 202: word            tb_timelended;
\CPP\PB\LIB\pb_lib.hpp 203: word            tb_kbytelended;
\CPP\PB\LIB\pb_lib.hpp 204: Date            tb_timepayback;
\CPP\PB\LIB\pb_lib.hpp 205: Date            tb_kbytepayback;
\CPP\PB\LIB\pb_lib.hpp 206: byte            hibyte_filearea;
\CPP\PB\LIB\pb_lib.hpp 207: byte            hibyte_msgarea;
\CPP\PB\LIB\pb_lib.hpp 208: byte            rip_font;
\CPP\PB\LIB\pb_lib.hpp 209: byte            packer;
\CPP\PB\LIB\pb_lib.hpp 210: byte            protocol;
\CPP\PB\LIB\pb_lib.hpp 211: dword           passwordCrc;
\CPP\PB\LIB\pb_lib.hpp 212: char            language[9];
\CPP\PB\LIB\pb_lib.hpp 213: byte            extra[368];
\CPP\PB\LIB\pb_lib.hpp 214: };
\CPP\PB\LIB\pb_lib.hpp 215: 
\CPP\PB\LIB\pb_lib.hpp 216: struct RA1_UsersIdxBBS
\CPP\PB\LIB\pb_lib.hpp 217: {
\CPP\PB\LIB\pb_lib.hpp 218: dword NameCRC;
\CPP\PB\LIB\pb_lib.hpp 219: dword HandleCRC;
\CPP\PB\LIB\pb_lib.hpp 220: };
\CPP\PB\LIB\pb_lib.hpp 221: 
\CPP\PB\LIB\pb_lib.hpp 222: 
\CPP\PB\LIB\pb_lib.hpp 223: 
\CPP\PB\LIB\pb_lib.hpp 224: struct RA2_UsersIdxBBS
\CPP\PB\LIB\pb_lib.hpp 225: {
\CPP\PB\LIB\pb_lib.hpp 226: dword NameCRC;
\CPP\PB\LIB\pb_lib.hpp 227: dword HandleCRC;
\CPP\PB\LIB\pb_lib.hpp 228: };
\CPP\PB\LIB\pb_lib.hpp 229: 
\CPP\PB\LIB\pb_lib.hpp 230: struct RA2_UsersBBS
\CPP\PB\LIB\pb_lib.hpp 231: {
\CPP\PB\LIB\pb_lib.hpp 232: char  Name[36];               
\CPP\PB\LIB\pb_lib.hpp 233: char  Location[26];           
\CPP\PB\LIB\pb_lib.hpp 234: char  Organisation[51];       
\CPP\PB\LIB\pb_lib.hpp 235: char  Address1[51];           
\CPP\PB\LIB\pb_lib.hpp 236: char  Address2[51];           
\CPP\PB\LIB\pb_lib.hpp 237: char  Address3[51];           
\CPP\PB\LIB\pb_lib.hpp 238: char  Handle[36];             
\CPP\PB\LIB\pb_lib.hpp 239: char  Comment[81];            
\CPP\PB\LIB\pb_lib.hpp 240: dword PasswordCRC;            
\CPP\PB\LIB\pb_lib.hpp 241: char  DataPhone[16];          
\CPP\PB\LIB\pb_lib.hpp 242: char  VoicePhone[16];         
\CPP\PB\LIB\pb_lib.hpp 243: char  LastTime[6];            
\CPP\PB\LIB\pb_lib.hpp 244: char  LastDate[9];            
\CPP\PB\LIB\pb_lib.hpp 245: byte  Attribute;              
\CPP\PB\LIB\pb_lib.hpp 246: byte  Attribute2;             
\CPP\PB\LIB\pb_lib.hpp 247: dword Flags;                  
\CPP\PB\LIB\pb_lib.hpp 248: long  Credit;                 
\CPP\PB\LIB\pb_lib.hpp 249: long  Pending;                
\CPP\PB\LIB\pb_lib.hpp 250: word  MsgsPosted;             
\CPP\PB\LIB\pb_lib.hpp 251: word  Security;               
\CPP\PB\LIB\pb_lib.hpp 252: long  LastRead;               
\CPP\PB\LIB\pb_lib.hpp 253: long  NoCalls;                
\CPP\PB\LIB\pb_lib.hpp 254: long  Uploads;                
\CPP\PB\LIB\pb_lib.hpp 255: long  Downloads;              
\CPP\PB\LIB\pb_lib.hpp 256: long  UploadsK;               
\CPP\PB\LIB\pb_lib.hpp 257: long  DownloadsK;             
\CPP\PB\LIB\pb_lib.hpp 258: long  TodayK;                 
\CPP\PB\LIB\pb_lib.hpp 259: sword Elapsed;                
\CPP\PB\LIB\pb_lib.hpp 260: word  ScreenLength;           
\CPP\PB\LIB\pb_lib.hpp 261: byte  LastPwdChange;          
\CPP\PB\LIB\pb_lib.hpp 262: word  Group;                  
\CPP\PB\LIB\pb_lib.hpp 263: byte  CombinedInfo[400];      
\CPP\PB\LIB\pb_lib.hpp 264: char  FirstDate[9];           
\CPP\PB\LIB\pb_lib.hpp 265: char  BirthDate[9];           
\CPP\PB\LIB\pb_lib.hpp 266: char  SubDate[9];             
\CPP\PB\LIB\pb_lib.hpp 267: byte  ScreenWidth;            
\CPP\PB\LIB\pb_lib.hpp 268: byte  Language;               
\CPP\PB\LIB\pb_lib.hpp 269: byte  DateFormat;             
\CPP\PB\LIB\pb_lib.hpp 270: char  ForwardTo[36];          
\CPP\PB\LIB\pb_lib.hpp 271: word  MsgArea;                
\CPP\PB\LIB\pb_lib.hpp 272: word  FileArea;               
\CPP\PB\LIB\pb_lib.hpp 273: byte  DefaultProtocol;        
\CPP\PB\LIB\pb_lib.hpp 274: word  FileGroup;              
\CPP\PB\LIB\pb_lib.hpp 275: byte  LastDOBCheck;           
\CPP\PB\LIB\pb_lib.hpp 276: byte  Sex;                    
\CPP\PB\LIB\pb_lib.hpp 277: long  XIrecord;               
\CPP\PB\LIB\pb_lib.hpp 278: word  MsgGroup;               
\CPP\PB\LIB\pb_lib.hpp 279: byte  FreeSpace[48];          
\CPP\PB\LIB\pb_lib.hpp 280: };
\CPP\PB\LIB\pb_lib.hpp 281: 
\CPP\PB\LIB\pb_lib.hpp 282: struct RA2_UsersXiBBS
\CPP\PB\LIB\pb_lib.hpp 283: {
\CPP\PB\LIB\pb_lib.hpp 284: byte extra[200];
\CPP\PB\LIB\pb_lib.hpp 285: };
\CPP\PB\LIB\pb_lib.hpp 286: 
\CPP\PB\LIB\pb_lib.hpp 287: struct RA2_UsersPbBBS
\CPP\PB\LIB\pb_lib.hpp 288: {
\CPP\PB\LIB\pb_lib.hpp 289: char         name[36];
\CPP\PB\LIB\pb_lib.hpp 290: char         country[26];
\CPP\PB\LIB\pb_lib.hpp 291: char         state[26];
\CPP\PB\LIB\pb_lib.hpp 292: char         faxPhone[16];
\CPP\PB\LIB\pb_lib.hpp 293: char         passWord[16];
\CPP\PB\LIB\pb_lib.hpp 294: char         language[9];
\CPP\PB\LIB\pb_lib.hpp 295: Date         lastPwdChange;
\CPP\PB\LIB\pb_lib.hpp 296: Date         lastNewFilesCheck;
\CPP\PB\LIB\pb_lib.hpp 297: int          logLevel;
\CPP\PB\LIB\pb_lib.hpp 298: sword        tbTimeBalance;
\CPP\PB\LIB\pb_lib.hpp 299: sword        tbKbBalance;
\CPP\PB\LIB\pb_lib.hpp 300: sword        tbTimeWithdrawn;
\CPP\PB\LIB\pb_lib.hpp 301: sword        tbKbWithdrawn;
\CPP\PB\LIB\pb_lib.hpp 302: word         tbTimeDeposited;
\CPP\PB\LIB\pb_lib.hpp 303: word         tbKbDeposited;
\CPP\PB\LIB\pb_lib.hpp 304: word         tbTimeLoaned;
\CPP\PB\LIB\pb_lib.hpp 305: word         tbKbLoaned;
\CPP\PB\LIB\pb_lib.hpp 306: Date         tbTimePayback;
\CPP\PB\LIB\pb_lib.hpp 307: Date         tbKbPayback;
\CPP\PB\LIB\pb_lib.hpp 308: Date         tbLastUsed;
\CPP\PB\LIB\pb_lib.hpp 309: 
\CPP\PB\LIB\pb_lib.hpp 310: word         expLevel;
\CPP\PB\LIB\pb_lib.hpp 311: AccessFlags  expFlagsOn;
\CPP\PB\LIB\pb_lib.hpp 312: AccessFlags  expFlagsOff;
\CPP\PB\LIB\pb_lib.hpp 313: dword        uFlags;
\CPP\PB\LIB\pb_lib.hpp 314: CombinedType mailCheckBoards;
\CPP\PB\LIB\pb_lib.hpp 315: dword        totalTimeUsed;
\CPP\PB\LIB\pb_lib.hpp 316: word         qwkMaxMsgsPerArea;
\CPP\PB\LIB\pb_lib.hpp 317: word         qwkMaxMsgs;
\CPP\PB\LIB\pb_lib.hpp 318: byte         qwkArchiver;
\CPP\PB\LIB\pb_lib.hpp 319: byte         ripFont;
\CPP\PB\LIB\pb_lib.hpp 320: AskType      checkMail;
\CPP\PB\LIB\pb_lib.hpp 321: AskType      checkNewFiles;
\CPP\PB\LIB\pb_lib.hpp 322: 
\CPP\PB\LIB\pb_lib.hpp 323: byte         extra[398];
\CPP\PB\LIB\pb_lib.hpp 324: };
\CPP\PB\LIB\pb_lib.hpp 325: 
\CPP\PB\LIB\pb_lib.hpp 326: 
\CPP\PB\LIB\pb_lib.hpp 327: 
\CPP\PB\LIB\pb_lib.hpp 328: 
\CPP\PB\LIB\pb_lib.hpp 329: 
\CPP\PB\LIB\pb_lib.hpp 330: 
\CPP\PB\LIB\pb_lib.hpp 331: 
\CPP\PB\LIB\pb_lib.hpp 332: 
\CPP\PB\LIB\pb_lib.hpp 333: 
\CPP\PB\LIB\pb_lib.hpp 334: 
\CPP\PB\LIB\pb_lib.hpp 335: 
\CPP\PB\LIB\pb_lib.hpp 336: 
\CPP\PB\LIB\pb_lib.hpp 337: 
\CPP\PB\LIB\pb_lib.hpp 338: 
\CPP\PB\LIB\pb_lib.hpp 339: 
\CPP\PB\LIB\pb_lib.hpp 340: 
\CPP\PB\LIB\pb_lib.hpp 341: 
\CPP\PB\LIB\pb_lib.hpp 342: 
\CPP\PB\LIB\pb_lib.hpp 343: 
\CPP\PB\LIB\pb_lib.hpp 344: 
\CPP\PB\LIB\pb_lib.hpp 345: 
\CPP\PB\LIB\pb_lib.hpp 346: 
\CPP\PB\LIB\pb_lib.hpp 347: 
\CPP\PB\LIB\pb_lib.hpp 348: 
\CPP\PB\LIB\pb_lib.hpp 349: 
\CPP\PB\LIB\pb_lib.hpp 350: 
\CPP\PB\LIB\pb_lib.hpp 351: 
\CPP\PB\LIB\pb_lib.hpp 352: 
\CPP\PB\LIB\pb_lib.hpp 353: 
\CPP\PB\LIB\pb_lib.hpp 354: 
\CPP\PB\LIB\pb_lib.hpp 355: const dword UFLAG_DELETED   = 0x00000001L; 
\CPP\PB\LIB\pb_lib.hpp 356: const dword UFLAG_ANSI      = 0x00000002L; 
\CPP\PB\LIB\pb_lib.hpp 357: const dword UFLAG_PAUSE     = 0x00000004L; 
\CPP\PB\LIB\pb_lib.hpp 358: const dword UFLAG_CLEAR     = 0x00000008L; 
\CPP\PB\LIB\pb_lib.hpp 359: const dword UFLAG_HOTKEYS   = 0x00000010L; 
\CPP\PB\LIB\pb_lib.hpp 360: const dword UFLAG_NOIBM     = 0x00000020L; 
\CPP\PB\LIB\pb_lib.hpp 361: const dword UFLAG_FSED      = 0x00000040L; 
\CPP\PB\LIB\pb_lib.hpp 362: const dword UFLAG_NOKILL    = 0x00000080L; 
\CPP\PB\LIB\pb_lib.hpp 363: const dword UFLAG_IGNORE    = 0x00000100L; 
\CPP\PB\LIB\pb_lib.hpp 364: const dword UFLAG_ATTEN     = 0x00000200L; 
\CPP\PB\LIB\pb_lib.hpp 365: const dword UFLAG_NOTOPS    = 0x00000400L; 
\CPP\PB\LIB\pb_lib.hpp 366: const dword UFLAG_HIDDEN    = 0x00000800L; 
\CPP\PB\LIB\pb_lib.hpp 367: const dword UFLAG_QUIET     = 0x00001000L; 
\CPP\PB\LIB\pb_lib.hpp 368: const dword UFLAG_AVATAR    = 0x00002000L; 
\CPP\PB\LIB\pb_lib.hpp 369: const dword UFLAG_AVTPLUS   = 0x00004000L; 
\CPP\PB\LIB\pb_lib.hpp 370: const dword UFLAG_GUEST     = 0x00008000L; 
\CPP\PB\LIB\pb_lib.hpp 371: const dword UFLAG_PAGEPRI   = 0x00010000L; 
\CPP\PB\LIB\pb_lib.hpp 372: const dword UFLAG_LOCALONLY = 0x00020000L; 
\CPP\PB\LIB\pb_lib.hpp 373: const dword UFLAG_MULTILOGIN= 0x00040000L; 
\CPP\PB\LIB\pb_lib.hpp 374: const dword UFLAG_FREECHAT  = 0x00080000L; 
\CPP\PB\LIB\pb_lib.hpp 375: const dword UFLAG_NORIP     = 0x00100000L; 
\CPP\PB\LIB\pb_lib.hpp 376: 
\CPP\PB\LIB\pb_lib.hpp 377: const byte  SEX_UNKNOWN     = 0;
\CPP\PB\LIB\pb_lib.hpp 378: const byte  SEX_MALE        = 1;
\CPP\PB\LIB\pb_lib.hpp 379: const byte  SEX_FEMALE      = 2;
\CPP\PB\LIB\pb_lib.hpp 380: 
\CPP\PB\LIB\pb_lib.hpp 381: 
\CPP\PB\LIB\pb_lib.hpp 382: 
\CPP\PB\LIB\pb_lib.hpp 383: 
\CPP\PB\LIB\pb_lib.hpp 384: 
\CPP\PB\LIB\pb_lib.hpp 385: 
\CPP\PB\LIB\pb_lib.hpp 386: 
\CPP\PB\LIB\pb_lib.hpp 387: 
\CPP\PB\LIB\pb_lib.hpp 388: 
\CPP\PB\LIB\pb_lib.hpp 389: 
\CPP\PB\LIB\pb_lib.hpp 390: 
\CPP\PB\LIB\pb_lib.hpp 391: 
\CPP\PB\LIB\pb_lib.hpp 392: 
\CPP\PB\LIB\pb_lib.hpp 393: 
\CPP\PB\LIB\pb_lib.hpp 394: 
\CPP\PB\LIB\pb_lib.hpp 395: struct _User
\CPP\PB\LIB\pb_lib.hpp 396: {
\CPP\PB\LIB\pb_lib.hpp 397: private:
\CPP\PB\LIB\pb_lib.hpp 398: static      String     sysDir;
\CPP\PB\LIB\pb_lib.hpp 399: static      String     lastSearchSpec;
\CPP\PB\LIB\pb_lib.hpp 400: static      bool       lastSearchAlias;
\CPP\PB\LIB\pb_lib.hpp 401: static      bool       lastSearchExact;
\CPP\PB\LIB\pb_lib.hpp 402: static      bool       lastSearchFuzzy;
\CPP\PB\LIB\pb_lib.hpp 403: static      long       lastSearchRecord;
\CPP\PB\LIB\pb_lib.hpp 404: 
\CPP\PB\LIB\pb_lib.hpp 405: bool        search     ();
\CPP\PB\LIB\pb_lib.hpp 406: 
\CPP\PB\LIB\pb_lib.hpp 407: public:
\CPP\PB\LIB\pb_lib.hpp 408: _User      ();
\CPP\PB\LIB\pb_lib.hpp 409: 
\CPP\PB\LIB\pb_lib.hpp 410: static void setDir     ( char *dir )
\CPP\PB\LIB\pb_lib.hpp 411: {
\CPP\PB\LIB\pb_lib.hpp 412: sysDir = dir;
\CPP\PB\LIB\pb_lib.hpp 413: }
\CPP\PB\LIB\pb_lib.hpp 414: 
\CPP\PB\LIB\pb_lib.hpp 415: static long   numUsers();
\CPP\PB\LIB\pb_lib.hpp 416: static String findAlias(char *name);
\CPP\PB\LIB\pb_lib.hpp 417: 
\CPP\PB\LIB\pb_lib.hpp 418: void fromRa( RA2_UsersBBS & , RA2_UsersXiBBS & , RA2_UsersPbBBS &);
\CPP\PB\LIB\pb_lib.hpp 419: void   toRa( RA2_UsersBBS & , RA2_UsersXiBBS & , RA2_UsersPbBBS &);
\CPP\PB\LIB\pb_lib.hpp 420: 
\CPP\PB\LIB\pb_lib.hpp 421: bool         read       ( long recno );
\CPP\PB\LIB\pb_lib.hpp 422: bool         write      ( bool append );
\CPP\PB\LIB\pb_lib.hpp 423: bool         search     ( char *name , bool exact = TRUE , bool fuzzy = FALSE , bool alias = FALSE);
\CPP\PB\LIB\pb_lib.hpp 424: bool         searchNext ();
\CPP\PB\LIB\pb_lib.hpp 425: 
\CPP\PB\LIB\pb_lib.hpp 426: void         newUser    ();
\CPP\PB\LIB\pb_lib.hpp 427: 
\CPP\PB\LIB\pb_lib.hpp 428: String       firstName  ();
\CPP\PB\LIB\pb_lib.hpp 429: 
\CPP\PB\LIB\pb_lib.hpp 430: 
\CPP\PB\LIB\pb_lib.hpp 431: 
\CPP\PB\LIB\pb_lib.hpp 432: long         record;                
\CPP\PB\LIB\pb_lib.hpp 433: 
\CPP\PB\LIB\pb_lib.hpp 434: char         name[36];              
\CPP\PB\LIB\pb_lib.hpp 435: char         alias[36];             
\CPP\PB\LIB\pb_lib.hpp 436: char         passWord[16];          
\CPP\PB\LIB\pb_lib.hpp 437: dword        passWordCRC;
\CPP\PB\LIB\pb_lib.hpp 438: word         level;                 
\CPP\PB\LIB\pb_lib.hpp 439: char         country[26];           
\CPP\PB\LIB\pb_lib.hpp 440: char         state[26];             
\CPP\PB\LIB\pb_lib.hpp 441: char         city[26];              
\CPP\PB\LIB\pb_lib.hpp 442: char         company[51];           
\CPP\PB\LIB\pb_lib.hpp 443: 
\CPP\PB\LIB\pb_lib.hpp 444: char         address1[51];          
\CPP\PB\LIB\pb_lib.hpp 445: char         address2[51];          
\CPP\PB\LIB\pb_lib.hpp 446: char         address3[51];          
\CPP\PB\LIB\pb_lib.hpp 447: 
\CPP\PB\LIB\pb_lib.hpp 448: char         comment[81];           
\CPP\PB\LIB\pb_lib.hpp 449: char         forwardTo[36];         
\CPP\PB\LIB\pb_lib.hpp 450: 
\CPP\PB\LIB\pb_lib.hpp 451: Date         birthDate;             
\CPP\PB\LIB\pb_lib.hpp 452: 
\CPP\PB\LIB\pb_lib.hpp 453: char         voicePhone[16];        
\CPP\PB\LIB\pb_lib.hpp 454: char         dataPhone [16];        
\CPP\PB\LIB\pb_lib.hpp 455: char         faxPhone  [16];        
\CPP\PB\LIB\pb_lib.hpp 456: 
\CPP\PB\LIB\pb_lib.hpp 457: byte         sex;                   
\CPP\PB\LIB\pb_lib.hpp 458: byte         dateFormat;            
\CPP\PB\LIB\pb_lib.hpp 459: byte         defaultProtocol;       
\CPP\PB\LIB\pb_lib.hpp 460: char         language[9];           
\CPP\PB\LIB\pb_lib.hpp 461: word         screenWidth;           
\CPP\PB\LIB\pb_lib.hpp 462: word         screenLength;          
\CPP\PB\LIB\pb_lib.hpp 463: 
\CPP\PB\LIB\pb_lib.hpp 464: sdword       timeUsed;              
\CPP\PB\LIB\pb_lib.hpp 465: 
\CPP\PB\LIB\pb_lib.hpp 466: dword        timesCalled;           
\CPP\PB\LIB\pb_lib.hpp 467: dword        numDownloads;          
\CPP\PB\LIB\pb_lib.hpp 468: dword        kbDownloaded;          
\CPP\PB\LIB\pb_lib.hpp 469: dword        numUploads;            
\CPP\PB\LIB\pb_lib.hpp 470: dword        kbUploaded;            
\CPP\PB\LIB\pb_lib.hpp 471: dword        msgsPosted;            
\CPP\PB\LIB\pb_lib.hpp 472: 
\CPP\PB\LIB\pb_lib.hpp 473: Date         lastDate;              
\CPP\PB\LIB\pb_lib.hpp 474: Time         lastTime;              
\CPP\PB\LIB\pb_lib.hpp 475: Date         lastPwdChange;         
\CPP\PB\LIB\pb_lib.hpp 476: Date         lastNewFilesCheck;     
\CPP\PB\LIB\pb_lib.hpp 477: 
\CPP\PB\LIB\pb_lib.hpp 478: AccessFlags  aFlags;                
\CPP\PB\LIB\pb_lib.hpp 479: dword        uFlags;                
\CPP\PB\LIB\pb_lib.hpp 480: word         logLevel;              
\CPP\PB\LIB\pb_lib.hpp 481: 
\CPP\PB\LIB\pb_lib.hpp 482: CombinedType mailCheckBoards;       
\CPP\PB\LIB\pb_lib.hpp 483: CombinedType combinedBoards;        
\CPP\PB\LIB\pb_lib.hpp 484: 
\CPP\PB\LIB\pb_lib.hpp 485: dword        totalTimeUsed;         
\CPP\PB\LIB\pb_lib.hpp 486: 
\CPP\PB\LIB\pb_lib.hpp 487: Date         expDate;               
\CPP\PB\LIB\pb_lib.hpp 488: word         expLevel;              
\CPP\PB\LIB\pb_lib.hpp 489: AccessFlags  expFlagsOn;            
\CPP\PB\LIB\pb_lib.hpp 490: AccessFlags  expFlagsOff;           
\CPP\PB\LIB\pb_lib.hpp 491: 
\CPP\PB\LIB\pb_lib.hpp 492: Date         firstDate;             
\CPP\PB\LIB\pb_lib.hpp 493: long         kbToday;               
\CPP\PB\LIB\pb_lib.hpp 494: long         credit;                
\CPP\PB\LIB\pb_lib.hpp 495: long         pending;               
\CPP\PB\LIB\pb_lib.hpp 496: word         fileArea;              
\CPP\PB\LIB\pb_lib.hpp 497: word         msgArea;               
\CPP\PB\LIB\pb_lib.hpp 498: 
\CPP\PB\LIB\pb_lib.hpp 499: sword        tbTimeBalance;         
\CPP\PB\LIB\pb_lib.hpp 500: sword        tbKbBalance;           
\CPP\PB\LIB\pb_lib.hpp 501: sword        tbTimeWithdrawn;       
\CPP\PB\LIB\pb_lib.hpp 502: sword        tbKbWithdrawn;         
\CPP\PB\LIB\pb_lib.hpp 503: word         tbTimeDeposited;
\CPP\PB\LIB\pb_lib.hpp 504: word         tbKbDeposited;
\CPP\PB\LIB\pb_lib.hpp 505: word         tbTimeLoaned;
\CPP\PB\LIB\pb_lib.hpp 506: word         tbKbLoaned;
\CPP\PB\LIB\pb_lib.hpp 507: Date         tbLastUsed;            
\CPP\PB\LIB\pb_lib.hpp 508: 
\CPP\PB\LIB\pb_lib.hpp 509: AskType      checkMail;             
\CPP\PB\LIB\pb_lib.hpp 510: AskType      checkNewFiles;         
\CPP\PB\LIB\pb_lib.hpp 511: 
\CPP\PB\LIB\pb_lib.hpp 512: dword        highMsgRead;
\CPP\PB\LIB\pb_lib.hpp 513: 
\CPP\PB\LIB\pb_lib.hpp 514: word         qwkMaxMsgsPerArea;
\CPP\PB\LIB\pb_lib.hpp 515: word         qwkMaxMsgs;
\CPP\PB\LIB\pb_lib.hpp 516: byte         qwkArchiver;
\CPP\PB\LIB\pb_lib.hpp 517: byte         ripFont;
\CPP\PB\LIB\pb_lib.hpp 518: 
\CPP\PB\LIB\pb_lib.hpp 519: Date         tbTimePayback;
\CPP\PB\LIB\pb_lib.hpp 520: Date         tbKbPayback;
\CPP\PB\LIB\pb_lib.hpp 521: 
\CPP\PB\LIB\pb_lib.hpp 522: word         fileGroup;              
\CPP\PB\LIB\pb_lib.hpp 523: word         msgGroup;               
\CPP\PB\LIB\pb_lib.hpp 524: 
\CPP\PB\LIB\pb_lib.hpp 525: byte         extra[390];
\CPP\PB\LIB\pb_lib.hpp 526: };
\CPP\PB\LIB\pb_lib.hpp 527: 
\CPP\PB\LIB\pb_lib.hpp 528: struct _Config
\CPP\PB\LIB\pb_lib.hpp 529: {
\CPP\PB\LIB\pb_lib.hpp 530: char        shellmsg[81];         
\CPP\PB\LIB\pb_lib.hpp 531: char        sysopname[36];        
\CPP\PB\LIB\pb_lib.hpp 532: char        txtpath[61];          
\CPP\PB\LIB\pb_lib.hpp 533: char        mnupath[61];          
\CPP\PB\LIB\pb_lib.hpp 534: char        msgpath[61];          
\CPP\PB\LIB\pb_lib.hpp 535: char        uploadpath[61];       
\CPP\PB\LIB\pb_lib.hpp 536: char        editorname[61];       
\CPP\PB\LIB\pb_lib.hpp 537: word        newuserlevel;         
\CPP\PB\LIB\pb_lib.hpp 538: int         newuserloglevel;       
\CPP\PB\LIB\pb_lib.hpp 539: AccessFlags newuserflags;  
\CPP\PB\LIB\pb_lib.hpp 540: int         max_passinput;         
\CPP\PB\LIB\pb_lib.hpp 541: int         min_passlength;        
\CPP\PB\LIB\pb_lib.hpp 542: int         inactivity_time;       
\CPP\PB\LIB\pb_lib.hpp 543: int         max_sysop_pages;       
\CPP\PB\LIB\pb_lib.hpp 544: int         pagebell_length;       
\CPP\PB\LIB\pb_lib.hpp 545: int         mailcheck;             
\CPP\PB\LIB\pb_lib.hpp 546: int         europe;                
\CPP\PB\LIB\pb_lib.hpp 547: int         numnodes;              
\CPP\PB\LIB\pb_lib.hpp 548: bool        allowansi;             
\CPP\PB\LIB\pb_lib.hpp 549: bool        allowavatar;           
\CPP\PB\LIB\pb_lib.hpp 550: int         discrete;              
\CPP\PB\LIB\pb_lib.hpp 551: int         askvoicephone;         
\CPP\PB\LIB\pb_lib.hpp 552: int         allowoneword;          
\CPP\PB\LIB\pb_lib.hpp 553: unsigned    crashlevel;            
\CPP\PB\LIB\pb_lib.hpp 554: AccessFlags crashflags;            
\CPP\PB\LIB\pb_lib.hpp 555: unsigned    attachlevel;           
\CPP\PB\LIB\pb_lib.hpp 556: AccessFlags attachflags;           
\CPP\PB\LIB\pb_lib.hpp 557: int         allowmsgupload;        
\CPP\PB\LIB\pb_lib.hpp 558: int         allowstacking;         
\CPP\PB\LIB\pb_lib.hpp 559: Time        page_start;            
\CPP\PB\LIB\pb_lib.hpp 560: Time        page_end;              
\CPP\PB\LIB\pb_lib.hpp 561: int         handshaking;           
\CPP\PB\LIB\pb_lib.hpp 562: int         allowalias;            
\CPP\PB\LIB\pb_lib.hpp 563: int         loglocal;              
\CPP\PB\LIB\pb_lib.hpp 564: int         doswap;                
\CPP\PB\LIB\pb_lib.hpp 565: char        originline[61];        
\CPP\PB\LIB\pb_lib.hpp 566: char        nodelistdir[61];       
\CPP\PB\LIB\pb_lib.hpp 567: char        sysopkeys[10][60];     
\CPP\PB\LIB\pb_lib.hpp 568: Time        dl_start;              
\CPP\PB\LIB\pb_lib.hpp 569: Time        dl_end;                
\CPP\PB\LIB\pb_lib.hpp 570: int         uploadspace;           
\CPP\PB\LIB\pb_lib.hpp 571: char        pvtuploadpath[61];     
\CPP\PB\LIB\pb_lib.hpp 572: char        quotestring[6];        
\CPP\PB\LIB\pb_lib.hpp 573: int         fastmode;              
\CPP\PB\LIB\pb_lib.hpp 574: bool        killsent;              
\CPP\PB\LIB\pb_lib.hpp 575: bool        multiline;             
\CPP\PB\LIB\pb_lib.hpp 576: bool        egamode;               
\CPP\PB\LIB\pb_lib.hpp 577: bool        showuserinfo;          
\CPP\PB\LIB\pb_lib.hpp 578: char        pexpath[61];           
\CPP\PB\LIB\pb_lib.hpp 579: bool        allowquicklogin;       
\CPP\PB\LIB\pb_lib.hpp 580: bool        suspendmsgtime;        
\CPP\PB\LIB\pb_lib.hpp 581: int         securityboard;         
\CPP\PB\LIB\pb_lib.hpp 582: int         pwdmessages;           
\CPP\PB\LIB\pb_lib.hpp 583: char        bbsname[36];           
\CPP\PB\LIB\pb_lib.hpp 584: char        pwdchar;               
\CPP\PB\LIB\pb_lib.hpp 585: int         tb_maxtimedeposit;
\CPP\PB\LIB\pb_lib.hpp 586: int         tb_maxkbdeposit;
\CPP\PB\LIB\pb_lib.hpp 587: int         tb_maxtimewithdrawal;
\CPP\PB\LIB\pb_lib.hpp 588: int         tb_maxkbwithdrawal;
\CPP\PB\LIB\pb_lib.hpp 589: int         usage_days;            
\CPP\PB\LIB\pb_lib.hpp 590: char        systempwd[16];
\CPP\PB\LIB\pb_lib.hpp 591: bool        usesystempwd;
\CPP\PB\LIB\pb_lib.hpp 592: bool        askBirthDay;
\CPP\PB\LIB\pb_lib.hpp 593: int         binlogdays;
\CPP\PB\LIB\pb_lib.hpp 594: bool        binloglocal;
\CPP\PB\LIB\pb_lib.hpp 595: int         pageArea;
\CPP\PB\LIB\pb_lib.hpp 596: bool        indexfiles;
\CPP\PB\LIB\pb_lib.hpp 597: bool        checkdupes;
\CPP\PB\LIB\pb_lib.hpp 598: bool        killdupes;
\CPP\PB\LIB\pb_lib.hpp 599: bool        ignore_ext;
\CPP\PB\LIB\pb_lib.hpp 600: char        RIPpath[61];          
\CPP\PB\LIB\pb_lib.hpp 601: char        iconspath[61];
\CPP\PB\LIB\pb_lib.hpp 602: char        location[36];
\CPP\PB\LIB\pb_lib.hpp 603: char        phone[26];
\CPP\PB\LIB\pb_lib.hpp 604: char        QWKid[9];
\CPP\PB\LIB\pb_lib.hpp 605: word        IObuffersize;
\CPP\PB\LIB\pb_lib.hpp 606: TimeFrame   pagingHours;
\CPP\PB\LIB\pb_lib.hpp 607: char        defaultLanguage[9];
\CPP\PB\LIB\pb_lib.hpp 608: bool        addUploaderName;
\CPP\PB\LIB\pb_lib.hpp 609: TimeFrame   downloadHours;
\CPP\PB\LIB\pb_lib.hpp 610: bool        askdataphone;
\CPP\PB\LIB\pb_lib.hpp 611: bool        askfaxphone;
\CPP\PB\LIB\pb_lib.hpp 612: bool        askaddress;
\CPP\PB\LIB\pb_lib.hpp 613: bool        asksex;
\CPP\PB\LIB\pb_lib.hpp 614: bool        askdateformat;
\CPP\PB\LIB\pb_lib.hpp 615: bool        askstate;
\CPP\PB\LIB\pb_lib.hpp 616: bool        askcountry;
\CPP\PB\LIB\pb_lib.hpp 617: short       fuzzyRate;
\CPP\PB\LIB\pb_lib.hpp 618: bool        hidePassword;
\CPP\PB\LIB\pb_lib.hpp 619: bool        valConfirm;
\CPP\PB\LIB\pb_lib.hpp 620: 
\CPP\PB\LIB\pb_lib.hpp 621: char        dateStampSignature[10];
\CPP\PB\LIB\pb_lib.hpp 622: Date        dateStamp;
\CPP\PB\LIB\pb_lib.hpp 623: dword       dateStampCrc;
\CPP\PB\LIB\pb_lib.hpp 624: 
\CPP\PB\LIB\pb_lib.hpp 625: char        extChat[81];
\CPP\PB\LIB\pb_lib.hpp 626: char        virScanCommand[61];
\CPP\PB\LIB\pb_lib.hpp 627: byte        virScanType;
\CPP\PB\LIB\pb_lib.hpp 628: char        virScanSemaphore[13];
\CPP\PB\LIB\pb_lib.hpp 629: 
\CPP\PB\LIB\pb_lib.hpp 630: byte        listColorTag;
\CPP\PB\LIB\pb_lib.hpp 631: byte        listColorFileName;
\CPP\PB\LIB\pb_lib.hpp 632: byte        listColorSize;
\CPP\PB\LIB\pb_lib.hpp 633: byte        listColorDate;
\CPP\PB\LIB\pb_lib.hpp 634: byte        listColorCounter;
\CPP\PB\LIB\pb_lib.hpp 635: byte        listColorDesc;
\CPP\PB\LIB\pb_lib.hpp 636: byte        listColorSeperator;
\CPP\PB\LIB\pb_lib.hpp 637: byte        listColorMissing;
\CPP\PB\LIB\pb_lib.hpp 638: bool        hideFileCounter;
\CPP\PB\LIB\pb_lib.hpp 639: 
\CPP\PB\LIB\pb_lib.hpp 640: bool        disableRIP;
\CPP\PB\LIB\pb_lib.hpp 641: 
\CPP\PB\LIB\pb_lib.hpp 642: char        extMultiChat[81];
\CPP\PB\LIB\pb_lib.hpp 643: 
\CPP\PB\LIB\pb_lib.hpp 644: byte        virScanFailedAction;
\CPP\PB\LIB\pb_lib.hpp 645: word        virScanFailedArea;
\CPP\PB\LIB\pb_lib.hpp 646: 
\CPP\PB\LIB\pb_lib.hpp 647: byte        promptColor;
\CPP\PB\LIB\pb_lib.hpp 648: 
\CPP\PB\LIB\pb_lib.hpp 649: bool        internalfsed;
\CPP\PB\LIB\pb_lib.hpp 650: 
\CPP\PB\LIB\pb_lib.hpp 651: char        extra[3];
\CPP\PB\LIB\pb_lib.hpp 652: };
\CPP\PB\LIB\pb_lib.hpp 653: 
\CPP\PB\LIB\pb_lib.hpp 654: const byte VIRSCAN_ACTION_NONE   = 0;
\CPP\PB\LIB\pb_lib.hpp 655: const byte VIRSCAN_ACTION_MOVE   = 1;
\CPP\PB\LIB\pb_lib.hpp 656: const byte VIRSCAN_ACTION_DELETE = 2;
\CPP\PB\LIB\pb_lib.hpp 657: 
\CPP\PB\LIB\pb_lib.hpp 658: struct FilesIdx
\CPP\PB\LIB\pb_lib.hpp 659: {
\CPP\PB\LIB\pb_lib.hpp 660: char name[13];
\CPP\PB\LIB\pb_lib.hpp 661: word area;
\CPP\PB\LIB\pb_lib.hpp 662: };
\CPP\PB\LIB\pb_lib.hpp 663: 
\CPP\PB\LIB\pb_lib.hpp 664: struct _AreaGroup
\CPP\PB\LIB\pb_lib.hpp 665: {
\CPP\PB\LIB\pb_lib.hpp 666: char        name[80];
\CPP\PB\LIB\pb_lib.hpp 667: word        level;
\CPP\PB\LIB\pb_lib.hpp 668: AccessFlags flags;
\CPP\PB\LIB\pb_lib.hpp 669: AccessFlags flagsNot;
\CPP\PB\LIB\pb_lib.hpp 670: byte        extra[10];
\CPP\PB\LIB\pb_lib.hpp 671: };
\CPP\PB\LIB\pb_lib.hpp 672: 
\CPP\PB\LIB\pb_lib.hpp 673: struct _FileArea
\CPP\PB\LIB\pb_lib.hpp 674: {
\CPP\PB\LIB\pb_lib.hpp 675: char name[80];        
\CPP\PB\LIB\pb_lib.hpp 676: char listpath[80];    
\CPP\PB\LIB\pb_lib.hpp 677: char filepath[80];    
\CPP\PB\LIB\pb_lib.hpp 678: word level;           
\CPP\PB\LIB\pb_lib.hpp 679: AccessFlags flags;    
\CPP\PB\LIB\pb_lib.hpp 680: bool cdrom;           
\CPP\PB\LIB\pb_lib.hpp 681: int maxfiles;         
\CPP\PB\LIB\pb_lib.hpp 682: int maxkb;            
\CPP\PB\LIB\pb_lib.hpp 683: bool notops;          
\CPP\PB\LIB\pb_lib.hpp 684: bool free;            
\CPP\PB\LIB\pb_lib.hpp 685: byte groups[4];       
\CPP\PB\LIB\pb_lib.hpp 686: bool allGroups;       
\CPP\PB\LIB\pb_lib.hpp 687: byte minAge;          
\CPP\PB\LIB\pb_lib.hpp 688: AccessFlags flagsNot; 
\CPP\PB\LIB\pb_lib.hpp 689: byte dateFormat;
\CPP\PB\LIB\pb_lib.hpp 690: byte extra[2];
\CPP\PB\LIB\pb_lib.hpp 691: };
\CPP\PB\LIB\pb_lib.hpp 692: 
\CPP\PB\LIB\pb_lib.hpp 693: 
\CPP\PB\LIB\pb_lib.hpp 694: 
\CPP\PB\LIB\pb_lib.hpp 695: 
\CPP\PB\LIB\pb_lib.hpp 696: 
\CPP\PB\LIB\pb_lib.hpp 697: 
\CPP\PB\LIB\pb_lib.hpp 698: 
\CPP\PB\LIB\pb_lib.hpp 699: 
\CPP\PB\LIB\pb_lib.hpp 700: 
\CPP\PB\LIB\pb_lib.hpp 701: 
\CPP\PB\LIB\pb_lib.hpp 702: 
\CPP\PB\LIB\pb_lib.hpp 703: const byte MSGBASE_HUDSON = 0;
\CPP\PB\LIB\pb_lib.hpp 704: const byte MSGBASE_SQUISH = 1;
\CPP\PB\LIB\pb_lib.hpp 705: const byte MSGBASE_SDM    = 2;
\CPP\PB\LIB\pb_lib.hpp 706: const byte MSGBASE_JAM    = 3;
\CPP\PB\LIB\pb_lib.hpp 707: 
\CPP\PB\LIB\pb_lib.hpp 708: 
\CPP\PB\LIB\pb_lib.hpp 709: 
\CPP\PB\LIB\pb_lib.hpp 710: 
\CPP\PB\LIB\pb_lib.hpp 711: 
\CPP\PB\LIB\pb_lib.hpp 712: 
\CPP\PB\LIB\pb_lib.hpp 713: 
\CPP\PB\LIB\pb_lib.hpp 714: 
\CPP\PB\LIB\pb_lib.hpp 715: 
\CPP\PB\LIB\pb_lib.hpp 716: 
\CPP\PB\LIB\pb_lib.hpp 717: 
\CPP\PB\LIB\pb_lib.hpp 718: 
\CPP\PB\LIB\pb_lib.hpp 719: 
\CPP\PB\LIB\pb_lib.hpp 720: 
\CPP\PB\LIB\pb_lib.hpp 721: 
\CPP\PB\LIB\pb_lib.hpp 722: 
\CPP\PB\LIB\pb_lib.hpp 723: 
\CPP\PB\LIB\pb_lib.hpp 724: 
\CPP\PB\LIB\pb_lib.hpp 725: 
\CPP\PB\LIB\pb_lib.hpp 726: 
\CPP\PB\LIB\pb_lib.hpp 727: 
\CPP\PB\LIB\pb_lib.hpp 728: 
\CPP\PB\LIB\pb_lib.hpp 729: 
\CPP\PB\LIB\pb_lib.hpp 730: 
\CPP\PB\LIB\pb_lib.hpp 731: 
\CPP\PB\LIB\pb_lib.hpp 732: 
\CPP\PB\LIB\pb_lib.hpp 733: 
\CPP\PB\LIB\pb_lib.hpp 734: 
\CPP\PB\LIB\pb_lib.hpp 735: 
\CPP\PB\LIB\pb_lib.hpp 736: 
\CPP\PB\LIB\pb_lib.hpp 737: 
\CPP\PB\LIB\pb_lib.hpp 738: 
\CPP\PB\LIB\pb_lib.hpp 739: 
\CPP\PB\LIB\pb_lib.hpp 740: 
\CPP\PB\LIB\pb_lib.hpp 741: 
\CPP\PB\LIB\pb_lib.hpp 742: 
\CPP\PB\LIB\pb_lib.hpp 743: 
\CPP\PB\LIB\pb_lib.hpp 744: 
\CPP\PB\LIB\pb_lib.hpp 745: 
\CPP\PB\LIB\pb_lib.hpp 746: 
\CPP\PB\LIB\pb_lib.hpp 747: 
\CPP\PB\LIB\pb_lib.hpp 748: 
\CPP\PB\LIB\pb_lib.hpp 749: 
\CPP\PB\LIB\pb_lib.hpp 750: 
\CPP\PB\LIB\pb_lib.hpp 751: 
\CPP\PB\LIB\pb_lib.hpp 752: 
\CPP\PB\LIB\pb_lib.hpp 753: 
\CPP\PB\LIB\pb_lib.hpp 754: 
\CPP\PB\LIB\pb_lib.hpp 755: 
\CPP\PB\LIB\pb_lib.hpp 756: 
\CPP\PB\LIB\pb_lib.hpp 757: 
\CPP\PB\LIB\pb_lib.hpp 758: 
\CPP\PB\LIB\pb_lib.hpp 759: 
\CPP\PB\LIB\pb_lib.hpp 760: 
\CPP\PB\LIB\pb_lib.hpp 761: 
\CPP\PB\LIB\pb_lib.hpp 762: 
\CPP\PB\LIB\pb_lib.hpp 763: 
\CPP\PB\LIB\pb_lib.hpp 764: 
\CPP\PB\LIB\pb_lib.hpp 765: 
\CPP\PB\LIB\pb_lib.hpp 766: 
\CPP\PB\LIB\pb_lib.hpp 767: 
\CPP\PB\LIB\pb_lib.hpp 768: 
\CPP\PB\LIB\pb_lib.hpp 769: struct _MsgArea
\CPP\PB\LIB\pb_lib.hpp 770: {
\CPP\PB\LIB\pb_lib.hpp 771: word areaNum;              
\CPP\PB\LIB\pb_lib.hpp 772: word hudsonBase;           
\CPP\PB\LIB\pb_lib.hpp 773: char name[81];             
\CPP\PB\LIB\pb_lib.hpp 774: byte msgType;              
\CPP\PB\LIB\pb_lib.hpp 775: byte msgKind;              
\CPP\PB\LIB\pb_lib.hpp 776: byte msgBaseType;          
\CPP\PB\LIB\pb_lib.hpp 777: char path[81];             
\CPP\PB\LIB\pb_lib.hpp 778: byte flags;                
\CPP\PB\LIB\pb_lib.hpp 779: word readLevel;            
\CPP\PB\LIB\pb_lib.hpp 780: AccessFlags readFlags;     
\CPP\PB\LIB\pb_lib.hpp 781: AccessFlags readFlagsNot;  
\CPP\PB\LIB\pb_lib.hpp 782: word writeLevel;           
\CPP\PB\LIB\pb_lib.hpp 783: AccessFlags writeFlags;    
\CPP\PB\LIB\pb_lib.hpp 784: AccessFlags writeFlagsNot; 
\CPP\PB\LIB\pb_lib.hpp 785: word sysopLevel;           
\CPP\PB\LIB\pb_lib.hpp 786: AccessFlags sysopFlags;    
\CPP\PB\LIB\pb_lib.hpp 787: AccessFlags sysopFlagsNot; 
\CPP\PB\LIB\pb_lib.hpp 788: 
\CPP\PB\LIB\pb_lib.hpp 789: char origin[62];           
\CPP\PB\LIB\pb_lib.hpp 790: word aka;                  
\CPP\PB\LIB\pb_lib.hpp 791: 
\CPP\PB\LIB\pb_lib.hpp 792: word rcvKillDays;          
\CPP\PB\LIB\pb_lib.hpp 793: word msgKillDays;          
\CPP\PB\LIB\pb_lib.hpp 794: word maxMsgs;              
\CPP\PB\LIB\pb_lib.hpp 795: 
\CPP\PB\LIB\pb_lib.hpp 796: char sysop[36];            
\CPP\PB\LIB\pb_lib.hpp 797: word replyBoard;           
\CPP\PB\LIB\pb_lib.hpp 798: 
\CPP\PB\LIB\pb_lib.hpp 799: char tag[61];              
\CPP\PB\LIB\pb_lib.hpp 800: char qwkname[13];          
\CPP\PB\LIB\pb_lib.hpp 801: 
\CPP\PB\LIB\pb_lib.hpp 802: byte groups[4];            
\CPP\PB\LIB\pb_lib.hpp 803: bool allGroups;            
\CPP\PB\LIB\pb_lib.hpp 804: byte minAge;               
\CPP\PB\LIB\pb_lib.hpp 805: 
\CPP\PB\LIB\pb_lib.hpp 806: byte extra[112] ;          
\CPP\PB\LIB\pb_lib.hpp 807: };
\CPP\PB\LIB\pb_lib.hpp 808: 
\CPP\PB\LIB\pb_lib.hpp 809: 
\CPP\PB\LIB\pb_lib.hpp 810: struct _OldModemConfig
\CPP\PB\LIB\pb_lib.hpp 811: {
\CPP\PB\LIB\pb_lib.hpp 812: unsigned baud;
\CPP\PB\LIB\pb_lib.hpp 813: int port;
\CPP\PB\LIB\pb_lib.hpp 814: int quiet;
\CPP\PB\LIB\pb_lib.hpp 815: int blanktime;
\CPP\PB\LIB\pb_lib.hpp 816: char initstring[70];
\CPP\PB\LIB\pb_lib.hpp 817: char busystring[70];
\CPP\PB\LIB\pb_lib.hpp 818: char initok[40];
\CPP\PB\LIB\pb_lib.hpp 819: char busyok[40];
\CPP\PB\LIB\pb_lib.hpp 820: char connect300[40];
\CPP\PB\LIB\pb_lib.hpp 821: char connect1200[40];
\CPP\PB\LIB\pb_lib.hpp 822: char connect2400[40];
\CPP\PB\LIB\pb_lib.hpp 823: char connect4800[40];
\CPP\PB\LIB\pb_lib.hpp 824: char connect9600[40];
\CPP\PB\LIB\pb_lib.hpp 825: char connect19200[40];
\CPP\PB\LIB\pb_lib.hpp 826: char connect38400[40];
\CPP\PB\LIB\pb_lib.hpp 827: char ring[40];
\CPP\PB\LIB\pb_lib.hpp 828: char answer[40];
\CPP\PB\LIB\pb_lib.hpp 829: char connect7200[40];
\CPP\PB\LIB\pb_lib.hpp 830: char connect12000[40];
\CPP\PB\LIB\pb_lib.hpp 831: int forceanswer;
\CPP\PB\LIB\pb_lib.hpp 832: char extra2[4];
\CPP\PB\LIB\pb_lib.hpp 833: int delay;
\CPP\PB\LIB\pb_lib.hpp 834: char connect14400[40];
\CPP\PB\LIB\pb_lib.hpp 835: char initstring2[70];
\CPP\PB\LIB\pb_lib.hpp 836: char connect16800[40];
\CPP\PB\LIB\pb_lib.hpp 837: char connect28800[40];
\CPP\PB\LIB\pb_lib.hpp 838: char connect24000[40];
\CPP\PB\LIB\pb_lib.hpp 839: char connect64000[40];
\CPP\PB\LIB\pb_lib.hpp 840: int  ext_errlevel1;
\CPP\PB\LIB\pb_lib.hpp 841: int  ext_errlevel2;
\CPP\PB\LIB\pb_lib.hpp 842: byte extra[36];
\CPP\PB\LIB\pb_lib.hpp 843: };
\CPP\PB\LIB\pb_lib.hpp 844: 
\CPP\PB\LIB\pb_lib.hpp 845: const dword MODEM_LOCKED        = 0x00000001;
\CPP\PB\LIB\pb_lib.hpp 846: const dword MODEM_MANUAL_ANSWER = 0x00000002;
\CPP\PB\LIB\pb_lib.hpp 847: 
\CPP\PB\LIB\pb_lib.hpp 848: 
\CPP\PB\LIB\pb_lib.hpp 849: struct _ModemConfig
\CPP\PB\LIB\pb_lib.hpp 850: {
\CPP\PB\LIB\pb_lib.hpp 851: long  maxBps;
\CPP\PB\LIB\pb_lib.hpp 852: long  lockedBps;
\CPP\PB\LIB\pb_lib.hpp 853: dword flags;
\CPP\PB\LIB\pb_lib.hpp 854: int   port;
\CPP\PB\LIB\pb_lib.hpp 855: int   commandDelay;
\CPP\PB\LIB\pb_lib.hpp 856: int   answerDelay;
\CPP\PB\LIB\pb_lib.hpp 857: int   blankTime;
\CPP\PB\LIB\pb_lib.hpp 858: 
\CPP\PB\LIB\pb_lib.hpp 859: char  msgCon300       [80];
\CPP\PB\LIB\pb_lib.hpp 860: char  msgCon1200      [80];
\CPP\PB\LIB\pb_lib.hpp 861: char  msgCon1275      [80];
\CPP\PB\LIB\pb_lib.hpp 862: char  msgCon2400      [80];
\CPP\PB\LIB\pb_lib.hpp 863: char  msgCon4800      [80];
\CPP\PB\LIB\pb_lib.hpp 864: char  msgCon7200      [80];
\CPP\PB\LIB\pb_lib.hpp 865: char  msgCon9600      [80];
\CPP\PB\LIB\pb_lib.hpp 866: char  msgCon12000     [80];
\CPP\PB\LIB\pb_lib.hpp 867: char  msgCon14400     [80];
\CPP\PB\LIB\pb_lib.hpp 868: char  msgCon16800     [80];
\CPP\PB\LIB\pb_lib.hpp 869: char  msgCon19200     [80];
\CPP\PB\LIB\pb_lib.hpp 870: char  msgCon21600     [80];
\CPP\PB\LIB\pb_lib.hpp 871: char  msgCon24000     [80];
\CPP\PB\LIB\pb_lib.hpp 872: char  msgCon26400     [80];
\CPP\PB\LIB\pb_lib.hpp 873: char  msgCon28800     [80];
\CPP\PB\LIB\pb_lib.hpp 874: char  msgCon38400     [80];
\CPP\PB\LIB\pb_lib.hpp 875: char  msgCon57600     [80];
\CPP\PB\LIB\pb_lib.hpp 876: char  msgCon64000     [80];
\CPP\PB\LIB\pb_lib.hpp 877: char  msgCon115200    [80];
\CPP\PB\LIB\pb_lib.hpp 878: 
\CPP\PB\LIB\pb_lib.hpp 879: char  msgConExternal  [80];
\CPP\PB\LIB\pb_lib.hpp 880: 
\CPP\PB\LIB\pb_lib.hpp 881: char  msgRing         [80];
\CPP\PB\LIB\pb_lib.hpp 882: char  msgOk           [80];
\CPP\PB\LIB\pb_lib.hpp 883: 
\CPP\PB\LIB\pb_lib.hpp 884: char  cmdInit1        [80];
\CPP\PB\LIB\pb_lib.hpp 885: char  cmdInit2        [80];
\CPP\PB\LIB\pb_lib.hpp 886: char  cmdInit3        [80];
\CPP\PB\LIB\pb_lib.hpp 887: char  cmdAnswer       [80];
\CPP\PB\LIB\pb_lib.hpp 888: char  cmdOffHook      [80];
\CPP\PB\LIB\pb_lib.hpp 889: char  cmdDown         [80];
\CPP\PB\LIB\pb_lib.hpp 890: char  cmdAttention    [80];
\CPP\PB\LIB\pb_lib.hpp 891: 
\CPP\PB\LIB\pb_lib.hpp 892: int   externalErrorLevel;
\CPP\PB\LIB\pb_lib.hpp 893: 
\CPP\PB\LIB\pb_lib.hpp 894: char  msgCon31200     [80];
\CPP\PB\LIB\pb_lib.hpp 895: char  msgCon33600     [80];
\CPP\PB\LIB\pb_lib.hpp 896: char  msgCon36000     [80];
\CPP\PB\LIB\pb_lib.hpp 897: 
\CPP\PB\LIB\pb_lib.hpp 898: char  msgConUser1     [80];
\CPP\PB\LIB\pb_lib.hpp 899: long  userConBps1;
\CPP\PB\LIB\pb_lib.hpp 900: char  msgConUser2     [80];
\CPP\PB\LIB\pb_lib.hpp 901: long  userConBps2;
\CPP\PB\LIB\pb_lib.hpp 902: char  msgConUser3     [80];
\CPP\PB\LIB\pb_lib.hpp 903: long  userConBps3;
\CPP\PB\LIB\pb_lib.hpp 904: char  msgConUser4     [80];
\CPP\PB\LIB\pb_lib.hpp 905: long  userConBps4;
\CPP\PB\LIB\pb_lib.hpp 906: char  msgConUser5     [80];
\CPP\PB\LIB\pb_lib.hpp 907: long  userConBps5;
\CPP\PB\LIB\pb_lib.hpp 908: char  msgConUser6     [80];
\CPP\PB\LIB\pb_lib.hpp 909: long  userConBps6;
\CPP\PB\LIB\pb_lib.hpp 910: 
\CPP\PB\LIB\pb_lib.hpp 911: byte  extra[920];
\CPP\PB\LIB\pb_lib.hpp 912: };
\CPP\PB\LIB\pb_lib.hpp 913: 
\CPP\PB\LIB\pb_lib.hpp 914: 
\CPP\PB\LIB\pb_lib.hpp 915: struct _TimeLog
\CPP\PB\LIB\pb_lib.hpp 916: {
\CPP\PB\LIB\pb_lib.hpp 917: int numdays;
\CPP\PB\LIB\pb_lib.hpp 918: Date lastdate;
\CPP\PB\LIB\pb_lib.hpp 919: long hours[24];
\CPP\PB\LIB\pb_lib.hpp 920: long days[7];
\CPP\PB\LIB\pb_lib.hpp 921: long weeks[53];
\CPP\PB\LIB\pb_lib.hpp 922: long totalcalls;
\CPP\PB\LIB\pb_lib.hpp 923: int  daysactive;
\CPP\PB\LIB\pb_lib.hpp 924: byte extra[100];
\CPP\PB\LIB\pb_lib.hpp 925: };
\CPP\PB\LIB\pb_lib.hpp 926: 
\CPP\PB\LIB\pb_lib.hpp 927: struct _AccessEvent
\CPP\PB\LIB\pb_lib.hpp 928: {
\CPP\PB\LIB\pb_lib.hpp 929: bool        hoursActive[48];
\CPP\PB\LIB\pb_lib.hpp 930: bool        daysActive[7];
\CPP\PB\LIB\pb_lib.hpp 931: 
\CPP\PB\LIB\pb_lib.hpp 932: word        minLevel;
\CPP\PB\LIB\pb_lib.hpp 933: AccessFlags flagsNeeded;
\CPP\PB\LIB\pb_lib.hpp 934: 
\CPP\PB\LIB\pb_lib.hpp 935: int         downloadPercent;
\CPP\PB\LIB\pb_lib.hpp 936: word        downloadPercent_ol;
\CPP\PB\LIB\pb_lib.hpp 937: AccessFlags downloadPercent_of;
\CPP\PB\LIB\pb_lib.hpp 938: 
\CPP\PB\LIB\pb_lib.hpp 939: int         downloadLimit;
\CPP\PB\LIB\pb_lib.hpp 940: word        downloadLimit_ol;
\CPP\PB\LIB\pb_lib.hpp 941: AccessFlags downloadLimit_of;
\CPP\PB\LIB\pb_lib.hpp 942: 
\CPP\PB\LIB\pb_lib.hpp 943: int         timePercent;
\CPP\PB\LIB\pb_lib.hpp 944: word        timePercent_ol;
\CPP\PB\LIB\pb_lib.hpp 945: AccessFlags timePercent_of;
\CPP\PB\LIB\pb_lib.hpp 946: 
\CPP\PB\LIB\pb_lib.hpp 947: int         timeLimit;
\CPP\PB\LIB\pb_lib.hpp 948: word        timeLimit_ol;
\CPP\PB\LIB\pb_lib.hpp 949: AccessFlags timeLimit_of;
\CPP\PB\LIB\pb_lib.hpp 950: 
\CPP\PB\LIB\pb_lib.hpp 951: bool        allowYell;
\CPP\PB\LIB\pb_lib.hpp 952: word        allowYell_ol;
\CPP\PB\LIB\pb_lib.hpp 953: AccessFlags allowYell_of;
\CPP\PB\LIB\pb_lib.hpp 954: 
\CPP\PB\LIB\pb_lib.hpp 955: byte        extra[106];   
\CPP\PB\LIB\pb_lib.hpp 956: };
\CPP\PB\LIB\pb_lib.hpp 957: 
\CPP\PB\LIB\pb_lib.hpp 958: 
\CPP\PB\LIB\pb_lib.hpp 959: 
\CPP\PB\LIB\pb_lib.hpp 960: 
\CPP\PB\LIB\pb_lib.hpp 961: 
\CPP\PB\LIB\pb_lib.hpp 962: 
\CPP\PB\LIB\pb_lib.hpp 963: 
\CPP\PB\LIB\pb_lib.hpp 964: 
\CPP\PB\LIB\pb_lib.hpp 965: 
\CPP\PB\LIB\pb_lib.hpp 966: 
\CPP\PB\LIB\pb_lib.hpp 967: struct _QbbsMsgHdr
\CPP\PB\LIB\pb_lib.hpp 968: {
\CPP\PB\LIB\pb_lib.hpp 969: int  msgnum;
\CPP\PB\LIB\pb_lib.hpp 970: int  prevmsg;
\CPP\PB\LIB\pb_lib.hpp 971: int  nextmsg;
\CPP\PB\LIB\pb_lib.hpp 972: int  tread;
\CPP\PB\LIB\pb_lib.hpp 973: word startrec;
\CPP\PB\LIB\pb_lib.hpp 974: int  numrecs;
\CPP\PB\LIB\pb_lib.hpp 975: int  destnet,destnode,orgnet,orgnode;
\CPP\PB\LIB\pb_lib.hpp 976: char destzone,orgzone;
\CPP\PB\LIB\pb_lib.hpp 977: int  cost;
\CPP\PB\LIB\pb_lib.hpp 978: byte msgattr,netattr,area;
\CPP\PB\LIB\pb_lib.hpp 979: char posttime[6];
\CPP\PB\LIB\pb_lib.hpp 980: char postdate[9];
\CPP\PB\LIB\pb_lib.hpp 981: char to[36];
\CPP\PB\LIB\pb_lib.hpp 982: char from[36];
\CPP\PB\LIB\pb_lib.hpp 983: char subj[67];
\CPP\PB\LIB\pb_lib.hpp 984: Date recvdate;
\CPP\PB\LIB\pb_lib.hpp 985: Time recvtime;
\CPP\PB\LIB\pb_lib.hpp 986: 
\CPP\PB\LIB\pb_lib.hpp 987: bool fix();      
\CPP\PB\LIB\pb_lib.hpp 988: };
\CPP\PB\LIB\pb_lib.hpp 989: 
\CPP\PB\LIB\pb_lib.hpp 990: struct LanguageFile
\CPP\PB\LIB\pb_lib.hpp 991: {
\CPP\PB\LIB\pb_lib.hpp 992: char name[41];
\CPP\PB\LIB\pb_lib.hpp 993: bool avail;
\CPP\PB\LIB\pb_lib.hpp 994: word level;
\CPP\PB\LIB\pb_lib.hpp 995: AccessFlags flags;
\CPP\PB\LIB\pb_lib.hpp 996: char menuPath[61];
\CPP\PB\LIB\pb_lib.hpp 997: char txtPath[61];
\CPP\PB\LIB\pb_lib.hpp 998: char questPath[61];
\CPP\PB\LIB\pb_lib.hpp 999: char copyright[81];
\CPP\PB\LIB\pb_lib.hpp 1000: byte attrib;
\CPP\PB\LIB\pb_lib.hpp 1001: byte extra[500];
\CPP\PB\LIB\pb_lib.hpp 1002: };
\CPP\PB\LIB\pb_lib.hpp 1003: 
\CPP\PB\LIB\pb_lib.hpp 1004: const byte LANG_PROMPT  = 0x01;
\CPP\PB\LIB\pb_lib.hpp 1005: const byte LANG_NOCOLOR = 0x02;
\CPP\PB\LIB\pb_lib.hpp 1006: 
\CPP\PB\LIB\pb_lib.hpp 1007: struct _LanguageString
\CPP\PB\LIB\pb_lib.hpp 1008: {
\CPP\PB\LIB\pb_lib.hpp 1009: word len;               
\CPP\PB\LIB\pb_lib.hpp 1010: word numHotkeys;        
\CPP\PB\LIB\pb_lib.hpp 1011: byte color;             
\CPP\PB\LIB\pb_lib.hpp 1012: byte highlight;         
\CPP\PB\LIB\pb_lib.hpp 1013: byte promptcolor;       
\CPP\PB\LIB\pb_lib.hpp 1014: byte flags;             
\CPP\PB\LIB\pb_lib.hpp 1015: char *s;                
\CPP\PB\LIB\pb_lib.hpp 1016: char *hotkeys;          
\CPP\PB\LIB\pb_lib.hpp 1017: 
\CPP\PB\LIB\pb_lib.hpp 1018: _LanguageString();
\CPP\PB\LIB\pb_lib.hpp 1019: _LanguageString( const _LanguageString& );
\CPP\PB\LIB\pb_lib.hpp 1020: _LanguageString( char *s , char *hotkeys , byte color , byte highlight , byte flags = 0x00, byte promptcolor = 0x00);
\CPP\PB\LIB\pb_lib.hpp 1021: 
\CPP\PB\LIB\pb_lib.hpp 1022: ~_LanguageString();
\CPP\PB\LIB\pb_lib.hpp 1023: 
\CPP\PB\LIB\pb_lib.hpp 1024: bool read( File& );
\CPP\PB\LIB\pb_lib.hpp 1025: bool write( File& );
\CPP\PB\LIB\pb_lib.hpp 1026: void operator=( const _LanguageString& );
\CPP\PB\LIB\pb_lib.hpp 1027: void clear();
\CPP\PB\LIB\pb_lib.hpp 1028: };
\CPP\PB\LIB\pb_lib.hpp 1029: 
\CPP\PB\LIB\pb_lib.hpp 1030: const dword MENU_RIP = 1;
\CPP\PB\LIB\pb_lib.hpp 1031: 
\CPP\PB\LIB\pb_lib.hpp 1032: const dword MENU_RIP_SHOWREMOTE = 1;
\CPP\PB\LIB\pb_lib.hpp 1033: const dword MENU_RIP_HIDELOCAL  = 2;
\CPP\PB\LIB\pb_lib.hpp 1034: const dword MENU_RIP_NO_RESET   = 4;
\CPP\PB\LIB\pb_lib.hpp 1035: const dword MENU_PASSWORD       = 8;
\CPP\PB\LIB\pb_lib.hpp 1036: 
\CPP\PB\LIB\pb_lib.hpp 1037: struct _MenuFile
\CPP\PB\LIB\pb_lib.hpp 1038: {
\CPP\PB\LIB\pb_lib.hpp 1039: dword attr;   
\CPP\PB\LIB\pb_lib.hpp 1040: char prompt[200];
\CPP\PB\LIB\pb_lib.hpp 1041: byte color;
\CPP\PB\LIB\pb_lib.hpp 1042: byte highlight;
\CPP\PB\LIB\pb_lib.hpp 1043: char RIPname[9];
\CPP\PB\LIB\pb_lib.hpp 1044: byte extra[100];
\CPP\PB\LIB\pb_lib.hpp 1045: };
\CPP\PB\LIB\pb_lib.hpp 1046: 
\CPP\PB\LIB\pb_lib.hpp 1047: struct _MenuItem
\CPP\PB\LIB\pb_lib.hpp 1048: {
\CPP\PB\LIB\pb_lib.hpp 1049: dword attr;     
\CPP\PB\LIB\pb_lib.hpp 1050: char text[160];
\CPP\PB\LIB\pb_lib.hpp 1051: char data[160];
\CPP\PB\LIB\pb_lib.hpp 1052: byte color;
\CPP\PB\LIB\pb_lib.hpp 1053: byte hotKey;
\CPP\PB\LIB\pb_lib.hpp 1054: word function;
\CPP\PB\LIB\pb_lib.hpp 1055: char password[16];
\CPP\PB\LIB\pb_lib.hpp 1056: 
\CPP\PB\LIB\pb_lib.hpp 1057: AccessRecord access;
\CPP\PB\LIB\pb_lib.hpp 1058: 
\CPP\PB\LIB\pb_lib.hpp 1059: byte extra[50];
\CPP\PB\LIB\pb_lib.hpp 1060: };
\CPP\PB\LIB\pb_lib.hpp 1061: 
\CPP\PB\LIB\pb_lib.hpp 1062: 
\CPP\PB\LIB\pb_lib.hpp 1063: const dword PVTFILE_KEEP = 0x00000001uL;
\CPP\PB\LIB\pb_lib.hpp 1064: 
\CPP\PB\LIB\pb_lib.hpp 1065: struct _PrivateFile
\CPP\PB\LIB\pb_lib.hpp 1066: {
\CPP\PB\LIB\pb_lib.hpp 1067: Date date;
\CPP\PB\LIB\pb_lib.hpp 1068: char fname  [80];
\CPP\PB\LIB\pb_lib.hpp 1069: char to     [36];
\CPP\PB\LIB\pb_lib.hpp 1070: char from   [36];
\CPP\PB\LIB\pb_lib.hpp 1071: char desc   [80];
\CPP\PB\LIB\pb_lib.hpp 1072: 
\CPP\PB\LIB\pb_lib.hpp 1073: dword attr;
\CPP\PB\LIB\pb_lib.hpp 1074: 
\CPP\PB\LIB\pb_lib.hpp 1075: byte extra  [61];
\CPP\PB\LIB\pb_lib.hpp 1076: };
\CPP\PB\LIB\pb_lib.hpp 1077: 
\CPP\PB\LIB\pb_lib.hpp 1078: String parse_lang(char *fmt , ...);
\CPP\PB\LIB\pb_lib.hpp 1079: 
\CPP\PB\LIB\pb_lib.hpp 1080: void getsyspath(char *syspath,char *argv0);
\CPP\PB\LIB\pb_lib.hpp 1081: dword RA_CRC(char *s);
\CPP\PB\LIB\pb_lib.hpp 1082: dword RaCrc(char *s);
\CPP\PB\LIB\pb_lib.hpp 1083: dword JamCrc(char *s);
\CPP\PB\LIB\pb_lib.hpp 1084: 
\CPP\PB\LIB\pb_lib.hpp 1085: 
procfg.hpp 29: 
procfg.hpp 30: 
procfg.hpp 31: 
procfg.hpp 32: 
procfg.hpp 33: 
procfg.hpp 34: 
procfg.hpp 35: 
procfg.hpp 36: 
procfg.hpp 37: 
procfg.hpp 38: 
procfg.hpp 39: 
procfg.hpp 40: 
procfg.hpp 41: 
procfg.hpp 42: 
procfg.hpp 43: 
procfg.hpp 44: 
procfg.hpp 45: 
procfg.hpp 46: 
procfg.hpp 47: 
procfg.hpp 48: 
procfg.hpp 49: 
procfg.hpp 50: 
procfg.hpp 51: 
procfg.hpp 52: 
procfg.hpp 53: 
procfg.hpp 54: 
procfg.hpp 55: 
procfg.hpp 56: 
procfg.hpp 57: 
procfg.hpp 58: 
procfg.hpp 59: 
procfg.hpp 60: 
procfg.hpp 61: struct filearea     : _FileArea      {};
procfg.hpp 62: struct Config       : _Config        {};
procfg.hpp 63: struct pbconfig     : _ModemConfig   {};
procfg.hpp 64: 
procfg.hpp 65: 
procfg.hpp 66: 
procfg.hpp 67: struct aka
procfg.hpp 68: {
procfg.hpp 69: int zone;
procfg.hpp 70: int net;
procfg.hpp 71: int node;
procfg.hpp 72: int point;
procfg.hpp 73: };
procfg.hpp 74: 
procfg.hpp 75: 
procfg.hpp 76: 
procfg.hpp 77: struct protocol
procfg.hpp 78: {
procfg.hpp 79: char name[50];                      
procfg.hpp 80: char key;                           
procfg.hpp 81: char flags;                         
procfg.hpp 82: char logfile[60];                   
procfg.hpp 83: char ctlfile[60];                   
procfg.hpp 84: char dlcom[126];                    
procfg.hpp 85: unsigned eff;
procfg.hpp 86: char ulcom[128];                    
procfg.hpp 87: char dlstring[80];                  
procfg.hpp 88: char ulstring[80];                  
procfg.hpp 89: char dlkeyword[40];                 
procfg.hpp 90: char ulkeyword[40];                 
procfg.hpp 91: int wordnr;                         
procfg.hpp 92: };
procfg.hpp 93: 
procfg.hpp 94: 
procfg.hpp 95: 
procfg.hpp 96: struct limits
procfg.hpp 97: {
procfg.hpp 98: unsigned level;
procfg.hpp 99: int timelimit;
procfg.hpp 100: int daily_klimit;
procfg.hpp 101: int pre_download;
procfg.hpp 102: char id[6];
procfg.hpp 103: unsigned      free;                 
procfg.hpp 104: unsigned char factor;               
procfg.hpp 105: unsigned      max_download;         
procfg.hpp 106: int           fallto;               
procfg.hpp 107: int           msgfactor;            
procfg.hpp 108: byte extra[5];
procfg.hpp 109: };
procfg.hpp 110: 
procfg.hpp 111: 
procfg.hpp 112: 
procfg.hpp 113: struct topentry
procfg.hpp 114: {
procfg.hpp 115: char name[36];
procfg.hpp 116: unsigned n;
procfg.hpp 117: };
procfg.hpp 118: 
procfg.hpp 119: 
procfg.hpp 120: 
procfg.hpp 121: 
procfg.hpp 122: struct event
procfg.hpp 123: {
procfg.hpp 124: int type;             
procfg.hpp 125: int errorlevel;       
procfg.hpp 126: char command[80];     
procfg.hpp 127: Time start;           
procfg.hpp 128: int duration;         
procfg.hpp 129: byte empty;
procfg.hpp 130: byte days;            
procfg.hpp 131: byte node;            
procfg.hpp 132: byte enabled;         
procfg.hpp 133: };
procfg.hpp 134: 
procfg.hpp 135: 
procfg.hpp 136: 
procfg.hpp 137: struct pvt_file
procfg.hpp 138: {
procfg.hpp 139: Date date;
procfg.hpp 140: char fname[13];
procfg.hpp 141: char username[36];
procfg.hpp 142: char from[36];
procfg.hpp 143: };
procfg.hpp 144: 
procfg.hpp 145: 
procfg.hpp 146: 
procfg.hpp 147: struct User : _User
procfg.hpp 148: {
procfg.hpp 149: };
procfg.hpp 150: 
procfg.hpp 151: 
procfg.hpp 152: 
procfg.hpp 153: int   ask_save          (                                               );
procfg.hpp 154: int   ask_confirm       (  char *title                                  );
procfg.hpp 155: KEY   aka_select        (  int, Window&, int, int ,char, void*          );
procfg.hpp 156: void  aka_select_func   (  int i,int x,int y                            );
procfg.hpp 157: void  append_backspace  (  char *                                       );
procfg.hpp 158: 
procfg.hpp 159: void  editPvtFile       (                                               );
procfg.hpp 160: void  editSysParam      (                                               );
procfg.hpp 161: void  editTemplate      (  char *sysPath                                );
procfg.hpp 162: void  editUser          (  char *syspath, int, char *[]                 );
procfg.hpp 163: 
procfg.hpp 164: void  edit_akas         (                                               );
procfg.hpp 165: KEY   edit_color        (  int, Window&, int, int ,char, void*          );
procfg.hpp 166: void  edit_events       (                                               );
procfg.hpp 167: void  edit_fgroups      (                                               );
procfg.hpp 168: void  edit_mgroups      (                                               );
procfg.hpp 169: void  edit_language     (  char *                                       );
procfg.hpp 170: void  edit_limits       (                                               );
procfg.hpp 171: void  edit_macros       (                                               );
procfg.hpp 172: void  edit_menu         (  char *                                       );
procfg.hpp 173: void  edit_areas        (  int fa                                       );
procfg.hpp 174: void  edit_pb           (                                               );
procfg.hpp 175: void  edit_protocol     (                                               );
procfg.hpp 176: void  edit_stats        (                                               );
procfg.hpp 177: KEY   edit_timeframe    (  int, Window&, int, int ,char, void*          );
procfg.hpp 178: KEY   edit_nodes        (  int, Window& ,int ,int ,char, void*          );
procfg.hpp 179: void  EditListColors    (                                               );
procfg.hpp 180: KEY   flag_select       (  int, Window&, int, int ,char, void*          );
procfg.hpp 181: KEY   flagonoff_select  (  int, Window&, int, int ,char, void*          );
procfg.hpp 182: void  menu_editor       (  int, char *[]                                );
procfg.hpp 183: String select_language   (  bool edit                                    );
procfg.hpp 184: void  show_flags        (                                               );
procfg.hpp 185: void  showAbout         (                                               );
procfg.hpp 186: 
procfg.hpp 187: void ShowBusy(char *msg);
procfg.hpp 188: void HideBusy();
procfg.hpp 189: 
procfg.hpp 190: 
procfg.hpp 191: 
procfg.hpp 192: 
procfg.hpp 193: extern protocol      *p;
procfg.hpp 194: extern Config        __far cfg;
procfg.hpp 195: extern pbconfig      __far pbcfg;
procfg.hpp 196: extern limits        *limit;
procfg.hpp 197: extern aka           *akas;
procfg.hpp 198: extern event         *events;
procfg.hpp 199: 
procfg.hpp 200: extern int           num_proto;
procfg.hpp 201: extern int           num_msgareas;
procfg.hpp 202: extern int           num_limits;
procfg.hpp 203: extern int           num_aka;
procfg.hpp 204: extern int           num_events;
procfg.hpp 205: 
procfg.hpp 206: extern KEY           select_hotkeys[];
procfg.hpp 207: extern char          *loglevels[];
procfg.hpp 208: extern char          *months_short[];
procfg.hpp 209: extern char          *days_short[];
procfg.hpp 210: extern char          *yesnoask[];
procfg.hpp 211: extern char          syspath[];
procfg.hpp 212: 
procfg.hpp 213: void KeyItem( Window &w,
procfg.hpp 214: int     x,
procfg.hpp 215: int     y,
procfg.hpp 216: ATTR    iKeyColor,
procfg.hpp 217: char   *pKey,
procfg.hpp 218: ATTR    iDescColor,
procfg.hpp 219: char   *pDesc );
procfg.hpp 220: 
procfg.hpp 221: 
procfg.hpp 222: 
procfg.hpp 223: 
procfg.hpp 224: 
editstat.cpp 3: 
editstat.cpp 4: void edit_hourly();
editstat.cpp 5: void edit_weekly();
editstat.cpp 6: 
editstat.cpp 7: void
editstat.cpp 8: edit_stats()
editstat.cpp 9: {
editstat.cpp 10: menu_item mi[] = {
editstat.cpp 11: { 'H' , 2,2, " Hourly Usage" },
editstat.cpp 12: 
editstat.cpp 13: { 'W' , 2,2, " Weekly Usage" },
editstat.cpp 14: { 0   , 0,0, 0            }
editstat.cpp 15: };
editstat.cpp 16: PopMenu pm(mi,0x70,0x5E);
editstat.cpp 17: pm.open(40,18,65,22,0x5F,1);
editstat.cpp 18: pm.title(" Edit Statistics ");
editstat.cpp 19: 
editstat.cpp 20: for(;;)
editstat.cpp 21: {
editstat.cpp 22: int item = pm.process();
editstat.cpp 23: switch(item)
editstat.cpp 24: {
editstat.cpp 25: case  1: edit_hourly(); break;
editstat.cpp 26: 
editstat.cpp 27: case  2: edit_weekly(); break;
editstat.cpp 28: default: return;
editstat.cpp 29: }
editstat.cpp 30: }
editstat.cpp 31: }
editstat.cpp 32: 
editstat.cpp 33: struct timelog
editstat.cpp 34: {
editstat.cpp 35: int numdays;
editstat.cpp 36: Date lastdate;
editstat.cpp 37: long hours[24];
editstat.cpp 38: long days[7];
editstat.cpp 39: long weeks[53];
editstat.cpp 40: long totalcalls;
editstat.cpp 41: int  daysactive;
editstat.cpp 42: byte extra[100];
editstat.cpp 43: };
editstat.cpp 44: 
editstat.cpp 45: static timelog tl;
editstat.cpp 46: 
editstat.cpp 47: static int
editstat.cpp 48: read_timelog()
editstat.cpp 49: {
editstat.cpp 50: File f;
editstat.cpp 51: 
editstat.cpp 52: if(!f.open(FileName(syspath,"TIMELOG.PRO"),fmode_read)) return -1;
editstat.cpp 53: 
editstat.cpp 54: f.read(&tl,sizeof(tl));
editstat.cpp 55: 
editstat.cpp 56: return 0;
editstat.cpp 57: }
editstat.cpp 58: 
editstat.cpp 59: static void
editstat.cpp 60: write_timelog()
editstat.cpp 61: {
editstat.cpp 62: File f;
editstat.cpp 63: 
editstat.cpp 64: f.open(FileName(syspath,"TIMELOG.PRO"),fmode_create);
editstat.cpp 65: 
editstat.cpp 66: f.write(&tl,sizeof(tl));
editstat.cpp 67: }
editstat.cpp 68: 
editstat.cpp 69: 
editstat.cpp 70: void
editstat.cpp 71: edit_hourly()
editstat.cpp 72: {
editstat.cpp 73: if(read_timelog()<0)
editstat.cpp 74: {
editstat.cpp 75: tsw_beep();
editstat.cpp 76: return;
editstat.cpp 77: }
editstat.cpp 78: 
editstat.cpp 79: Field fld[] = {
editstat.cpp 80: { 6, &tl.hours[0]   , 0,0 , 0         , 7  , 8 , 16,2  },
editstat.cpp 81: { 6, &tl.hours[1]   , 0,0 , 0         , 7  , 8 , 16,3  },
editstat.cpp 82: { 6, &tl.hours[2]   , 0,0 , 0         , 7  , 8 , 16,4  },
editstat.cpp 83: { 6, &tl.hours[3]   , 0,0 , 0         , 7  , 8 , 16,5  },
editstat.cpp 84: { 6, &tl.hours[4]   , 0,0 , 0         , 7  , 8 , 16,6  },
editstat.cpp 85: { 6, &tl.hours[5]   , 0,0 , 0         , 7  , 8 , 16,7  },
editstat.cpp 86: { 6, &tl.hours[6]   , 0,0 , 0         , 7  , 8 , 16,8  },
editstat.cpp 87: { 6, &tl.hours[7]   , 0,0 , 0         , 7  , 8 , 16,9  },
editstat.cpp 88: { 6, &tl.hours[8]   , 0,0 , 0         , 7  , 8 , 16,10 },
editstat.cpp 89: { 6, &tl.hours[9]   , 0,0 , 0         , 7  , 8 , 16,11 },
editstat.cpp 90: { 6, &tl.hours[10]  , 0,0 , 0         , 7  , 8 , 16,12 },
editstat.cpp 91: { 6, &tl.hours[11]  , 0,0 , 0         , 7  , 8 , 16,13 },
editstat.cpp 92: { 6, &tl.hours[12]  , 0,0 , 0         , 7  , 8 , 41,2  },
editstat.cpp 93: { 6, &tl.hours[13]  , 0,0 , 0         , 7  , 8 , 41,3  },
editstat.cpp 94: { 6, &tl.hours[14]  , 0,0 , 0         , 7  , 8 , 41,4  },
editstat.cpp 95: { 6, &tl.hours[15]  , 0,0 , 0         , 7  , 8 , 41,5  },
editstat.cpp 96: { 6, &tl.hours[16]  , 0,0 , 0         , 7  , 8 , 41,6  },
editstat.cpp 97: { 6, &tl.hours[17]  , 0,0 , 0         , 7  , 8 , 41,7  },
editstat.cpp 98: { 6, &tl.hours[18]  , 0,0 , 0         , 7  , 8 , 41,8  },
editstat.cpp 99: { 6, &tl.hours[19]  , 0,0 , 0         , 7  , 8 , 41,9  },
editstat.cpp 100: { 6, &tl.hours[20]  , 0,0 , 0         , 7  , 8 , 41,10 },
editstat.cpp 101: { 6, &tl.hours[21]  , 0,0 , 0         , 7  , 8 , 41,11 },
editstat.cpp 102: { 6, &tl.hours[22]  , 0,0 , 0         , 7  , 8 , 41,12 },
editstat.cpp 103: { 6, &tl.hours[23]  , 0,0 , 0         , 7  , 8 , 41,13 },
editstat.cpp 104: { 6, &tl.totalcalls , 0,0 , 0         , 7  , 8 , 34,15 }
editstat.cpp 105: };
editstat.cpp 106: 
editstat.cpp 107: FormWindow w(9,3,62,20,0x3F,1);
editstat.cpp 108: w.open();
editstat.cpp 109: w.title(form(" Hourly System Usage (%d days) ",tl.numdays));
editstat.cpp 110: w << "\n";
editstat.cpp 111: 
editstat.cpp 112: for(int i=0;i<12;i++) w << form(" %02d:00-%02d:59 :            %02d:00-%02d:59 :\n",i,i,i+12,i+12);
editstat.cpp 113: 
editstat.cpp 114: w << "\n          Total # remote calls :";
editstat.cpp 115: 
editstat.cpp 116: w.define(fld,25,0x3E);
editstat.cpp 117: 
editstat.cpp 118: tsw_cursoron();
editstat.cpp 119: 
editstat.cpp 120: w.process();
editstat.cpp 121: 
editstat.cpp 122: tsw_cursoroff();
editstat.cpp 123: 
editstat.cpp 124: write_timelog();
editstat.cpp 125: }
editstat.cpp 126: 
editstat.cpp 127: 
editstat.cpp 128: void
editstat.cpp 129: edit_weekly()
editstat.cpp 130: {
editstat.cpp 131: if(read_timelog()<0)
editstat.cpp 132: {
editstat.cpp 133: tsw_beep();
editstat.cpp 134: return;
editstat.cpp 135: }
editstat.cpp 136: 
editstat.cpp 137: Field fld[] = {
editstat.cpp 138: { 6, &tl.weeks[0]   , 0,0 , 0         , 5  , 6 ,  7, 2  },
editstat.cpp 139: { 6, &tl.weeks[1]   , 0,0 , 0         , 5  , 6 ,  7, 3  },
editstat.cpp 140: { 6, &tl.weeks[2]   , 0,0 , 0         , 5  , 6 ,  7, 4  },
editstat.cpp 141: { 6, &tl.weeks[3]   , 0,0 , 0         , 5  , 6 ,  7, 5  },
editstat.cpp 142: { 6, &tl.weeks[4]   , 0,0 , 0         , 5  , 6 ,  7, 6  },
editstat.cpp 143: { 6, &tl.weeks[5]   , 0,0 , 0         , 5  , 6 ,  7, 7  },
editstat.cpp 144: { 6, &tl.weeks[6]   , 0,0 , 0         , 5  , 6 ,  7, 8  },
editstat.cpp 145: { 6, &tl.weeks[7]   , 0,0 , 0         , 5  , 6 ,  7, 9  },
editstat.cpp 146: { 6, &tl.weeks[8]   , 0,0 , 0         , 5  , 6 ,  7,10  },
editstat.cpp 147: { 6, &tl.weeks[9]   , 0,0 , 0         , 5  , 6 ,  7,11  },
editstat.cpp 148: { 6, &tl.weeks[10]  , 0,0 , 0         , 5  , 6 ,  7,12  },
editstat.cpp 149: { 6, &tl.weeks[11]  , 0,0 , 0         , 5  , 6 , 19, 2  },
editstat.cpp 150: { 6, &tl.weeks[12]  , 0,0 , 0         , 5  , 6 , 19, 3  },
editstat.cpp 151: { 6, &tl.weeks[13]  , 0,0 , 0         , 5  , 6 , 19, 4  },
editstat.cpp 152: { 6, &tl.weeks[14]  , 0,0 , 0         , 5  , 6 , 19, 5  },
editstat.cpp 153: { 6, &tl.weeks[15]  , 0,0 , 0         , 5  , 6 , 19, 6  },
editstat.cpp 154: { 6, &tl.weeks[16]  , 0,0 , 0         , 5  , 6 , 19, 7  },
editstat.cpp 155: { 6, &tl.weeks[17]  , 0,0 , 0         , 5  , 6 , 19, 8  },
editstat.cpp 156: { 6, &tl.weeks[18]  , 0,0 , 0         , 5  , 6 , 19, 9  },
editstat.cpp 157: { 6, &tl.weeks[19]  , 0,0 , 0         , 5  , 6 , 19,10  },
editstat.cpp 158: { 6, &tl.weeks[20]  , 0,0 , 0         , 5  , 6 , 19,11  },
editstat.cpp 159: { 6, &tl.weeks[21]  , 0,0 , 0         , 5  , 6 , 19,12  },
editstat.cpp 160: { 6, &tl.weeks[22]  , 0,0 , 0         , 5  , 6 , 31, 2  },
editstat.cpp 161: { 6, &tl.weeks[23]  , 0,0 , 0         , 5  , 6 , 31, 3  },
editstat.cpp 162: { 6, &tl.weeks[24]  , 0,0 , 0         , 5  , 6 , 31, 4  },
editstat.cpp 163: { 6, &tl.weeks[25]  , 0,0 , 0         , 5  , 6 , 31, 5  },
editstat.cpp 164: { 6, &tl.weeks[26]  , 0,0 , 0         , 5  , 6 , 31, 6  },
editstat.cpp 165: { 6, &tl.weeks[27]  , 0,0 , 0         , 5  , 6 , 31, 7  },
editstat.cpp 166: { 6, &tl.weeks[28]  , 0,0 , 0         , 5  , 6 , 31, 8  },
editstat.cpp 167: { 6, &tl.weeks[29]  , 0,0 , 0         , 5  , 6 , 31, 9  },
editstat.cpp 168: { 6, &tl.weeks[30]  , 0,0 , 0         , 5  , 6 , 31,10  },
editstat.cpp 169: { 6, &tl.weeks[31]  , 0,0 , 0         , 5  , 6 , 31,11  },
editstat.cpp 170: { 6, &tl.weeks[32]  , 0,0 , 0         , 5  , 6 , 31,12  },
editstat.cpp 171: { 6, &tl.weeks[33]  , 0,0 , 0         , 5  , 6 , 43, 2  },
editstat.cpp 172: { 6, &tl.weeks[34]  , 0,0 , 0         , 5  , 6 , 43, 3  },
editstat.cpp 173: { 6, &tl.weeks[35]  , 0,0 , 0         , 5  , 6 , 43, 4  },
editstat.cpp 174: { 6, &tl.weeks[36]  , 0,0 , 0         , 5  , 6 , 43, 5  },
editstat.cpp 175: { 6, &tl.weeks[37]  , 0,0 , 0         , 5  , 6 , 43, 6  },
editstat.cpp 176: { 6, &tl.weeks[38]  , 0,0 , 0         , 5  , 6 , 43, 7  },
editstat.cpp 177: { 6, &tl.weeks[39]  , 0,0 , 0         , 5  , 6 , 43, 8  },
editstat.cpp 178: { 6, &tl.weeks[40]  , 0,0 , 0         , 5  , 6 , 43, 9  },
editstat.cpp 179: { 6, &tl.weeks[41]  , 0,0 , 0         , 5  , 6 , 43,10  },
editstat.cpp 180: { 6, &tl.weeks[42]  , 0,0 , 0         , 5  , 6 , 43,11  },
editstat.cpp 181: { 6, &tl.weeks[43]  , 0,0 , 0         , 5  , 6 , 43,12  },
editstat.cpp 182: { 6, &tl.weeks[44]  , 0,0 , 0         , 5  , 6 , 55, 2  },
editstat.cpp 183: { 6, &tl.weeks[45]  , 0,0 , 0         , 5  , 6 , 55, 3  },
editstat.cpp 184: { 6, &tl.weeks[46]  , 0,0 , 0         , 5  , 6 , 55, 4  },
editstat.cpp 185: { 6, &tl.weeks[47]  , 0,0 , 0         , 5  , 6 , 55, 5  },
editstat.cpp 186: { 6, &tl.weeks[48]  , 0,0 , 0         , 5  , 6 , 55, 6  },
editstat.cpp 187: { 6, &tl.weeks[49]  , 0,0 , 0         , 5  , 6 , 55, 7  },
editstat.cpp 188: { 6, &tl.weeks[50]  , 0,0 , 0         , 5  , 6 , 55, 8  },
editstat.cpp 189: { 6, &tl.weeks[51]  , 0,0 , 0         , 5  , 6 , 55, 9  },
editstat.cpp 190: { 6, &tl.weeks[52]  , 0,0 , 0         , 5  , 6 , 55,10  },
editstat.cpp 191: { 6, &tl.totalcalls , 0,0 , 0         , 5  , 6 , 40,14  }
editstat.cpp 192: };
editstat.cpp 193: 
editstat.cpp 194: FormWindow w(8,5,72,20,0x1F,1);
editstat.cpp 195: w.open();
editstat.cpp 196: w.title(" Weekly System Usage ");
editstat.cpp 197: w << "\n";
editstat.cpp 198: 
editstat.cpp 199: for(int i=1;i<=11;i++) w << form(" %2d :        %2d :        %2d :        %2d :        %2d :\n",i,i+11,i+22,i+33,i+44);
editstat.cpp 200: 
editstat.cpp 201: w.attrib(0x1B);
editstat.cpp 202: w << "\n                Total # remote calls :";
editstat.cpp 203: 
editstat.cpp 204: w.define(fld,54,0x1E);
editstat.cpp 205: 
editstat.cpp 206: tsw_cursoron();
editstat.cpp 207: 
editstat.cpp 208: w.process();
editstat.cpp 209: 
editstat.cpp 210: tsw_cursoroff();
editstat.cpp 211: 
editstat.cpp 212: write_timelog();
editstat.cpp 213: }
editstat.cpp 214: 
editstat.cpp 215: 